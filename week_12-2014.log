NOTE: Copyright (c) 2002-2008 by SAS Institute Inc., Cary, NC, USA.
NOTE: SAS (r) Proprietary Software 9.2 (TS2M3)
      Licensed to ROGERS COMMUNICATIONS INC, Site 70065892.
NOTE: This session is executing on the XP_PRO  platform.



NOTE: SAS initialization used:
      real time           9.64 seconds
      cpu time            0.74 seconds

1    %let host=rcirs133 7551;
2    options remote=host comamid=tcp;
3    filename rlink 'C:\Program Files\SAS\SASFoundation\9.2\connect\saslink\tcpunix.scr';
4    signon ;
NOTE: Remote signon to HOST commencing (SAS Release 9.02.02M3P041310).
NOTE: Script file 'tcpunix.scr' entered.
NOTE: Copyright (c) 2002-2008 by SAS Institute Inc., Cary, NC, USA.
NOTE: SAS (r) Proprietary Software 9.2 (TS2M3)
      Licensed to ROGERS COMMUNICATIONS, Site 70081893.
NOTE: This session is executing on the AIX 6.1 (AIX 64) platform.



You are running SAS 9. Some SAS 8 files will be automatically converted
by the V9 engine; others are incompatible.  Please see
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is
recommended for converting all your SAS libraries from any
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.10 seconds
      cpu time            0.03 seconds

NOTE: Remote signon to HOST complete.
5
6    rsubmit;
NOTE: Remote submit to HOST commencing.
1    libname smtlink  '/opt/sas9/Data/Ent_rep/RAJ/Smartlink/';
NOTE: Libref SMTLINK was successfully assigned as follows:
      Engine:        V9
      Physical Name: /opt/sas9/Data/Ent_rep/RAJ/Smartlink
2    libname raj  '/opt/sas9/Data/Ent_rep/RAJ/coswk0012/';
NOTE: Libref RAJ was successfully assigned as follows:
      Engine:        V9
      Physical Name: /opt/sas9/Data/Ent_rep/RAJ/coswk0012
3    libname copy  '/opt/sas9/Data/Ent_rep/RAJ/coswk0012/copy';
NOTE: Libref COPY was successfully assigned as follows:
      Engine:        V9
      Physical Name: /opt/sas9/Data/Ent_rep/RAJ/coswk0012/copy
4    libname marquee oracle username=RX831697 password=XXXXXXXX path=RBDW_P  schema=marquee;
NOTE: Libref MARQUEE was successfully assigned as follows:
      Engine:        ORACLE
      Physical Name: RBDW_P
5    libname m_owner oracle username=RX831697 password=XXXXXXXX path=RBDW_P  schema=marquee_owner;
NOTE: Libref M_OWNER was successfully assigned as follows:
      Engine:        ORACLE
      Physical Name: RBDW_P
6    /*libname m_rpt_p oracle user=RX831697         password=Rkj2_VxP     path=GCDM_P
6  ! SCHEMA=MARQUEE_MGTRPT; */
7    libname ODS oracle PRESERVE_COL_NAMES=YES PRESERVE_TAB_NAMES=YES
8                         user=RX831697
9                         pass=XXXXXXXX
10                        path=ODIN
11                        schema=ods PRESERVE_COL_NAMES=no PRESERVE_TAB_NAMES=no;
NOTE: Libref ODS was successfully assigned as follows:
      Engine:        ORACLE
      Physical Name: ODIN
12
13
14   libname HUP oracle PRESERVE_COL_NAMES=YES PRESERVE_TAB_NAMES=YES
15                        user=RX831697
16                        pass=XXXXXXXX
17                        path=ODIN
18                        schema=HUP PRESERVE_COL_NAMES=no PRESERVE_TAB_NAMES=no;
NOTE: Libref HUP was successfully assigned as follows:
      Engine:        ORACLE
      Physical Name: ODIN
19
20
21   libname SMB oracle PRESERVE_COL_NAMES=YES PRESERVE_TAB_NAMES=YES
22                        user=RX831697
23                        pass=XXXXXXXX
24                        path=ODIN
25                        schema=SMB PRESERVE_COL_NAMES=no PRESERVE_TAB_NAMES=no;
NOTE: Libref SMB was successfully assigned as follows:
      Engine:        ORACLE
      Physical Name: ODIN
NOTE: Remote submit to HOST complete.
7    libname raj      slibref=raj     server=host;
NOTE: Libref RAJ was successfully assigned as follows:
      Engine:        REMOTE
      Physical Name: /opt/sas9/Data/Ent_rep/RAJ/coswk0012
8    libname copy     slibref=copy     server=host;
NOTE: Libref COPY was successfully assigned as follows:
      Engine:        REMOTE
      Physical Name: /opt/sas9/Data/Ent_rep/RAJ/coswk0012/copy
9    libname marquee  slibref=marquee  server=host;
NOTE: Libref MARQUEE was successfully assigned as follows:
      Engine:        REMOTE
      Physical Name: RBDW_P
10   libname m_owner  slibref=m_owner  server=host;
NOTE: Libref M_OWNER was successfully assigned as follows:
      Engine:        REMOTE
      Physical Name: RBDW_P
11   libname rwork    slibref=work     server=host;
NOTE: Libref RWORK was successfully assigned as follows:
      Engine:        REMOTE
      Physical Name: /edwpl/sastmp/SAS_work2C6103610340_rcirs133
12   /*libname m_rpt_p  slibref=m_rpt_p  server=host;*/
13   libname ods      slibref=ods      server=host;
NOTE: Libref ODS was successfully assigned as follows:
      Engine:        REMOTE
      Physical Name: ODIN
14   libname hup      slibref=hup      server=host;
NOTE: Libref HUP was successfully assigned as follows:
      Engine:        REMOTE
      Physical Name: ODIN
15   libname smb      slibref=smb      server=host;
NOTE: Libref SMB was successfully assigned as follows:
      Engine:        REMOTE
      Physical Name: ODIN

16   %let ReportDate = %sysfunc(intnx(week.7, "&SYSDATE"D, 0), DATE9.);
17   %let StartDate = %sysfunc(intnx(week.1, "&ReportDate"D, 0), DATE9.);
18   %put &ReportDate;
29MAR2014
19   %put &StartDate;
23MAR2014
20   %let wsd=&StartDate:00:00:00;
21   %let wed=&ReportDate:23:59:59;
22   %put &wsd;
23MAR2014:00:00:00
23   %put &wed;
29MAR2014:23:59:59
24   *** Rogers save transaction from Smartlink ****;
25   /**/
26   /*libname fidelio odbc dsn=Smartlink  schema=dbo;*/
27   libname slink odbc dsn=smartlink schema=dbo;
NOTE: Libref SLINK was successfully assigned as follows:
      Engine:        ODBC
      Physical Name: smartlink
28   data Smartlink_Weekly;
29   set slink.VIEW_RWCOS_REPORT;
30   where  "&StartDate"d le datepart(SESSIONSTARTTIME) le "&ReportDate"d;
31   run;

NOTE: There were 15329 observations read from the data set SLINK.VIEW_RWCOS_REPORT.
      WHERE ('23MAR2014'D<=DATEPART(SESSIONSTARTTIME)) and (DATEPART(SESSIONSTARTTIME)<='29MAR2014'D);
NOTE: The data set WORK.SMARTLINK_WEEKLY has 15329 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           16:52.53
      cpu time            0.73 seconds


32
33
34   /*rsubmit;*/
35   data Week_SmartLast_Rogers;
36   length BAN 8 SUBSCRIBER_NO $20;
37   set Smartlink_Weekly(rename=(BAN=BAN_Orig));
38   if SESSIONSTARTTIME eq . then delete;
39   BAN=input(BAN_Orig,9.);
40   SUBSCRIBER_NO=put(CTN,10.);
41   TransactionDate=datepart(SESSIONSTARTTIME);
42   Week=week(TransactionDate);
43   format TransactionDate date9.;
44   run;

NOTE: There were 15329 observations read from the data set WORK.SMARTLINK_WEEKLY.
NOTE: The data set WORK.WEEK_SMARTLAST_ROGERS has 15329 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           1.75 seconds
      cpu time            0.06 seconds


45
46
47
48   proc freq data=Week_SmartLast_Rogers;
49   table Week TransactionDate;
50   run;

NOTE: There were 15329 observations read from the data set WORK.WEEK_SMARTLAST_ROGERS.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.65 seconds
      cpu time            0.04 seconds


51   /*endrsubmit;*/
52   /**/
53   /**/
54   /**/
55   /**** Fido save transactions from Smartlink  ****;*/
56   libname fido odbc dsn=fidoreporting schema=dbo user=process_sales pw=XXXXXXXXX;

NOTE: Libref FIDO was successfully assigned as follows:
      Engine:        ODBC
      Physical Name: fidoreporting
57   data Verif2;
58   set fido.tbl_Fidelio_Weekly_save_offers;
59   where "&StartDate"d le datepart(Transaction_Date) le "&ReportDate"d;
60   run;

NOTE: There were 24801 observations read from the data set FIDO.tbl_Fidelio_Weekly_save_offers.
      WHERE ('23MAR2014'D<=DATEPART(Transaction_Date)) and (DATEPART(Transaction_Date)<='29MAR2014'D);
NOTE: The data set WORK.VERIF2 has 24801 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           5.65 seconds
      cpu time            0.23 seconds


61
62
63   /*rsubmit;*/
64   data Week_SmartLast_Fido;
65   length BAN 8 SUBSCRIBER_NO $20;
66   set Verif2;
67   if Credit_Value ne . and Month_Value eq . and default_duration_max ne . then
67 ! Month_Value=default_duration_max;
68   BAN=BCC_Account;
69   SUBSCRIBER_NO=put(Sub_Fido_No,10.);
70   TransactionDate=datepart(Transaction_Date);
71   Week=week(TransactionDate);
72   format TransactionDate date9.;
73   run;

NOTE: There were 24801 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.WEEK_SMARTLAST_FIDO has 24801 observations and 33 variables.
NOTE: DATA statement used (Total process time):
      real time           2.64 seconds
      cpu time            0.12 seconds


74   proc freq data=Week_SmartLast_Fido;
75   table Week TransactionDate;
76   run;

NOTE: There were 24801 observations read from the data set WORK.WEEK_SMARTLAST_FIDO.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


NOTE: There were 24801 observations read from the data set WORK.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 33 variables.
NOTE: There were 15329 observations read from the data set WORK.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 20 variables.
77   libname test 'K:\Team\Raj\COS_DATA\IPTV_Footprint';
NOTE: Libref TEST was successfully assigned as follows:
      Engine:        V9
      Physical Name: K:\Team\Raj\COS_DATA\IPTV_Footprint

NOTE: Data file TEST.CABLE_FTPT_MAR2014.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.
78   proc sql;
79   create table cable_ftpt_dec2011 (DROP= IN_TERR_IND) as
80   select postal_code as Postalcode,
81   from test.Cable_ftpt_mar2014;
          ----                   -
          22                     76
ERROR 22-322: Syntax error, expecting one of the following: !, !!, &, (, *, **, +, ',', -, /, <, <=,
              <>, =, >, >=, ?, AND, BETWEEN, CONTAINS, EQ, EQT, FROM, GE, GET, GT, GTT, LE, LET,
              LIKE, LT, LTT, NE, NET, OR, ^=, |, ||, ~=.

ERROR 76-322: Syntax error, statement will be ignored.

81 ! from test.Cable_ftpt_mar2014;
                                 -
                                 22
ERROR 22-322: Syntax error, expecting one of the following: a quoted string, !, !!, &, *, **, +, ',',
              -, /, <, <=, <>, =, >, >=, ?, AND, AS, BETWEEN, CONTAINS, EQ, EQT, FORMAT, FROM, GE,
              GET, GT, GTT, IN, INFORMAT, INTO, IS, LABEL, LE, LEN, LENGTH, LET, LIKE, LT, LTT, NE,
              NET, NOT, NOTIN, OR, TRANSCODE, ^, ^=, |, ||, ~, ~=.

82   quit;
NOTE: The SAS System stopped processing this step because of errors.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds


83   proc sql;
84   create table cable_ftpt_dec2011 (DROP= IN_TERR_IND) as
85   select postal_code as Postalcode
86   from test.Cable_ftpt_mar2014;
NOTE: Data file TEST.CABLE_FTPT_MAR2014.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.
WARNING: The variable IN_TERR_IND in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: Table WORK.CABLE_FTPT_DEC2011 created, with 224888 rows and 1 columns.

87   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.62 seconds
      cpu time            0.01 seconds


NOTE: There were 224888 observations read from the data set WORK.CABLE_FTPT_DEC2011.
NOTE: The data set RAJ.CABLE_FTPT_DEC2011 has 224888 observations and 1 variables.
88   %let ReportDate = %sysfunc(intnx(week.7, "&SYSDATE"D, 0), DATE9.);
89   %let StartDate = %sysfunc(intnx(week.1, "&ReportDate"D, 0), DATE9.);
90   %put &ReportDate;
29MAR2014
91   %put &StartDate;
23MAR2014
92   %let wsd=&StartDate:00:00:00;
93   %let wed=&ReportDate:23:59:59;
94   %put &wsd;
23MAR2014:00:00:00
95   %put &wed;
29MAR2014:23:59:59
96   %LET w_nb = %SYSFUNC(week("&startdate"D));
97   %put &w_nb;
12
98   %syslput r_rd=&ReportDate;
99   %syslput r_sd=&StartDate;
100
101  %syslput r_wsd=&wsd;
102  %syslput r_wed=&wed;
103  %syslput r_w_nb=&w_nb;
104
105  /*%syslput r_y1=&y1;*/
106  /*%syslput r_m1=&m1;*/
107  /*%syslput r_d1=&d1;*/
108
109  /*%syslput r_y2=&y2;*/
110  /*%syslput r_m2=&m2;*/
111  /*%syslput r_d2=&d2;*/
112
113  filename sascode "D:\SAS\ER_Reporting\SasCoding\CostofSave\rcirs133\Code";
114  options source;
115  %inc sascode(Part1M.sas);
NOTE: Remote submit to HOST commencing.
26   data worktable0;
27   set ODS.Subscriber(keep=CUSTOMER_ID FRANCHISE_TP);
28   where trim(FRANCHISE_TP) in ("F","R");
29   run;

NOTE: There were 43202018 observations read from the data set ODS.SUBSCRIBER.
      WHERE TRIM(FRANCHISE_TP) in ('F', 'R');
NOTE: The data set WORK.WORKTABLE0 has 43202018 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           7:00.88
      cpu time            47.70 seconds


30   proc sort data=worktable0;
31   by CUSTOMER_ID FRANCHISE_TP;
32   run;

NOTE: There were 43202018 observations read from the data set WORK.WORKTABLE0.
NOTE: The data set WORK.WORKTABLE0 has 43202018 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           21.89 seconds
      cpu time            21.74 seconds


33   proc summary data=worktable0 nway;
34   by CUSTOMER_ID FRANCHISE_TP;
35   output out=worktable0(drop=_TYPE_ _FREQ_);
36   run;

NOTE: There were 43202018 observations read from the data set WORK.WORKTABLE0.
NOTE: The data set WORK.WORKTABLE0 has 22059981 observations and 2 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           1:51.84
      cpu time            1:05.92


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
37   %macro saveplan(mthstrt,mthend,savetab/*,operid*/);
38   proc sql noprint;
39   create table worktable1 as
40   select * from Ods.Subscriber_price_plan
41   /*select * from Ods.Subscriber_price_plan_future*/
42               where &mthstrt <= EFFECTIVE_ISSUE_DATE <= &mthend/* and EXPIRATION_DATE = .*/;
43   quit;
44
45   proc sql noprint;
46   create table worktable11 as
47   select * from Ods.Subscriber_price_plan_future
48               where &mthstrt <= EFFECTIVE_ISSUE_DATE <= &mthend/* and EXPIRATION_DATE = .*/;
49   quit;
50
51   data worktable1;
52   set worktable1 worktable11;
53   if EXPIRATION_DATE eq . then EXPIRATION_DATE='31DEC2099:00:00:00'DT;
54   run;
55
56   proc sql noprint;
57   create table worktable2 as
58   select * from Ods.Subscriber_price_plan
59   /*select * from Ods.Subscriber_price_plan_future*/
60                 where &mthstrt <= EXPIRATION_ISSUE_DATE <= &mthend /*and EXPIRATION_DATE >
60 ! &mthstrt*/;
61   quit;
62
63
64   proc sort data=worktable1;
65   by BAN SUBSCRIBER_NO;
66   run;
67
68   proc summary data=worktable1 nway;
69   by BAN SUBSCRIBER_NO;
70   output out=worktable3(drop=_TYPE_ _FREQ_);
71   run;
72
73   proc sort data=worktable2;
74   by BAN SUBSCRIBER_NO;
75   run;
76
77   proc summary data=worktable2 nway;
78   by BAN SUBSCRIBER_NO;
79   output out=worktable4(drop=_TYPE_ _FREQ_);
80   run;
81
82   data worktable1;
83   merge worktable4(in=a)
84         worktable1(in=b);
85   by BAN SUBSCRIBER_NO;
86   if a and b;
87   run;
88
89   data worktable2;
90   merge worktable3(in=a)
91         worktable2(in=b);
92   by BAN SUBSCRIBER_NO;
93   if a and b;
94   run;
95
96
97   data worktable3;
98   set worktable2(/*where=(EFFECTIVE_DATE lt &mthstrt)*/ in=a)
99       worktable1(/*where=(EXPIRATION_DATE gt &mthend)*/ in=b);
100  if a then Type="PreSave";
101  if b then Type="PosSave";
102  run;
103
104  data worktable4;
105  set worktable3(keep=SOC);
106  run;
107
108  proc sort data=worktable4;
109  by SOC;
110  run;
111
112  proc summary data=worktable4 nway;
113  by SOC;
114  output out=worktable4(drop=_TYPE_ _FREQ_);
115  run;
116
117  data worktable5;
118  set Ods.Price_plan_group(keep=SOC PPLAN_GROUP_DESC PPLAN_SERIES_TYPE_DESC);
119  run;
120
121  proc sort data=worktable5;
122  by SOC;
123  run;
124
125  data worktable6;
126  set Ods.Service_offering_Current(keep=SOC SOC_DESCRIPTION);
127  run;
128
129  proc sort data=worktable6;
130  by SOC;
131  run;
132
133  data worktable7;
134  merge worktable4(in=a) worktable5 worktable6;
135  by SOC;
136  if a;
137  run;
138
139  data worktable7;
140  set worktable7;
141       if ((index(upcase(PPLAN_GROUP_DESC),'RET') ne 0) or
142           (index(upcase(SOC_DESCRIPTION),'RET') ne 0) or
143           (index(upcase(SOC),'RET') ne 0) or
144           (index(upcase(SOC),'SAV') ne 0) or
145           (index(upcase(SOC),'RTF') ne 0)) then SavePlan="Yes";
146  else if not ((index(upcase(PPLAN_GROUP_DESC),'RET') ne 0) or
147              (index(upcase(SOC_DESCRIPTION),'RET') ne 0) or
148              (index(upcase(SOC),'RET') ne 0) or
149              (index(upcase(SOC),'SAV') ne 0) or
150              (index(upcase(SOC),'RTF') ne 0)) then SavePlan="No ";
151  run;
152
153  proc sort data=worktable7;
154  by SOC;
155  run;
156
157  proc sort data=worktable3;
158  by SOC;
159  run;
160
161  data worktable3;
162  merge worktable3(in=a) worktable7;
163  by SOC;
164  if a;
165  run;
166  *************Start PLAN RATE Start **********;
167  data worktable1(drop=EFFECTIVE_DATE EXPIRATION_DATE);
168  set ODS.PP_RC_RATE(keep=SOC EFFECTIVE_DATE RATE EXPIRATION_DATE SUSPENSION_AMOUNT
168! SECONDARY_AMOUNT);
169  where SUSPENSION_AMOUNT eq 100;
170  EffectiveDate=datepart(EFFECTIVE_DATE);
171       if EXPIRATION_DATE ne . then ExpirationDate=datepart(EXPIRATION_DATE);
172  else if EXPIRATION_DATE eq . then ExpirationDate=mdy(12,31,2099);
173  format EffectiveDate ExpirationDate date9.;
174  run;
175
176  proc sort data=worktable1;
177  by SOC EffectiveDate ExpirationDate;
178  run;
179
180  data worktable2(keep=SOC RATE SECONDARY_AMOUNT SUSPENSION_AMOUNT);
181  set worktable1;
182  by SOC EffectiveDate ExpirationDate;
183  if last.SOC;
184  run;
185
186  /* To be added: Oct 11th, 2011. To take into account TIER_LEVEL_CODE Start;
187  data worktable11(drop=EFFECTIVE_DATE EXPIRATION_DATE);
188  set ODS.PP_RC_RATE(keep=SOC EFFECTIVE_DATE RATE EXPIRATION_DATE SUSPENSION_AMOUNT
188! SECONDARY_AMOUNT TIER_LEVEL_CODE);
189  * where SUSPENSION_AMOUNT eq .;
190  where TIER_LEVEL_CODE gt 0;
191  EffectiveDate=datepart(EFFECTIVE_DATE);
192       if EXPIRATION_DATE ne . then ExpirationDate=datepart(EXPIRATION_DATE);
193  else if EXPIRATION_DATE eq . then ExpirationDate=mdy(12,31,2099);
194  format EffectiveDate ExpirationDate date9.;
195  run;
196
197  proc sort data=worktable11;
198  by SOC TIER_LEVEL_CODE EffectiveDate ExpirationDate;
199  run;
200
201  data worktable11(keep=SOC RATE SECONDARY_AMOUNT SUSPENSION_AMOUNT TIER_LEVEL_CODE);
202  set worktable11;
203  by SOC TIER_LEVEL_CODE EffectiveDate ExpirationDate;
204  if last.TIER_LEVEL_CODE;
205  run;
206
207  proc summary data=worktable11 nway;
208  var RATE SECONDARY_AMOUNT;
209  * where 0 le TIER_LEVEL_CODE le 10; * 10 first tiers;
210  by SOC;
211  output out=worktable11(drop=_TYPE_ _FREQ_)
212         mean=;
213  run;
214
215  data worktable11;
216  set worktable11;
217  SUSPENSION_AMOUNT=.;
218  run;
219
220  data worktable2;
221  merge worktable2 worktable11;
222  by SOC;
223  run;
224  * To be added: Oct 11th, 2011. To take into account TIER_LEVEL_COD End;*/
225
226  proc sort data=worktable3;
227  by SOC;
228  run;
229
230
231  data worktable3;
232  merge worktable3(in=a) worktable2;
233  by SOC;
234  if a;
235  run;
236  **************** End PLAN RATE End *******;
237
238  proc sort data=worktable3;
239  by BAN SUBSCRIBER_NO FRANCHISE_ELIGIBILITY;
240  run;
241
242  proc sql;
243  create table worktable2 as
244  select
245      A.*,B.FRANCHISE_TP
246  from
247      worktable3 A,
248      worktable0 B
249  where
250      A.BAN = B.CUSTOMER_ID;
251  quit;
252  run;
253
254  data &savetab;
255  set worktable2;
256  run;
257
258  /* First way to get Operator_ID
259  data worktable3;
260  set worktable2(keep=BAN SUBSCRIBER_NO FRANCHISE_ELIGIBILITY SOC EFFECTIVE_DATE EXPIRATION_DATE
261                      EFFECTIVE_ISSUE_DATE EXPIRATION_ISSUE_DATE Type SavePlan FRANCHISE_TP);
262  where trim(Type) eq "PosSave" and trim(SavePlan) eq "Yes";
263  run;
264
265  data worktable4(rename=(EFF_DATE=EFFECTIVE_DATE SOC=SOCOption));
266  set ODS.Soc_Activity(keep=BAN SUBSCRIBER_NO SOC EFF_DATE EXP_DATE USER_ID--WAIVE_OPER_ID);
267  where &mthstrt <= EFF_DATE <= &mthend;
268  run;
269
270  proc sort data=worktable3;
271  by BAN SUBSCRIBER_NO EFFECTIVE_DATE;
272  run;
273
274  data worktable3;
275  set worktable3;
276  by BAN SUBSCRIBER_NO EFFECTIVE_DATE;
277  if last.SUBSCRIBER_NO;
278  run;
279
280  proc sort data=worktable4;
281  by BAN SUBSCRIBER_NO EFFECTIVE_DATE;
282  run;
283
284  data &operid;
285  merge worktable3(in=a) worktable4;
286  by BAN SUBSCRIBER_NO EFFECTIVE_DATE;
287  if a;
288  run;*/
289
290  ****** Second way to get Operator_ID;
291  /*data worktable3;
292  set worktable2(keep=BAN SUBSCRIBER_NO SOC SOC_EFFECTIVE_DATE Type SavePlan);
293  where trim(Type) eq "PosSave" and trim(SavePlan) eq "Yes";
294  run;
295
296  proc sql;
297  create table worktable4 as
298  select
299      A.*,B.*
300  from
301      worktable3 A,
302      ODS.Subscriber_All_Status B
303  where
304      A.BAN = B.CUSTOMER_ID and A.SUBSCRIBER_NO = B.SUBSCRIBER_NO and A.SOC = B.PRICE_PLAN and
305      A.SOC_EFFECTIVE_DATE = B.SOC_EFFECTIVE_DATE;
306  quit;
307  run;
308
309  data &operid;
310  set worktable4;
311  run;*/
312
313  ********start Post save plan Start ********;
314  data Worktable1(drop=SOC_DESCRIPTION);
315  set &savetab(keep=BAN SOC EFFECTIVE_ISSUE_DATE EFFECTIVE_DATE EXPIRATION_DATE SOC_DESCRIPTION);
316  where (index(upcase(SOC_DESCRIPTION),'SHAR') ne 0 or
317        index(upcase(SOC_DESCRIPTION),'FAM') ne 0 or
318        index(upcase(SOC_DESCRIPTION),'COUP') ne 0 or
319        index(upcase(SOC_DESCRIPTION),'POOL') ne 0) and
320        &mthstrt <= EFFECTIVE_ISSUE_DATE <= &mthend;
321  Week=week(datepart(EFFECTIVE_ISSUE_DATE));
322  run;
323
324  proc sort data=Worktable1;
325  by Week BAN SOC EFFECTIVE_ISSUE_DATE;
326  run;
327
328  data Worktable1;
329  set Worktable1;
330  by Week BAN SOC EFFECTIVE_ISSUE_DATE;
331  if last.EFFECTIVE_ISSUE_DATE;
332  run;
333
334  proc sql;
335  create table Worktable2 as
336  select A.* , B.Week
337  from
338      ODS.Subscriber_Price_Plan A, Worktable1 B
339  where
340          A.BAN = B.BAN
341   and A.SOC = B.SOC
342      and (A.EFFECTIVE_DATE <= B.EXPIRATION_DATE or B.EXPIRATION_DATE = .)
343      and (A.EXPIRATION_DATE >= B.EFFECTIVE_DATE or A.EXPIRATION_DATE = .);
344  quit;
345  run;
346
347  proc sql;
348  create table Worktable3 as
349  select A.* , B.Week
350  from
351      ODS.Subscriber_Price_Plan_Future A, Worktable1 B
352  where
353          A.BAN = B.BAN
354   and A.SOC = B.SOC
355      and (A.EFFECTIVE_DATE <= B.EXPIRATION_DATE or B.EXPIRATION_DATE = .)
356      and (A.EXPIRATION_DATE >= B.EFFECTIVE_DATE or A.EXPIRATION_DATE = .);
357  quit;
358  run;
359
360  data Worktable4;
361  set Worktable2(keep=Week BAN SUBSCRIBER_NO SOC SOC_SEQ_NO)
362      Worktable3(keep=Week BAN SUBSCRIBER_NO SOC SOC_SEQ_NO);
363  run;
364
365  proc sort data=Worktable4;
366  by Week BAN SUBSCRIBER_NO SOC_SEQ_NO;
367  run;
368
369  data Worktable4;
370  set Worktable4;
371  by Week BAN SUBSCRIBER_NO SOC_SEQ_NO;
372  if last.SUBSCRIBER_NO;
373  run;
374
375  proc sort data=Worktable4;
376  by Week BAN SOC;
377  run;
378
379  proc summary data=Worktable4 nway;
380  by Week BAN SOC;
381  output out=Worktable5(drop=_TYPE_);
382  run;
383
384  data Worktable5(rename=(_FREQ_=NbShareSubs));
385  set Worktable5;
386  run;
387
388  data Worktable1(rename=(RATE=RATE_Orig));
389  set &savetab;
390  where &mthstrt <= EFFECTIVE_ISSUE_DATE <= &mthend;
391  Week=week(datepart(EFFECTIVE_ISSUE_DATE));
392  run;
393
394  proc sort data=Worktable1;
395  by Week BAN SOC;
396  run;
397
398  data Worktable6;
399  merge Worktable1(in=a) Worktable5;
400  by Week BAN SOC;
401  if a;
402       if (NbShareSubs gt 1 and SECONDARY_AMOUNT gt 0) or
403          (NbShareSubs gt 1 and SECONDARY_AMOUNT eq 0 and RATE_Orig gt 150) then do;
404  TotSecAMT=SECONDARY_AMOUNT*(NbShareSubs-1);
405  RATE=(sum(of RATE_Orig TotSecAMT))/NbShareSubs;
406  end;
407  else if not ((NbShareSubs gt 1 and SECONDARY_AMOUNT gt 0) or
408               (NbShareSubs gt 1 and SECONDARY_AMOUNT eq 0 and RATE_Orig gt 150)) then
408! RATE=RATE_Orig;
409  run;
410  ********End Post save plan End ********;
411
412  ********start Pre save plan Start ********;
413  data Worktable1(drop=SOC_DESCRIPTION EFFECTIVE_ISSUE_DATE);
414  set &savetab(keep=BAN SOC EXPIRATION_ISSUE_DATE EFFECTIVE_DATE EXPIRATION_DATE SOC_DESCRIPTION);
415  where (index(upcase(SOC_DESCRIPTION),'SHAR') ne 0 or
416        index(upcase(SOC_DESCRIPTION),'FAM') ne 0 or
417        index(upcase(SOC_DESCRIPTION),'COUP') ne 0 or
418        index(upcase(SOC_DESCRIPTION),'POOL') ne 0) and
419        &mthstrt <= EXPIRATION_ISSUE_DATE <= &mthend;
420  Week=week(datepart(EXPIRATION_ISSUE_DATE));
421  run;
422
423  proc sort data=Worktable1;
424  by Week BAN SOC EXPIRATION_ISSUE_DATE;
425  run;
426
427  data Worktable1;
428  set Worktable1;
429  by Week BAN SOC EXPIRATION_ISSUE_DATE;
430  if last.EXPIRATION_ISSUE_DATE;
431  run;
432
433  proc sql;
434  create table Worktable2 as
435  select A.* , B.Week
436  from
437      ODS.Subscriber_Price_Plan A, Worktable1 B
438  where
439          A.BAN = B.BAN
440   and A.SOC = B.SOC
441      and (A.EFFECTIVE_DATE <= B.EXPIRATION_DATE or B.EXPIRATION_DATE = .)
442      and (A.EXPIRATION_DATE >= B.EXPIRATION_DATE or A.EXPIRATION_DATE = .);
443  quit;
444  run;
445
446  proc sql;
447  create table Worktable3 as
448  select A.* , B.Week
449  from
450      ODS.Subscriber_Price_Plan_Future A, Worktable1 B
451  where
452          A.BAN = B.BAN
453   and A.SOC = B.SOC
454      and (A.EFFECTIVE_DATE <= B.EXPIRATION_DATE or B.EXPIRATION_DATE = .)
455      and (A.EXPIRATION_DATE >= B.EXPIRATION_DATE or A.EXPIRATION_DATE = .);
456  quit;
457  run;
458
459  data Worktable4;
460  set Worktable2(keep=Week BAN SUBSCRIBER_NO SOC SOC_SEQ_NO)
461      Worktable3(keep=Week BAN SUBSCRIBER_NO SOC SOC_SEQ_NO);
462  run;
463
464  proc sort data=Worktable4;
465  by Week BAN SUBSCRIBER_NO SOC_SEQ_NO;
466  run;
467
468  data Worktable4;
469  set Worktable4;
470  by Week BAN SUBSCRIBER_NO SOC_SEQ_NO;
471  if last.SUBSCRIBER_NO;
472  run;
473
474  proc sort data=Worktable4;
475  by Week BAN SOC;
476  run;
477
478  proc summary data=Worktable4 nway;
479  by Week BAN SOC;
480  output out=Worktable5(drop=_TYPE_);
481  run;
482
483  data Worktable5(rename=(_FREQ_=NbShareSubs));
484  set Worktable5;
485  run;
486
487  data Worktable1(rename=(RATE=RATE_Orig));
488  set &savetab;
489  where &mthstrt <= EXPIRATION_ISSUE_DATE <= &mthend;
490  Week=week(datepart(EXPIRATION_ISSUE_DATE));
491  run;
492
493  proc sort data=Worktable1;
494  by Week BAN SOC;
495  run;
496
497  data Worktable7;
498  merge Worktable1(in=a) Worktable5;
499  by Week BAN SOC;
500  if a;
501       if (NbShareSubs gt 1 and SECONDARY_AMOUNT gt 0) or
502          (NbShareSubs gt 1 and SECONDARY_AMOUNT eq 0 and RATE_Orig gt 150) then do;
503  TotSecAMT=SECONDARY_AMOUNT*(NbShareSubs-1);
504  RATE=(sum(of RATE_Orig TotSecAMT))/NbShareSubs;
505  end;
506  else if not ((NbShareSubs gt 1 and SECONDARY_AMOUNT gt 0) or
507               (NbShareSubs gt 1 and SECONDARY_AMOUNT eq 0 and RATE_Orig gt 150)) then
507! RATE=RATE_Orig;
508  run;
509  ********End Post save plan End ********;
510
511  data &savetab._1;
512  set Worktable6(in=a) Worktable7(in=b);
513  if a then Origin="Eff";
514  if b then Origin="Exp";
515  run;
516
517  proc freq data=&savetab._1;
518  table RATE;
519  run;
520
521  proc datasets;
522  delete worktable1 worktable11 worktable2 worktable3 worktable4 worktable5 worktable6 worktable7;
523  quit;
524  run;
525  %mend saveplan;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
526  %macro savedisc(mthstrt,mthend,savetab);
527  proc sql noprint;
528  create table worktable1 as
529  select * from ODS.BAN_Discount
530  where &mthstrt <= EFFECTIVE_DATE <= &mthend /*and trim(substr(DISCOUNT_CODE,1,2)) in
530! ("RE","RT","RD")*/;
531  quit;
532
533  data worktable1;
534  set worktable1;
535  if EXPIRATION_DATE eq . then EXPIRATION_DATE='31DEC2099:00:00:00'DT;
536  run;
537
538  data worktable3(drop=EFFECTIVE_DATE EXP_DATE);
539  set ODS.Discount_plan(keep=DISCOUNT_CODE DISC_DEPEND_CD FLAT_AMT DISC_QTY_TYPE EFFECTIVE_DATE
539! EXP_DATE
540                             DISCOUNT_DESC DISCOUNT_PLAN_LEVEL DISCOUNT_TYPE
541                             PRORATION_IND DISCOUNT_DURATION CUT_DATE CALC_METHOD PRODUCT_TYPE);
542  if EFFECTIVE_DATE ne . then DiscountEffDate=datepart(EFFECTIVE_DATE);
543  if EXP_DATE ne . then DiscountExpDate=datepart(EXP_DATE);
544  format DiscountEffDate DiscountExpDate date9.;
545  run;
546
547  data worktable3;
548  set worktable3;
549  where (DiscountEffDate le datepart(&mthend)) and (DiscountExpDate eq . or DiscountExpDate gt
549! datepart(&mthend)) /*and
550        (trim(substr(DISCOUNT_CODE,1,2)) in ("RE","RT","RD"))*/;
551  run;
552
553  proc sort data=worktable3;
554  by DISCOUNT_CODE;
555  run;
556
557
558  proc sort data=worktable1;
559  by DISCOUNT_CODE;
560  run;
561
562  data worktable1;
563  merge worktable1(in=a) worktable3;
564  by DISCOUNT_CODE;
565  if a;
566  run;
567
568  proc sort data=worktable1;
569  by BAN SUBSCRIBER_NO;
570  run;
571
572  proc sql;
573  create table worktable2 as
574  select
575      A.*,B.FRANCHISE_TP
576  from
577      worktable1 A,
578      worktable0 B
579  where
580      A.BAN = B.CUSTOMER_ID;
581  quit;
582  run;
583
584  data &savetab;
585  set worktable2;
586  run;
587
588  proc datasets;
589  delete worktable1 worktable2 worktable3;
590  quit;
591  run;
592  %mend savedisc;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
593  %macro saveoption(mthstrt,mthend,savetab);
594  proc sql noprint;
595  create table worktable2 as
596  select * from ODS.Soc_Activity
597  where &mthstrt <= EFF_DATE <= &mthend and trim(substr(SOC,1,2)) in ("RE","RT","RD");
598  quit;
599
600  data worktable2;
601  set worktable2;
602  if EXP_DATE eq . then EXP_DATE='31DEC2099:00:00:00'DT;
603  run;
604
605
606  data worktable3(drop=EFFECTIVE_DATE EXPIRATION_DATE rename=(SERVICE_TYPE=SERVICE_TYPE_SOC));
607  set ODS.SOC(keep=SOC EFFECTIVE_DATE SOC_DURATION SOC_DURATION_TYPE SOC_DESCRIPTION
608                   SERVICE_TYPE EXPIRATION_DATE);
609  if EFFECTIVE_DATE ne . then OptionEffDate=datepart(EFFECTIVE_DATE);
610  if EXPIRATION_DATE ne . then OptionExpDate=datepart(EXPIRATION_DATE);
611  format OptionEffDate OptionExpDate date9.;
612  run;
613
614  data worktable3;
615  set worktable3;
616  where (OptionEffDate le datepart(&mthend)) and (OptionExpDate eq . or OptionExpDate gt
616! datepart(&mthend)) and
617        (trim(substr(SOC,1,2)) in ("RE","RT","RD"));
618  run;
619
620  proc sort data=worktable3;
621  by SOC;
622  run;
623
624
625  proc sort data=worktable2;
626  by SOC;
627  run;
628
629  data worktable2;
630  merge worktable2(in=a) worktable3;
631  by SOC;
632  if a;
633  run;
634
635  data worktable2;
636  set worktable2;
637  where trim(SERVICE_TYPE) eq "R";
638  run;
639
640  data worktable1(drop=EFFECTIVE_DATE EXPIRATION_DATE SUSPENSION_AMOUNT);
641  set ODS.PP_RC_RATE(keep=SOC EFFECTIVE_DATE RATE EXPIRATION_DATE SUSPENSION_AMOUNT
641! SECONDARY_AMOUNT);
642  where datepart(EFFECTIVE_DATE) le &mthend and (EXPIRATION_DATE eq . or datepart(EXPIRATION_DATE)
642! gt &mthend) and
643        (SUSPENSION_AMOUNT eq 100);
644  EffectiveDate=datepart(EFFECTIVE_DATE);
645       if EXPIRATION_DATE ne . then ExpirationDate=datepart(EXPIRATION_DATE);
646  else if EXPIRATION_DATE eq . then ExpirationDate=mdy(12,31,2099);
647  format EffectiveDate ExpirationDate date9.;
648  run;
649
650  proc sort data=worktable1;
651  by SOC EffectiveDate ExpirationDate;
652  run;
653
654  data worktable1(keep=SOC RATE SECONDARY_AMOUNT);
655  set worktable1;
656  by SOC EffectiveDate ExpirationDate;
657  if last.SOC;
658  run;
659
660  proc sort data=worktable2;
661  by SOC;
662  run;
663
664
665  data worktable2;
666  merge worktable2(in=a) worktable1;
667  by SOC;
668  if a;
669  run;
670
671  proc sort data=worktable2;
672  by BAN SUBSCRIBER_NO;
673  run;
674
675  proc sql;
676  create table worktable1 as
677  select
678      A.*,B.FRANCHISE_TP
679  from
680      worktable2 A,
681      worktable0 B
682  where
683      A.BAN = B.CUSTOMER_ID;
684  quit;
685  run;
686
687  data &savetab;
688  set worktable1;
689  run;
690
691  proc datasets;
692  delete worktable1 worktable2 worktable3;
693  quit;
694  run;
695  %mend saveoption;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
696  %macro hupwill(mthstrt,mthend,will,adjhup);
697  proc sql;
698  create table worktable1 as
699  select
700      A.*,B.FRANCHISE_TP
701  from
702      /*ODS.Adjust_Temp A,*/
703      ODS.Adjustment A,
704      worktable0 B
705  where
706      A.BAN = B.CUSTOMER_ID
707      and A.ADJ_CREATION_DATE between &mthstrt and &mthend;
708  quit;
709  run;
710
711  proc sort data=worktable1;
712  by BAN SUBSCRIBER_NO;
713  run;
714
715  data worktable2;
716  set worktable1(keep=BAN SUBSCRIBER_NO ACTV_REASON_CODE);
717  where trim(ACTV_REASON_CODE) ne " ";
718  run;
719
720  proc sort data=worktable2;
721  by BAN SUBSCRIBER_NO ACTV_REASON_CODE;
722  run;
723
724  proc summary data=worktable2 nway;
725  by BAN SUBSCRIBER_NO ACTV_REASON_CODE;
726  output out=worktable2(drop=_TYPE_ _FREQ_);
727  run;
728
729  data worktable3(rename=(REASON_CODE=ACTV_REASON_CODE));
730  set ODS.Adjustment_Reason;
731  run;
732
733  proc sort data=worktable2;
734  by ACTV_REASON_CODE;
735  run;
736
737  proc sort data=worktable3;
738  by ACTV_REASON_CODE;
739  run;
740
741  data worktable2;
742  merge worktable2(in=a) worktable3;
743  by ACTV_REASON_CODE;
744  if a;
745  run;
746
747  proc sort data=worktable1;
748  by BAN SUBSCRIBER_NO ACTV_REASON_CODE;
749  run;
750
751  proc sort data=worktable2;
752  by BAN SUBSCRIBER_NO ACTV_REASON_CODE;
753  run;
754
755  data worktable1;
756  merge worktable1 worktable2;
757  by BAN SUBSCRIBER_NO ACTV_REASON_CODE;
758  run;
759
760  data &will;
761  set worktable1;
762  where trim(ADJ_DSC) in ("Goodwill/Public Relations","Goodwill on handset","Goodwill") /*and
762! FINANCE_EFF_DATE ne .*/;
763  run;
764
765  data &adjhup;
766  set worktable1;
767  where trim(ADJ_DSC) eq "Agreement-Handset" /*and FINANCE_EFF_DATE ne .*/;
768  run;
769
770  proc datasets;
771  delete worktable1 worktable2 worktable3;
772  quit;
773  run;
774  %mend hupwill;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
775  %macro hup(mthstrt,mthend,hup);
776  proc sql;
777  create table worktable1 as
778  select
779      A.*,B.FRANCHISE_TP
780  from
781      ODS.HUP_Upgrade_History A,
782      worktable0 B
783  where
784      A.BAN = B.CUSTOMER_ID
785      and A.HUP_REQUEST_DATE between &mthstrt and &mthend;
786  quit;
787  run;
788  **** Modification following HARDWARE_CHG changes as of July 22nd 2012: HARDWARE_CHG = No-term
788! price;
789  /*
790  **** Before;
791  data &hup;
792  set worktable1;
793  run;
794  */
795
796  **** After;
797  data &hup(rename=(HARDWARE_CHG=HARDWARE_CHG_20120722));
798  set worktable1;
799  if FRANCHISE_TP eq "F" then do;
800  if REBATE_AMT_2 eq . and HARDWARE_CHG ne . and SUBSIDIZED_ITEM_FEE ne . then
801     REBATE_AMT_2=HARDWARE_CHG-SUBSIDIZED_ITEM_FEE;
802  if REBATE_AMT_2 eq . and HARDWARE_CHG ne . and SUBSIDIZED_ITEM_FEE eq . then
803     REBATE_AMT_2=HARDWARE_CHG-0;
804  if REBATE_AMT_2 ne . and REBATE_AMT_2 le 0 then REBATE_AMT_2=.;
805  end;
806
807  run;
808
809  data &hup;
810  set &hup;
811       if datepart(HUP_REQUEST_DATE) lt mdy(07,22,2012) then HARDWARE_CHG=HARDWARE_CHG_20120722;
812  else if datepart(HUP_REQUEST_DATE) ge mdy(07,22,2012) then HARDWARE_CHG=SUBSIDIZED_ITEM_FEE;
813  run;
814
815  proc datasets;
816  delete worktable1;
817  quit;
818  run;
819  %mend hup;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
820  %macro hupphys(mthstrt,mthend,hup);
821  proc sql;
822  create table worktable1 as
823  select
824      A.*,B.FRANCHISE_TP
825  from
826      ODS.Mv_physical_esn A,
827      worktable0 B
828  where
829      A.BAN = B.CUSTOMER_ID
830      and A.SWAP_REQUEST_DATE between &mthstrt and &mthend;
831  quit;
832  run;
833
834  data &hup;
835  set worktable1;
836  run;
837
838  proc datasets;
839  delete worktable1;
840  quit;
841  run;
842  %mend hupphys;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
843  %macro savemsf(mthstrt,mthend,savetab);
844  proc sql noprint;
845  create table worktable1 as
846  select * from Ods.Subscriber_price_plan
847                where &mthstrt <= datepart(EFFECTIVE_DATE) <= &mthend;
848  quit;
849
850  data worktable1(drop=EFFECTIVE_DATE EXPIRATION_DATE START_COMMIT_DATE END_COMMIT_DATE
851                  rename=(SOC=PostSOC CHANNEL_ID=Post_CHANNEL_ID));
852  set worktable1(keep=BAN SUBSCRIBER_NO FRANCHISE_ELIGIBILITY CHANNEL_ID
853                      SOC EFFECTIVE_DATE EXPIRATION_DATE START_COMMIT_DATE END_COMMIT_DATE);
854  PostEffectiveDate=datepart(EFFECTIVE_DATE);
855  if EXPIRATION_DATE ne . then PostExpirationDate=datepart(EXPIRATION_DATE);
856  if START_COMMIT_DATE ne . then PostStartCommitDate=datepart(START_COMMIT_DATE);
857  if END_COMMIT_DATE ne . then PostEndCommitDate=datepart(END_COMMIT_DATE);
858  if PostExpirationDate eq . then PostExpirationDate=mdy(12,31,2099);
859  format PostEffectiveDate PostExpirationDate PostStartCommitDate PostEndCommitDate date9.;
860  run;
861
862  proc sql noprint;
863  create table worktable2 as
864  select * from Ods.Subscriber_price_plan
865                where &mthstrt <= datepart(EXPIRATION_DATE) <= &mthend;
866  quit;
867
868  data worktable2(drop=EFFECTIVE_DATE EXPIRATION_DATE START_COMMIT_DATE END_COMMIT_DATE
869                  rename=(SOC=PreSOC CHANNEL_ID=Pre_CHANNEL_ID));
870  set worktable2(keep=BAN SUBSCRIBER_NO FRANCHISE_ELIGIBILITY SOC EFFECTIVE_DATE EXPIRATION_DATE
871                      START_COMMIT_DATE END_COMMIT_DATE CHANNEL_ID);
872  PreEffectiveDate=datepart(EFFECTIVE_DATE);
873  PreExpirationDate=datepart(EXPIRATION_DATE);
874  if START_COMMIT_DATE ne . then PreStartCommitDate=datepart(START_COMMIT_DATE);
875  if END_COMMIT_DATE ne . then PreEndCommitDate=datepart(END_COMMIT_DATE);
876  format PreEffectiveDate PreExpirationDate PreStartCommitDate PreEndCommitDate date9.;
877  run;
878
879  proc sort data=worktable1;
880  by BAN SUBSCRIBER_NO FRANCHISE_ELIGIBILITY;
881  run;
882
883  proc sort data=worktable2;
884  by BAN SUBSCRIBER_NO FRANCHISE_ELIGIBILITY;
885  run;
886
887  data worktable3;
888  merge worktable2(/*where=(PreEffectiveDate lt &mthstrt)*/ in=a)
889        worktable1(/*where=(PostExpirationDate gt &mthend)*/ in=b);
890  by BAN SUBSCRIBER_NO FRANCHISE_ELIGIBILITY;
891  if a and b;
892  run;
893
894
895  data worktable4;
896  set worktable3(keep=PostSOC rename=(PostSOC=SOC))
897      worktable3(keep=PreSOC rename=(PreSOC=SOC));
898  run;
899
900  proc sort data=worktable4;
901  by SOC;
902  run;
903
904  proc summary data=worktable4 nway;
905  by SOC;
906  output out=worktable4(drop=_TYPE_ _FREQ_);
907  run;
908
909  data worktable5;
910  set Ods.Price_plan_group(keep=SOC PPLAN_GROUP_DESC PPLAN_SERIES_TYPE_DESC);
911  run;
912
913  proc sort data=worktable5;
914  by SOC;
915  run;
916
917  data worktable6;
918  set Ods.Service_offering_Current(keep=SOC SOC_DESCRIPTION);
919  run;
920
921  proc sort data=worktable6;
922  by SOC;
923  run;
924
925  data worktable7;
926  merge worktable4(in=a) worktable5 worktable6;
927  by SOC;
928  if a;
929  run;
930
931  data worktable7;
932  set worktable7;
933       if ((index(upcase(PPLAN_GROUP_DESC),'RET') ne 0) or
934           (index(upcase(SOC_DESCRIPTION),'RET') ne 0) or
935           (index(upcase(SOC),'RET') ne 0) or
936           (index(upcase(SOC),'SAV') ne 0) or
937           (index(upcase(SOC),'RTF') ne 0)) then Ret="Yes";
938  else if not ((index(upcase(PPLAN_GROUP_DESC),'RET') ne 0) or
939              (index(upcase(SOC_DESCRIPTION),'RET') ne 0) or
940              (index(upcase(SOC),'RET') ne 0) or
941              (index(upcase(SOC),'SAV') ne 0) or
942              (index(upcase(SOC),'RTF') ne 0)) then Ret="No ";
943  run;
944
945  proc sort data=worktable7;
946  by SOC;
947  run;
948
949  proc sort data=worktable3;
950  by PreSOC;
951  run;
952
953  data worktable3;
954  merge worktable3(in=a) worktable7(rename=(SOC=PreSOC PPLAN_GROUP_DESC=Pre_PPLAN_GROUP_DESC
955                                            PPLAN_SERIES_TYPE_DESC=Pre_PPLAN_SERIES_TYPE_DESC
956                                            SOC_DESCRIPTION=Pre_SOC_DESCRIPTION Ret=PreRet));
957  by PreSOC;
958  if a;
959  run;
960
961  proc sort data=worktable3;
962  by PostSOC;
963  run;
964
965  data worktable3;
966  merge worktable3(in=a) worktable7(rename=(SOC=PostSOC PPLAN_GROUP_DESC=Post_PPLAN_GROUP_DESC
967                                            PPLAN_SERIES_TYPE_DESC=Post_PPLAN_SERIES_TYPE_DESC
968                                            SOC_DESCRIPTION=Post_SOC_DESCRIPTION Ret=PostRet));
969  by PostSOC;
970  if a;
971  run;
972
973  data worktable3;
974  set worktable3;
975  * where trim(PostRet) eq "Yes" and trim(PreRet) eq "No";
976  where trim(PostRet) eq "Yes";
977  run;
978
979  *************Start PLAN RATE Start **********;
980  data worktable1(drop=EFFECTIVE_DATE EXPIRATION_DATE SUSPENSION_AMOUNT);
981  set ODS.PP_RC_RATE(keep=SOC EFFECTIVE_DATE RATE EXPIRATION_DATE SUSPENSION_AMOUNT
981! SECONDARY_AMOUNT);
982  where SUSPENSION_AMOUNT eq 100;
983  EffectiveDate=datepart(EFFECTIVE_DATE);
984       if EXPIRATION_DATE ne . then ExpirationDate=datepart(EXPIRATION_DATE);
985  else if EXPIRATION_DATE eq . then ExpirationDate=mdy(12,31,2099);
986  format EffectiveDate ExpirationDate date9.;
987  run;
988
989  proc sort data=worktable1;
990  by SOC EffectiveDate ExpirationDate;
991  run;
992
993  data worktable2(keep=SOC RATE SECONDARY_AMOUNT
994       rename=(SOC=PreSOC RATE=PreRATE SECONDARY_AMOUNT=PreSECONDARY_AMOUNT));
995  set worktable1;
996  by SOC EffectiveDate ExpirationDate;
997  if last.SOC;
998  run;
999
1000  proc sort data=worktable3;
1001  by PreSOC;
1002  run;
1003
1004
1005  data worktable3;
1006  merge worktable3(in=a) worktable2;
1007  by PreSOC;
1008  if a;
1009  run;
1010
1011  data worktable2(keep=SOC RATE SECONDARY_AMOUNT
1012                  rename=(SOC=PostSOC RATE=PostRATE SECONDARY_AMOUNT=PostSECONDARY_AMOUNT));
1013  set worktable1;
1014  by SOC EffectiveDate ExpirationDate;
1015  if last.SOC;
1016  run;
1017
1018  proc sort data=worktable3;
1019  by PostSOC;
1020  run;
1021
1022
1023  data worktable3;
1024  merge worktable3(in=a) worktable2;
1025  by PostSOC;
1026  if a;
1027  run;
1028  **************** End PLAN RATE End *******;
1029
1030  proc sort data=worktable3;
1031  by BAN SUBSCRIBER_NO FRANCHISE_ELIGIBILITY;
1032  run;
1033
1034  proc sql;
1035  create table worktable2 as
1036  select
1037      A.*,B.FRANCHISE_TP
1038  from
1039      worktable3 A,
1040      worktable0 B
1041  where
1042      A.BAN = B.CUSTOMER_ID;
1043  quit;
1044  run;
1045
1046  data &savetab;
1047  set worktable2;
1048  run;
1049
1050  proc datasets;
1051  delete worktable1 worktable2 worktable3 worktable4 worktable5 worktable6 worktable7;
1052  quit;
1053  run;
1054  %mend savemsf;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
1055  **** Save plan --- Weekly****;
1056  %saveplan("&r_wsd"DT,"&r_wed"DT,raj.Week_SavePlan/*,Zhen.Week_SavePlan_OP_ID*/);
NOTE: Table WORK.WORKTABLE1 created, with 143731 rows and 18 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           56.58 seconds
      cpu time            0.67 seconds


NOTE: Table WORK.WORKTABLE11 created, with 14975 rows and 13 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.40 seconds
      cpu time            0.04 seconds



NOTE: There were 143731 observations read from the data set WORK.WORKTABLE1.
NOTE: There were 14975 observations read from the data set WORK.WORKTABLE11.
NOTE: The data set WORK.WORKTABLE1 has 158706 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.13 seconds


NOTE: Table WORK.WORKTABLE2 created, with 149550 rows and 18 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           21.30 seconds
      cpu time            0.69 seconds



NOTE: There were 158706 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 158706 observations and 18 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.51 seconds
      cpu time            0.36 seconds



NOTE: There were 158706 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE3 has 156095 observations and 2 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.76 seconds
      cpu time            0.45 seconds



NOTE: There were 149550 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 149550 observations and 18 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.33 seconds
      cpu time            0.37 seconds



NOTE: There were 149550 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE4 has 147473 observations and 2 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.71 seconds
      cpu time            0.43 seconds



NOTE: There were 147473 observations read from the data set WORK.WORKTABLE4.
NOTE: There were 158706 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 85165 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.18 seconds



NOTE: There were 156095 observations read from the data set WORK.WORKTABLE3.
NOTE: There were 149550 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 84633 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.33 seconds
      cpu time            0.19 seconds



NOTE: There were 84633 observations read from the data set WORK.WORKTABLE2.
NOTE: There were 85165 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE3 has 169798 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.12 seconds



NOTE: There were 169798 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE4 has 169798 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds



NOTE: There were 169798 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 169798 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.18 seconds



NOTE: There were 169798 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 4154 observations and 1 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds



NOTE: There were 23764 observations read from the data set ODS.PRICE_PLAN_GROUP.
NOTE: The data set WORK.WORKTABLE5 has 23764 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.02 seconds



NOTE: There were 23764 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE5 has 23764 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 60418 observations read from the data set ODS.SERVICE_OFFERING_CURRENT.
NOTE: The data set WORK.WORKTABLE6 has 60418 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.59 seconds
      cpu time            0.07 seconds



NOTE: There were 60418 observations read from the data set WORK.WORKTABLE6.
NOTE: The data set WORK.WORKTABLE6 has 60418 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds



NOTE: There were 4154 observations read from the data set WORK.WORKTABLE4.
NOTE: There were 23764 observations read from the data set WORK.WORKTABLE5.
NOTE: There were 60418 observations read from the data set WORK.WORKTABLE6.
NOTE: The data set WORK.WORKTABLE7 has 4154 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 4154 observations read from the data set WORK.WORKTABLE7.
NOTE: The data set WORK.WORKTABLE7 has 4154 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds



NOTE: There were 4154 observations read from the data set WORK.WORKTABLE7.
NOTE: The data set WORK.WORKTABLE7 has 4154 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 169798 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE3 has 169798 observations and 19 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.45 seconds
      cpu time            0.39 seconds



NOTE: There were 169798 observations read from the data set WORK.WORKTABLE3.
NOTE: There were 4154 observations read from the data set WORK.WORKTABLE7.
NOTE: The data set WORK.WORKTABLE3 has 169798 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.35 seconds
      cpu time            0.22 seconds



NOTE: There were 139541 observations read from the data set ODS.PP_RC_RATE.
      WHERE SUSPENSION_AMOUNT=100;
NOTE: The data set WORK.WORKTABLE1 has 139541 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           4.13 seconds
      cpu time            0.25 seconds



NOTE: There were 139541 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 139541 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.22 seconds
      cpu time            0.22 seconds



NOTE: There were 139541 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE2 has 56875 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.07 seconds



NOTE: There were 169798 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE3 has 169798 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.80 seconds
      cpu time            0.47 seconds



NOTE: There were 169798 observations read from the data set WORK.WORKTABLE3.
NOTE: There were 56875 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE3 has 169798 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.42 seconds
      cpu time            0.25 seconds



NOTE: There were 169798 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE3 has 169798 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.65 seconds
      cpu time            0.58 seconds


NOTE: Table WORK.WORKTABLE2 created, with 152176 rows and 27 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           14.67 seconds
      cpu time            14.35 seconds



NOTE: There were 152176 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set RAJ.WEEK_SAVEPLAN has 152176 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.33 seconds
      cpu time            0.20 seconds



NOTE: There were 24764 observations read from the data set RAJ.WEEK_SAVEPLAN.
      WHERE ((INDEX(UPCASE(SOC_DESCRIPTION), 'SHAR') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION),
      'FAM') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION), 'COUP') not = 0) or
      (INDEX(UPCASE(SOC_DESCRIPTION), 'POOL') not = 0)) and (EFFECTIVE_ISSUE_DATE>='
      23MAR2014:00:00:00'DT and EFFECTIVE_ISSUE_DATE<='  29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE1 has 24764 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.36 seconds
      cpu time            0.21 seconds



NOTE: There were 24764 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 24764 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 24764 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 17799 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds


NOTE: Table WORK.WORKTABLE2 created, with 65737 rows and 19 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           20:36.05
      cpu time            5:27.23


NOTE: Table WORK.WORKTABLE3 created, with 4729 rows and 14 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.76 seconds
      cpu time            0.15 seconds



NOTE: There were 65737 observations read from the data set WORK.WORKTABLE2.
NOTE: There were 4729 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE4 has 70466 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds



NOTE: There were 70466 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 70466 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds



NOTE: There were 70466 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 57443 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.05 seconds



NOTE: There were 57443 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 57443 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.09 seconds
      cpu time            0.05 seconds



NOTE: There were 57443 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE5 has 17510 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds



NOTE: There were 17510 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE5 has 17510 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 89779 observations read from the data set RAJ.WEEK_SAVEPLAN.
      WHERE (EFFECTIVE_ISSUE_DATE>='  23MAR2014:00:00:00'DT and EFFECTIVE_ISSUE_DATE<='
      29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE1 has 89779 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.17 seconds



NOTE: There were 89779 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 89779 observations and 28 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.39 seconds
      cpu time            0.21 seconds



NOTE: There were 89779 observations read from the data set WORK.WORKTABLE1.
NOTE: There were 17510 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE6 has 89779 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.30 seconds
      cpu time            0.16 seconds



WARNING: The variable EFFECTIVE_ISSUE_DATE in the DROP, KEEP, or RENAME list has never been
         referenced.
NOTE: There were 17216 observations read from the data set RAJ.WEEK_SAVEPLAN.
      WHERE ((INDEX(UPCASE(SOC_DESCRIPTION), 'SHAR') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION),
      'FAM') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION), 'COUP') not = 0) or
      (INDEX(UPCASE(SOC_DESCRIPTION), 'POOL') not = 0)) and (EXPIRATION_ISSUE_DATE>='
      23MAR2014:00:00:00'DT and EXPIRATION_ISSUE_DATE<='  29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE1 has 17216 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.36 seconds
      cpu time            0.21 seconds



NOTE: There were 17216 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 17216 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 17216 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 8265 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


NOTE: Table WORK.WORKTABLE2 created, with 69606 rows and 19 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           22:58.87
      cpu time            5:26.20


NOTE: Table WORK.WORKTABLE3 created, with 33 rows and 14 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.59 seconds
      cpu time            0.09 seconds



NOTE: There were 69606 observations read from the data set WORK.WORKTABLE2.
NOTE: There were 33 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE4 has 69639 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds



NOTE: There were 69639 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 69639 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds



NOTE: There were 69639 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 56781 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds



NOTE: There were 56781 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 56781 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.05 seconds



NOTE: There were 56781 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE5 has 8055 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds



NOTE: There were 8055 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE5 has 8055 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 89261 observations read from the data set RAJ.WEEK_SAVEPLAN.
      WHERE (EXPIRATION_ISSUE_DATE>='  23MAR2014:00:00:00'DT and EXPIRATION_ISSUE_DATE<='
      29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE1 has 89261 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.27 seconds
      cpu time            0.17 seconds



NOTE: There were 89261 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 89261 observations and 28 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.32 seconds
      cpu time            0.19 seconds



NOTE: There were 89261 observations read from the data set WORK.WORKTABLE1.
NOTE: There were 8055 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE7 has 89261 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.16 seconds



NOTE: There were 89779 observations read from the data set WORK.WORKTABLE6.
NOTE: There were 89261 observations read from the data set WORK.WORKTABLE7.
NOTE: The data set RAJ.WEEK_SAVEPLAN_1 has 179040 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.36 seconds
      cpu time            0.23 seconds



NOTE: There were 179040 observations read from the data set RAJ.WEEK_SAVEPLAN_1.
NOTE: The PROCEDURE FREQ printed pages 1-6.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.17 seconds
      cpu time            0.06 seconds


                                              Directory

                    Libref             WORK
                    Engine             V9
                    Physical Name      /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Filename           /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Inode Number       499907
                    Access Permission  rwxrwxr-x
                    Owner Name         rxavier
                    File Size (bytes)  4096


                                   Member
                   #  Name         Type      File Size  Last Modified

                   1  SASMACR      CATALOG       61440  30Mar14:17:53:07
                   2  WORKTABLE0   DATA      357867520  30Mar14:17:53:06
                   3  WORKTABLE1   DATA       25247744  30Mar14:18:38:32
                   4  WORKTABLE11  DATA        1474560  30Mar14:17:54:04
                   5  WORKTABLE2   DATA        9527296  30Mar14:18:38:30
                   6  WORKTABLE3   DATA          24576  30Mar14:18:38:31
                   7  WORKTABLE4   DATA        3219456  30Mar14:18:38:31
                   8  WORKTABLE5   DATA         335872  30Mar14:18:38:31
                                   Member
                   #  Name         Type      File Size  Last Modified

                   9  WORKTABLE6   DATA       27607040  30Mar14:18:15:31
                  10  WORKTABLE7   DATA       27459584  30Mar14:18:38:32

NOTE: Deleting WORK.WORKTABLE1 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE11 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE2 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE3 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE4 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE5 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE6 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE7 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds


1057  **** HUP from history --- Weekly ****;
1058  %hup("&r_wsd"DT,"&r_wed"DT,raj.Week_Hup);
NOTE: Table WORK.WORKTABLE1 created, with 38923 rows and 145 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           2:52.61
      cpu time            14.96 seconds



NOTE: There were 38923 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set RAJ.WEEK_HUP has 38923 observations and 145 variables.
NOTE: DATA statement used (Total process time):
      real time           0.37 seconds
      cpu time            0.21 seconds



NOTE: There were 38923 observations read from the data set RAJ.WEEK_HUP.
NOTE: The data set RAJ.WEEK_HUP has 38923 observations and 146 variables.
NOTE: DATA statement used (Total process time):
      real time           0.40 seconds
      cpu time            0.23 seconds


                                              Directory

                    Libref             WORK
                    Engine             V9
                    Physical Name      /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Filename           /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Inode Number       499907
                    Access Permission  rwxrwxr-x
                    Owner Name         rxavier
                    File Size (bytes)  4096


                                  Member
                   #  Name        Type      File Size  Last Modified

                   1  SASMACR     CATALOG       61440  30Mar14:17:53:07
                   2  WORKTABLE0  DATA      357867520  30Mar14:17:53:06
                   3  WORKTABLE1  DATA       59383808  30Mar14:18:41:25

NOTE: Deleting WORK.WORKTABLE1 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds


1059  **** Save discounts --- Weekly ****;
1060  * %savedisc('23OCT2011:00:00:00'DT,'31DEC2099:23:59:59'DT,Zhen.Week_SaveDisc);
1061  **** Save option --- Weekly ****;
1062  * %hupwill('23OCT2011:00:00:00'DT,'31DEC2099:23:59:59'DT,Zhen.Week_goodwill,Zhen.Week_HUP_Adj);
1063  * %saveoption('20Mar2011:00:00:00'DT,'31DEC2099:23:59:59'DT,Zhen.Week_SaveOption);
1064  **** HUP from history --- Weekly ****;
1065  * %hupphys('20Mar2011:00:00:00'DT,'31DEC2099:23:59:59'DT,Zhen.Week_Hup_Phys);
1066  **** Goodwill/HUP from adjustment --- Weekly ****;
1067
1068  proc datasets;
                                              Directory

                    Libref             WORK
                    Engine             V9
                    Physical Name      /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Filename           /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Inode Number       499907
                    Access Permission  rwxrwxr-x
                    Owner Name         rxavier
                    File Size (bytes)  4096


                                  Member
                   #  Name        Type      File Size  Last Modified

                   1  SASMACR     CATALOG       61440  30Mar14:17:53:07
                   2  WORKTABLE0  DATA      357867520  30Mar14:17:53:06
1069  delete worktable0;
1070  quit;

NOTE: Deleting WORK.WORKTABLE0 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.38 seconds
      cpu time            0.25 seconds


1071  run;
NOTE: Remote submit to HOST complete.
153   %inc sascode(Part2M.sas);
NOTE: Remote submit to HOST commencing.
1072  %macro savecontract(mthstrt,mthend);
1073  options nosource;
1074  data Worktable2;
1075  set raj.Week_SmartLast_Rogers(keep=Week BAN SUBSCRIBER_NO)
1076      raj.Week_SmartLast_Fido(keep=Week BAN SUBSCRIBER_NO);
1077  run;
1078
1079  proc sort data=Worktable2;
1080  by Week BAN SUBSCRIBER_NO;
1081  run;
1082
1083  proc summary data=Worktable2 nway;
1084  by Week BAN SUBSCRIBER_NO;
1085  output out=Worktable2(drop=_TYPE_ _FREQ_);
1086  run;
1087
1088  proc sql;
1089  create table Worktable03 as
1090  select A.*
1091  from
1092      ODS.Contract A, Worktable2 B
1093  where
1094          A.BAN = B.BAN
1095   and A.SUBSCRIBER_NO = B.SUBSCRIBER_NO
1096      and (A.EFFECTIVE_DATE >= &mthstrt and A.EFFECTIVE_DATE <= &mthend);
1097  quit;
1098  run;
1099
1100  data Worktable03;
1101  set Worktable03;
1102  Week=week(datepart(EFFECTIVE_DATE));
1103  run;
1104
1105  proc sort data=Worktable03;
1106  by Week BAN SUBSCRIBER_NO CNT_SEQ_NO;
1107  run;
1108
1109  data Worktable03(drop=CNT_SEQ_NO COMMIT_START_DATE COMMIT_END_DATE EFFECTIVE_DATE);
1110  set Worktable03(keep=Week BAN SUBSCRIBER_NO CNT_SEQ_NO COMMIT_START_DATE COMMIT_END_DATE
1110! EFFECTIVE_DATE);
1111  by Week BAN SUBSCRIBER_NO CNT_SEQ_NO;
1112  if last.SUBSCRIBER_NO;
1113  if COMMIT_START_DATE ne . then CommitStartDate1=datepart(COMMIT_START_DATE);
1114  if COMMIT_END_DATE ne . then CommitEndDate1=datepart(COMMIT_END_DATE);
1115  if EFFECTIVE_DATE ne . then CommitIssueDate1=datepart(EFFECTIVE_DATE);
1116  format CommitStartDate1 CommitEndDate1 CommitIssueDate1 date9.;
1117  run;
1118
1119  data Worktable03;
1120  merge Worktable2(in=a) Worktable03(in=b);
1121  by Week BAN SUBSCRIBER_NO;
1122       if CommitStartDate1 eq . or CommitIssueDate1 eq . then SaveContract="N";
1123  else if CommitStartDate1 ne . and CommitIssueDate1 ne . then do;
1124       if b and (CommitStartDate1-CommitIssueDate1) ge -30 then SaveContract="Y";
1125  else if not (b and (CommitStartDate1-CommitIssueDate1) ge -30) then SaveContract="N";
1126  end;
1127  run;
1128  /*
1129  data Worktable03;
1130  set Worktable03;
1131       if trim(SaveContract) eq "Y" then do;
1132  Term=round((CommitEndDate1-CommitStartDate1)/365);
1133       if Term in (1,2,3) then TermYN="Y"!!put(Term,1.);
1134  else if Term not in (1,2,3) then TermYN="Y"!!"0";
1135  end;
1136  else if trim(SaveContract) eq "N" then TermYN="N"!!"N";
1137  */
1138  proc sort data=raj.Week_SmartLast_Rogers;
1139  by Week BAN SUBSCRIBER_NO;
1140  run;
1141
1142  data raj.Week_SmartLast_Rogers;
1143  merge raj.Week_SmartLast_Rogers(in=a) Worktable03;
1144  by Week BAN SUBSCRIBER_NO;
1145  if a;
1146  run;
1147
1148  proc sort data=raj.Week_SmartLast_Fido;
1149  by Week BAN SUBSCRIBER_NO;
1150  run;
1151
1152  data raj.Week_SmartLast_Fido;
1153  merge raj.Week_SmartLast_Fido(in=a) Worktable03;
1154  by Week BAN SUBSCRIBER_NO;
1155  if a;
1156  run;
1157
1158  proc datasets;
1159  delete worktable2 worktable03;
1160  quit;
1161  run;
1162  %mend savecontract;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
1163  %savecontract("&r_wsd"DT,"&r_wed"DT);

NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set WORK.WORKTABLE2 has 40130 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.05 seconds



NOTE: There were 40130 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 40130 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds



NOTE: There were 40130 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 25375 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.13 seconds
      cpu time            0.09 seconds


NOTE: Table WORK.WORKTABLE03 created, with 3781 rows and 25 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           1:37.49
      cpu time            0.58 seconds



NOTE: There were 3781 observations read from the data set WORK.WORKTABLE03.
NOTE: The data set WORK.WORKTABLE03 has 3781 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 3781 observations read from the data set WORK.WORKTABLE03.
NOTE: The data set WORK.WORKTABLE03 has 3781 observations and 26 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 3781 observations read from the data set WORK.WORKTABLE03.
NOTE: The data set WORK.WORKTABLE03 has 3212 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 25375 observations read from the data set WORK.WORKTABLE2.
NOTE: There were 3212 observations read from the data set WORK.WORKTABLE03.
NOTE: The data set WORK.WORKTABLE03 has 25375 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.32 seconds
      cpu time            0.19 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 25375 observations read from the data set WORK.WORKTABLE03.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.13 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 33 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.78 seconds
      cpu time            0.29 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: There were 25375 observations read from the data set WORK.WORKTABLE03.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.16 seconds


                                              Directory

                    Libref             WORK
                    Engine             V9
                    Physical Name      /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Filename           /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Inode Number       499907
                    Access Permission  rwxrwxr-x
                    Owner Name         rxavier
                    File Size (bytes)  4096


                                    Member       File
                    #  Name         Type         Size  Last Modified

                    1  SASMACR      CATALOG     61440  30Mar14:17:53:07
                    2  WORKTABLE03  DATA      1654784  30Mar14:18:43:04
                    3  WORKTABLE2   DATA      1040384  30Mar14:18:41:27

NOTE: Deleting WORK.WORKTABLE2 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE03 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 40222675 observations read from the data set SMB.CUSTOMER_SEGMENT.
NOTE: The data set WORK.VERIF01 has 40222675 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           11:13.85
      cpu time            2:52.95



NOTE: There were 40222675 observations read from the data set WORK.VERIF01.
NOTE: The data set WORK.VERIF01 has 40222675 observations and 27 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           2:59.19
      cpu time            2:03.27



NOTE: There were 40222675 observations read from the data set WORK.VERIF01.
NOTE: The data set WORK.VERIF01 has 40222675 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           1:51.54
      cpu time            59.69 seconds



NOTE: There were 40222675 observations read from the data set WORK.VERIF01.
NOTE: The data set WORK.VERIF01 has 40222675 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           1:28.96
      cpu time            46.31 seconds



NOTE: There were 51040660 observations read from the data set ODS.SUBSCRIBER.
NOTE: The data set WORK.VERIF02 has 51040659 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           15:10.96
      cpu time            3:06.00



NOTE: There were 51040659 observations read from the data set WORK.VERIF02.
NOTE: The data set WORK.VERIF02 has 51040659 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           1:58.43
      cpu time            1:18.76



NOTE: There were 51040659 observations read from the data set WORK.VERIF02.
NOTE: The data set WORK.VERIF02 has 50932579 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           1:48.86
      cpu time            44.58 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 40222675 observations read from the data set WORK.VERIF01.
NOTE: The PROCEDURE FREQ printed page 7.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           16.66 seconds
      cpu time            7.32 seconds


NOTE: Format $ACCTYPE has been output.

NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 50932579 observations read from the data set WORK.VERIF02.
NOTE: The PROCEDURE FREQ printed page 8.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           18.35 seconds
      cpu time            8.34 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.38 seconds
      cpu time            0.19 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 40222675 observations read from the data set WORK.VERIF01.
NOTE: There were 50932579 observations read from the data set WORK.VERIF02.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 57 variables.
NOTE: DATA statement used (Total process time):
      real time           2:09.32
      cpu time            1:07.99



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 37 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           1.47 seconds
      cpu time            0.35 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: There were 40222675 observations read from the data set WORK.VERIF01.
NOTE: There were 50932579 observations read from the data set WORK.VERIF02.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 71 variables.
NOTE: DATA statement used (Total process time):
      real time           4:47.53
      cpu time            1:16.07


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The PROCEDURE FREQ printed page 9.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The PROCEDURE FREQ printed page 10.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 9877 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
      WHERE TRIM(SEG_SUB_GROUP) in ('BIZUNKWN', 'CONSUMER', 'CORPUNKWN', 'LRGBIZ', 'MEDBIZ', 'SMBIZ')
      and (TRIM(OFFER_DISPOSITION)='Accepted');
NOTE: There were 19567 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
      WHERE (TRIM(SEG_SUB_GROUP)='CONSUMER') and (TRIM(Sub_Status)='AC');
NOTE: The data set WORK.WORKTABLE1 has 29444 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds



NOTE: There were 29444 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 29444 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds



NOTE: There were 29444 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 19521 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.16 seconds
      cpu time            0.07 seconds



NOTE: There were 3522953 observations read from the data set ODS.SERVICE_AGREEMENT.
      WHERE (EFFECTIVE_ISSUE_DATE>='  23MAR2014:00:00:00'DT and EFFECTIVE_ISSUE_DATE<='
      29MAR2014:23:59:59'DT) or (EXPIRATION_ISSUE_DATE>='  23MAR2014:00:00:00'DT and
      EXPIRATION_ISSUE_DATE<='  29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE2 has 3339684 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           15:53.05
      cpu time            23.54 seconds



NOTE: There were 3339684 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 3339684 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           12.75 seconds
      cpu time            11.13 seconds



NOTE: There were 3339684 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 3339609 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           7.52 seconds
      cpu time            4.54 seconds



NOTE: There were 19521 observations read from the data set WORK.WORKTABLE1.
NOTE: There were 3339609 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 96438 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           3.77 seconds
      cpu time            2.34 seconds



NOTE: There were 140130 observations read from the data set ODS.SOC.
NOTE: The data set WORK.WORKTABLE3 has 140130 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           2.11 seconds
      cpu time            0.28 seconds



NOTE: There were 140130 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE3 has 140130 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.22 seconds
      cpu time            0.22 seconds



NOTE: There were 140130 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE3 has 56999 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds



NOTE: There were 96438 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 96438 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.38 seconds
      cpu time            0.24 seconds



NOTE: There were 96438 observations read from the data set WORK.WORKTABLE2.
NOTE: There were 56999 observations read from the data set WORK.WORKTABLE3.
NOTE: The data set WORK.WORKTABLE2 has 96438 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.16 seconds



NOTE: There were 96438 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 96438 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.13 seconds



NOTE: There were 139541 observations read from the data set ODS.PP_RC_RATE.
      WHERE SUSPENSION_AMOUNT=100;
NOTE: The data set WORK.WORKTABLE1 has 139541 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           4.08 seconds
      cpu time            0.24 seconds



NOTE: There were 139541 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 139541 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds



NOTE: There were 139541 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 56875 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds



NOTE: There were 94598 observations read from the data set ODS.PP_RC_RATE.
      WHERE TIER_LEVEL_CODE>0;
NOTE: The data set WORK.WORKTABLE11 has 94598 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           1.01 seconds
      cpu time            0.17 seconds



NOTE: There were 94598 observations read from the data set WORK.WORKTABLE11.
NOTE: The data set WORK.WORKTABLE11 has 94598 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.08 seconds



NOTE: There were 94598 observations read from the data set WORK.WORKTABLE11.
NOTE: The data set WORK.WORKTABLE11 has 60914 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds



NOTE: There were 60914 observations read from the data set WORK.WORKTABLE11.
NOTE: The data set WORK.WORKTABLE11 has 1854 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 1854 observations read from the data set WORK.WORKTABLE11.
NOTE: The data set WORK.WORKTABLE11 has 1854 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 56875 observations read from the data set WORK.WORKTABLE1.
NOTE: There were 1854 observations read from the data set WORK.WORKTABLE11.
NOTE: The data set WORK.WORKTABLE1 has 56875 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 96438 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 96438 observations and 41 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.37 seconds
      cpu time            0.22 seconds



NOTE: There were 96438 observations read from the data set WORK.WORKTABLE2.
NOTE: There were 56875 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE2 has 96438 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.15 seconds



NOTE: There were 96438 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE2 has 96438 observations and 44 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.42 seconds
      cpu time            0.26 seconds



NOTE: There were 96438 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set RAJ.WEEK_OPTION_ALL has 96438 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.11 seconds



NOTE: There were 2986 observations read from the data set RAJ.WEEK_OPTION_ALL.
      WHERE ((INDEX(UPCASE(SOC_DESCRIPTION), 'SHAR') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION),
      'FAM') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION), 'COUP') not = 0) or
      (INDEX(UPCASE(SOC_DESCRIPTION), 'POOL') not = 0)) and (EFFECTIVE_ISSUE_DATE>='
      23MAR2014:00:00:00'DT and EFFECTIVE_ISSUE_DATE<='  29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE1 has 2986 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.14 seconds



NOTE: There were 2986 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 2986 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 2986 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 2607 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


NOTE: Table WORK.WORKTABLE2 created, with 4716 rows and 34 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           10:51.52
      cpu time            45.13 seconds



NOTE: There were 4716 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE4 has 4716 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 4716 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 4716 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 4716 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 4677 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 4677 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 4677 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4677 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE5 has 2607 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 2607 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE5 has 2607 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 38267 observations read from the data set RAJ.WEEK_OPTION_ALL.
      WHERE (EFFECTIVE_ISSUE_DATE>='  23MAR2014:00:00:00'DT and EFFECTIVE_ISSUE_DATE<='
      29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE1 has 38267 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.08 seconds



NOTE: There were 38267 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 38267 observations and 44 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.15 seconds
      cpu time            0.09 seconds



NOTE: There were 38267 observations read from the data set WORK.WORKTABLE1.
NOTE: There were 2607 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE6 has 38267 observations and 47 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.07 seconds



WARNING: The variable EFFECTIVE_ISSUE_DATE in the DROP, KEEP, or RENAME list has never been
         referenced.
NOTE: There were 1904 observations read from the data set RAJ.WEEK_OPTION_ALL.
      WHERE ((INDEX(UPCASE(SOC_DESCRIPTION), 'SHAR') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION),
      'FAM') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION), 'COUP') not = 0) or
      (INDEX(UPCASE(SOC_DESCRIPTION), 'POOL') not = 0)) and (EXPIRATION_ISSUE_DATE>='
      23MAR2014:00:00:00'DT and EXPIRATION_ISSUE_DATE<='  29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE1 has 1904 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.14 seconds



NOTE: There were 1904 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 1904 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 1904 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 1598 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds


NOTE: Table WORK.WORKTABLE2 created, with 3894 rows and 34 columns.

NOTE: PROCEDURE SQL used (Total process time):
      real time           14:03.98
      cpu time            1:18.25



NOTE: There were 3894 observations read from the data set WORK.WORKTABLE2.
NOTE: The data set WORK.WORKTABLE4 has 3894 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 3894 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 3894 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 3894 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 3830 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 3830 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE4 has 3830 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 3830 observations read from the data set WORK.WORKTABLE4.
NOTE: The data set WORK.WORKTABLE5 has 1592 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 1592 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE5 has 1592 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 47100 observations read from the data set RAJ.WEEK_OPTION_ALL.
      WHERE (EXPIRATION_ISSUE_DATE>='  23MAR2014:00:00:00'DT and EXPIRATION_ISSUE_DATE<='
      29MAR2014:23:59:59'DT);
NOTE: The data set WORK.WORKTABLE1 has 47100 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.10 seconds



NOTE: There were 47100 observations read from the data set WORK.WORKTABLE1.
NOTE: The data set WORK.WORKTABLE1 has 47100 observations and 44 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.26 seconds
      cpu time            0.12 seconds



NOTE: There were 47100 observations read from the data set WORK.WORKTABLE1.
NOTE: There were 1592 observations read from the data set WORK.WORKTABLE5.
NOTE: The data set WORK.WORKTABLE7 has 47100 observations and 47 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.09 seconds



NOTE: There were 38267 observations read from the data set WORK.WORKTABLE6.
NOTE: There were 47100 observations read from the data set WORK.WORKTABLE7.
NOTE: The data set RAJ.WEEK_OPTION_ALL_1 has 85367 observations and 48 variables.
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.12 seconds



NOTE: There were 85367 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
NOTE: The PROCEDURE FREQ printed pages 11-12.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds


                                              Directory

                    Libref             WORK
                    Engine             V9
                    Physical Name      /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Filename           /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Inode Number       499907
                    Access Permission  rwxrwxr-x
                    Owner Name         rxavier
                    File Size (bytes)  4096


                                   Member
                   #  Name         Type       File Size  Last Modified

                   1  FORMATS      CATALOG        24576  30Mar14:19:19:55
                   2  SASMACR      CATALOG       237568  30Mar14:19:27:12
                   3  VERIF01      DATA      9691332608  30Mar14:19:00:29
                   4  VERIF02      DATA      5349253120  30Mar14:19:19:32
                   5  WORKTABLE1   DATA        15179776  30Mar14:20:08:37
                   6  WORKTABLE11  DATA           90112  30Mar14:19:43:39
                   7  WORKTABLE2   DATA          966656  30Mar14:20:08:36
                   8  WORKTABLE3   DATA         4145152  30Mar14:19:43:32
                   9  WORKTABLE4   DATA          229376  30Mar14:20:08:36
                  10  WORKTABLE5   DATA           81920  30Mar14:20:08:36
                  11  WORKTABLE6   DATA        13246464  30Mar14:19:54:32
                  12  WORKTABLE7   DATA        16293888  30Mar14:20:08:37

NOTE: Deleting WORK.WORKTABLE1 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE2 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE3 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE4 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE5 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE6 (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE7 (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 57 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.79 seconds
      cpu time            0.22 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set WORK.VERIF has 1 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 1 observations read from the data set WORK.VERIF.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 59 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.11 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.10 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 61 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.13 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 61 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.43 seconds
      cpu time            0.21 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 71 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.64 seconds
      cpu time            0.32 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set WORK.VERIF has 1 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: There were 1 observations read from the data set WORK.VERIF.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 73 variables.
NOTE: DATA statement used (Total process time):
      real time           0.35 seconds
      cpu time            0.18 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 74 variables.
NOTE: DATA statement used (Total process time):
      real time           0.37 seconds
      cpu time            0.17 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 75 variables.
NOTE: DATA statement used (Total process time):
      real time           0.36 seconds
      cpu time            0.17 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 75 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.83 seconds
      cpu time            0.32 seconds



NOTE: There were 224888 observations read from the data set RAJ.CABLE_FTPT_DEC2011.
NOTE: The data set WORK.VERIF1 has 224888 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.05 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set WORK.VERIF2 has 40130 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds



NOTE: There were 40130 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 40130 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 40130 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 25375 observations and 2 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.14 seconds
      cpu time            0.08 seconds



NOTE: There were 25375 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 22073 observations and 1 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds



NOTE: There were 24539822 observations read from the data set ODS.BILLING_ACCOUNT.
NOTE: The data set WORK.VERIF3 has 24539822 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           5:04.86
      cpu time            42.63 seconds



NOTE: There were 24539822 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 24539822 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           28.23 seconds
      cpu time            33.47 seconds



NOTE: There were 22073 observations read from the data set WORK.VERIF2.
NOTE: There were 24539822 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF2 has 22073 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           11.90 seconds
      cpu time            6.54 seconds



WARNING: The variable PROV in the DROP, KEEP, or RENAME list has never been referenced.
WARNING: The variable FP_IND in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 224888 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 224888 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds



NOTE: There were 22073 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 22073 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 224888 observations read from the data set WORK.VERIF1.
      WHERE PostCode not = ' ';
NOTE: The data set WORK.VERIF1 has 224888 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.13 seconds



NOTE: There were 22073 observations read from the data set WORK.VERIF2.
      WHERE PostCode not = ' ';
NOTE: The data set WORK.VERIF2 has 22073 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 0 observations read from the data set WORK.VERIF2.
      WHERE TRIM(PostCode)=' ';
NOTE: The data set WORK.VERIF4 has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 224888 observations read from the data set WORK.VERIF1.
NOTE: There were 22073 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 8700 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds



NOTE: There were 8700 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 8700 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 61 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.41 seconds
      cpu time            0.23 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 8700 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 65 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.13 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 65 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.39 seconds
      cpu time            0.22 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 75 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.60 seconds
      cpu time            0.31 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: There were 8700 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 79 variables.
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.18 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 79 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.60 seconds
      cpu time            0.34 seconds



NOTE: There were 38923 observations read from the data set RAJ.WEEK_HUP.
NOTE: The data set RAJ.WEEK_HUP has 38923 observations and 146 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           1.53 seconds
      cpu time            0.54 seconds



NOTE: There were 38923 observations read from the data set RAJ.WEEK_HUP.
NOTE: There were 40222675 observations read from the data set WORK.VERIF01.
NOTE: There were 50932579 observations read from the data set WORK.VERIF02.
NOTE: The data set RAJ.WEEK_HUP has 38923 observations and 179 variables.
NOTE: DATA statement used (Total process time):
      real time           5:21.78
      cpu time            1:42.06



NOTE: There were 35514 observations read from the data set RAJ.WEEK_HUP.
      WHERE NEW_COMMIT_START_DATE not = .;
NOTE: The data set WORK.VERIF0 has 35514 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.07 seconds



NOTE: There were 35514 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 35514 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 35514 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 1 observations and 2 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 35514 observations read from the data set RAJ.WEEK_HUP.
      WHERE NEW_COMMIT_START_DATE not = .;
NOTE: The data set WORK.VERIF1 has 35514 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds



NOTE: There were 35514 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 35514 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 35514 observations read from the data set WORK.VERIF1.
NOTE: There were 1 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF1 has 35514 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 34891 observations read from the data set WORK.VERIF1.
      WHERE (DATEPART(NEW_COMMIT_START_DATE)-MinWeekHUPReqDate)>=-15;
NOTE: The data set WORK.VERIF1 has 34891 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 34891 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 34891 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds



NOTE: There were 34891 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 34177 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 34177 observations read from the data set WORK.VERIF1.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 65 variables.
NOTE: DATA statement used (Total process time):
      real time           0.36 seconds
      cpu time            0.18 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: There were 34177 observations read from the data set WORK.VERIF1.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 79 variables.
NOTE: DATA statement used (Total process time):
      real time           0.36 seconds
      cpu time            0.22 seconds



NOTE: There were 76347 observations read from the data set RAJ.WEEK_SAVEPLAN_1.
      WHERE TRIM(FRANCHISE_TP) in ('F', 'R') and (TRIM(Type)='PosSave') and (TRIM(Origin)='Eff');
NOTE: The data set WORK.VERIF2 has 76347 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.93 seconds
      cpu time            0.33 seconds



NOTE: There were 76347 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 76347 observations and 32 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.42 seconds
      cpu time            0.22 seconds



NOTE: There were 76347 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 74099 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.13 seconds



NOTE: There were 75829 observations read from the data set RAJ.WEEK_SAVEPLAN_1.
      WHERE TRIM(FRANCHISE_TP) in ('F', 'R') and (TRIM(Type)='PreSave') and (TRIM(Origin)='Exp');
NOTE: The data set WORK.VERIF3 has 75829 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           1.57 seconds
      cpu time            0.96 seconds



NOTE: There were 75829 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 75829 observations and 32 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.35 seconds
      cpu time            0.21 seconds



NOTE: There were 75829 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 74099 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.13 seconds



NOTE: There were 74099 observations read from the data set WORK.VERIF3.
NOTE: There were 74099 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 74099 observations and 60 variables.
NOTE: DATA statement used (Total process time):
      real time           0.37 seconds
      cpu time            0.22 seconds



NOTE: There were 74099 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 74099 observations and 60 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           1.39 seconds
      cpu time            0.33 seconds



NOTE: There were 74099 observations read from the data set WORK.VERIF2.
NOTE: There were 40222675 observations read from the data set WORK.VERIF01.
NOTE: There were 50932579 observations read from the data set WORK.VERIF02.
NOTE: The data set WORK.VERIF2 has 74099 observations and 94 variables.
NOTE: DATA statement used (Total process time):
      real time           6:03.11
      cpu time            1:20.33



NOTE: There were 74099 observations read from the data set WORK.VERIF2.
      WHERE ('23MAR2014'D<=DATEPART(Pre_EXPIRATION_ISSUE_DATE)) and
      ('23MAR2014'D<=DATEPART(Post_EFFECTIVE_ISSUE_DATE)) and
      (DATEPART(Pre_EXPIRATION_ISSUE_DATE)<='29MAR2014'D) and
      (DATEPART(Post_EFFECTIVE_ISSUE_DATE)<='29MAR2014'D);
NOTE: The data set RAJ.WEEK_SAVE_LAST has 74099 observations and 94 variables.
NOTE: DATA statement used (Total process time):
      real time           0.80 seconds
      cpu time            0.28 seconds



NOTE: There were 74099 observations read from the data set RAJ.WEEK_SAVE_LAST.
NOTE: The data set RAJ.WEEK_SAVE_LAST has 74099 observations and 94 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           1.39 seconds
      cpu time            0.52 seconds



NOTE: There were 74099 observations read from the data set RAJ.WEEK_SAVE_LAST.
NOTE: The data set RAJ.WEEK_SAVE_LAST has 74099 observations and 96 variables.
NOTE: DATA statement used (Total process time):
      real time           0.47 seconds
      cpu time            0.30 seconds



NOTE: There were 74099 observations read from the data set RAJ.WEEK_SAVE_LAST.
NOTE: The data set RAJ.WEEK_SAVE_LAST has 74099 observations and 97 variables.
NOTE: DATA statement used (Total process time):
      real time           0.48 seconds
      cpu time            0.31 seconds



NOTE: There were 32734 observations read from the data set RAJ.WEEK_SAVE_LAST.
      WHERE (TRIM(Post_FRANCHISE_TP)='R') and (TRIM(Pre_FRANCHISE_TP)='R') and
      (TRIM(SEG_SUB_GROUP)='CONSUMER');
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS has 32734 observations and 98 variables.
NOTE: DATA statement used (Total process time):
      real time           0.30 seconds
      cpu time            0.16 seconds



NOTE: There were 32734 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS.
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS has 32734 observations and 98 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.43 seconds
      cpu time            0.28 seconds


NOTE: Data file RAJ.WEEK_SAVEPLAN_CHURN_R.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.

NOTE: There were 16 observations read from the data set RAJ.WEEK_SAVEPLAN_CHURN_R.
NOTE: The data set WORK.VERIF2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.13 seconds
      cpu time            0.07 seconds



NOTE: There were 32734 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS.
NOTE: There were 16 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS has 32734 observations and 103 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.15 seconds



NOTE: There were 32734 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS.
      WHERE TRIM(Origin)='ab';
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS has 32734 observations and 102 variables.
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.15 seconds



NOTE: There were 32734 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS.
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS has 32734 observations and 102 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.45 seconds
      cpu time            0.28 seconds



NOTE: There were 32734 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS.
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS has 32734 observations and 103 variables.
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.13 seconds



NOTE: There were 13334 observations read from the data set RAJ.WEEK_SAVE_LAST.
      WHERE (TRIM(Post_FRANCHISE_TP)='R') and (TRIM(Pre_FRANCHISE_TP)='R') and TRIM(SEG_SUB_GROUP) in
      ('BIZUNKWN', 'CORPUNKWN', 'LRGBIZ', 'MEDBIZ', 'SMBIZ');
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BR has 13334 observations and 99 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.11 seconds



NOTE: There were 13334 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BR has 13334 observations and 99 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.17 seconds
      cpu time            0.12 seconds


NOTE: Data file RAJ.WEEK_SAVEPLAN_CHURN_R.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.

NOTE: There were 16 observations read from the data set RAJ.WEEK_SAVEPLAN_CHURN_R.
NOTE: The data set WORK.VERIF2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 13334 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
NOTE: There were 16 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BR has 13334 observations and 104 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds



NOTE: There were 13334 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
      WHERE TRIM(Origin)='ab';
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BR has 13334 observations and 103 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds



NOTE: There were 13334 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BR has 13334 observations and 103 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.18 seconds
      cpu time            0.11 seconds



NOTE: There were 13334 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BR has 13334 observations and 104 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.06 seconds



NOTE: There were 13334 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
NOTE: The PROCEDURE FREQ printed page 13.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds



NOTE: There were 7779 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
      WHERE TRIM(BusSize)='Small';
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BS has 7779 observations and 104 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds



NOTE: There were 743 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
      WHERE TRIM(BusSize)='Medium';
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BM has 743 observations and 104 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 4812 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BR.
      WHERE TRIM(BusSize)='Large';
NOTE: The data set RAJ.WEEK_SAVE_LAST_ROGERS_BL has 4812 observations and 104 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 15758 observations read from the data set RAJ.WEEK_SAVE_LAST.
      WHERE (TRIM(Post_FRANCHISE_TP)='F') and (TRIM(Pre_FRANCHISE_TP)='F') and
      (TRIM(SEG_SUB_GROUP)='CONSUMER');
NOTE: The data set RAJ.WEEK_SAVE_LAST_FIDO has 15758 observations and 98 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.10 seconds



NOTE: There were 15758 observations read from the data set RAJ.WEEK_SAVE_LAST_FIDO.
NOTE: The data set RAJ.WEEK_SAVE_LAST_FIDO has 15758 observations and 98 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.20 seconds
      cpu time            0.12 seconds


NOTE: Data file RAJ.WEEK_SAVEPLAN_CHURN_F.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.

NOTE: There were 16 observations read from the data set RAJ.WEEK_SAVEPLAN_CHURN_F.
NOTE: The data set WORK.VERIF2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 15758 observations read from the data set RAJ.WEEK_SAVE_LAST_FIDO.
NOTE: There were 16 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEK_SAVE_LAST_FIDO has 15758 observations and 103 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds



NOTE: There were 15758 observations read from the data set RAJ.WEEK_SAVE_LAST_FIDO.
      WHERE TRIM(Origin)='ab';
NOTE: The data set RAJ.WEEK_SAVE_LAST_FIDO has 15758 observations and 102 variables.
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.08 seconds



NOTE: There were 15758 observations read from the data set RAJ.WEEK_SAVE_LAST_FIDO.
NOTE: The data set RAJ.WEEK_SAVE_LAST_FIDO has 15758 observations and 102 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.37 seconds
      cpu time            0.13 seconds



NOTE: There were 15758 observations read from the data set RAJ.WEEK_SAVE_LAST_FIDO.
NOTE: The data set RAJ.WEEK_SAVE_LAST_FIDO has 15758 observations and 103 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds



NOTE: There were 20714 observations read from the data set RAJ.WEEK_HUP.
      WHERE (TRIM(FRANCHISE_TP)='R') and ('23MAR2014'D<=DATEPART(HUP_REQUEST_DATE)) and
      (TRIM(SEG_SUB_GROUP)='CONSUMER') and (DATEPART(HUP_REQUEST_DATE)<='29MAR2014'D);
NOTE: The data set RAJ.WEEK_HUP_LAST_ROGERS has 20714 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.09 seconds



NOTE: There were 7068 observations read from the data set RAJ.WEEK_HUP.
      WHERE (TRIM(FRANCHISE_TP)='R') and ('23MAR2014'D<=DATEPART(HUP_REQUEST_DATE)) and
      TRIM(SEG_SUB_GROUP) in ('BIZUNKWN', 'CORPUNKWN', 'LRGBIZ', 'MEDBIZ', 'SMBIZ') and
      (DATEPART(HUP_REQUEST_DATE)<='29MAR2014'D);
NOTE: The data set RAJ.WEEK_HUP_LAST_ROGERS_BR has 7068 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds



NOTE: There were 3045 observations read from the data set RAJ.WEEK_HUP_LAST_ROGERS_BR.
      WHERE TRIM(BusSize)='Small';
NOTE: The data set RAJ.WEEK_HUP_LAST_ROGERS_BS has 3045 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds



NOTE: There were 868 observations read from the data set RAJ.WEEK_HUP_LAST_ROGERS_BR.
      WHERE TRIM(BusSize)='Medium';
NOTE: The data set RAJ.WEEK_HUP_LAST_ROGERS_BM has 868 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 3155 observations read from the data set RAJ.WEEK_HUP_LAST_ROGERS_BR.
      WHERE TRIM(BusSize)='Large';
NOTE: The data set RAJ.WEEK_HUP_LAST_ROGERS_BL has 3155 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 8802 observations read from the data set RAJ.WEEK_HUP.
      WHERE (TRIM(FRANCHISE_TP)='F') and ('23MAR2014'D<=DATEPART(HUP_REQUEST_DATE)) and
      (TRIM(SEG_SUB_GROUP)='CONSUMER') and (DATEPART(HUP_REQUEST_DATE)<='29MAR2014'D);
NOTE: The data set RAJ.WEEK_HUP_LAST_FIDO has 8802 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.05 seconds



NOTE: There were 9877 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
      WHERE (TRIM(OFFER_DISPOSITION)='Accepted') and (TRIM(MARKETING_OFFER_NAME) not = 'Rogers.com -
      Self Service Options') and TRIM(SEG_SUB_GROUP) in ('BIZUNKWN', 'CONSUMER', 'CORPUNKWN',
      'LRGBIZ', 'MEDBIZ', 'SMBIZ');
NOTE: The data set WORK.VERIF1 has 9877 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds



NOTE: There were 19567 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
      WHERE (TRIM(Sub_Status)='AC') and (TRIM(SEG_SUB_GROUP)='CONSUMER');
NOTE: The data set WORK.VERIF11 has 19567 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.04 seconds



NOTE: There were 9877 observations read from the data set WORK.VERIF1.
      WHERE TRIM(BusSize) not = ' ';
NOTE: There were 19567 observations read from the data set WORK.VERIF11.
      WHERE TRIM(BusSize) not = ' ';
NOTE: The data set WORK.VERIF1 has 29444 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds



NOTE: There were 29444 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 29444 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds



NOTE: There were 29444 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 21078 observations and 9 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.16 seconds
      cpu time            0.10 seconds



NOTE: There were 32734 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS.
NOTE: There were 7779 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BS.
NOTE: There were 743 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BM.
NOTE: There were 4812 observations read from the data set RAJ.WEEK_SAVE_LAST_ROGERS_BL.
NOTE: There were 15758 observations read from the data set RAJ.WEEK_SAVE_LAST_FIDO.
NOTE: The data set WORK.VERIF2 has 61826 observations and 104 variables.
NOTE: DATA statement used (Total process time):
      real time           0.49 seconds
      cpu time            0.21 seconds



NOTE: There were 61826 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 61826 observations and 104 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.93 seconds
      cpu time            0.48 seconds



NOTE: There were 61826 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 61826 observations and 104 variables.
NOTE: DATA statement used (Total process time):
      real time           0.63 seconds
      cpu time            0.28 seconds



NOTE: There were 21078 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 21078 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 61826 observations read from the data set WORK.VERIF2.
NOTE: There were 21078 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF3 has 62228 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           0.85 seconds
      cpu time            0.30 seconds



NOTE: There were 62228 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 4396 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.09 seconds



NOTE: There were 4396 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 4396 observations and 110 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds



NOTE: There were 4396 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 4379 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 4379 observations read from the data set WORK.VERIF3.
NOTE: The data set RAJ.SAVE_PLAN_WEEK has 4379 observations and 109 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds



NOTE: There were 20714 observations read from the data set RAJ.WEEK_HUP_LAST_ROGERS.
NOTE: There were 3045 observations read from the data set RAJ.WEEK_HUP_LAST_ROGERS_BS.
NOTE: There were 868 observations read from the data set RAJ.WEEK_HUP_LAST_ROGERS_BM.
NOTE: There were 3155 observations read from the data set RAJ.WEEK_HUP_LAST_ROGERS_BL.
NOTE: There were 8802 observations read from the data set RAJ.WEEK_HUP_LAST_FIDO.
NOTE: The data set WORK.VERIF2 has 36584 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.29 seconds
      cpu time            0.09 seconds



NOTE: There were 36584 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 36584 observations and 39 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.44 seconds
      cpu time            0.12 seconds



NOTE: There were 36584 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 35732 observations and 39 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds



NOTE: There were 35732 observations read from the data set WORK.VERIF2.
NOTE: There were 21078 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF3 has 36142 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.10 seconds



NOTE: There were 36142 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 2894 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds



NOTE: There were 2894 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 2894 observations and 45 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 2894 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 2877 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 2877 observations read from the data set WORK.VERIF3.
NOTE: The data set RAJ.SAVE_HANDSET_WEEK has 2877 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set WORK.VERIF1 has 40130 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.05 seconds



NOTE: There were 38822 observations read from the data set WORK.VERIF1.
      WHERE TRIM(segment) not = ' ';
NOTE: The data set WORK.VERIF1 has 38822 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.05 seconds



NOTE: There were 38822 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 24441 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 24441 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE FREQ printed page 14.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 5034 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
      WHERE SUSPENSION_AMOUNT=.;
NOTE: The data set WORK.VERIF2 has 5034 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds



NOTE: There were 5034 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 5034 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 24441 observations read from the data set WORK.VERIF1.
NOTE: There were 5034 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 5034 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds



NOTE: There were 5034 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE FREQ printed page 15.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 5033 observations read from the data set WORK.VERIF2.
      WHERE TRIM(Segment) not = ' ';
NOTE: The data set WORK.VERIF2 has 5033 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds


NOTE: Data file RAJ.TIER_OPTIONS_RATE_ESTIMATE.DATA is in a format that is native to another host, or
      the file encoding does not match the session encoding. Cross Environment Data Access will be
      used, which might require additional CPU resources and might reduce performance.

NOTE: There were 41 observations read from the data set RAJ.TIER_OPTIONS_RATE_ESTIMATE.
NOTE: The data set WORK.VERIF3 has 41 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 5033 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 5033 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 41 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 41 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 5033 observations read from the data set WORK.VERIF2.
NOTE: There were 41 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF2 has 5033 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 5033 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE FREQ printed page 16.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 5033 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF3 has 5033 observations and 13 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 5033 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 5033 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 85367 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
NOTE: The data set WORK.VERIF4 has 85367 observations and 48 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.62 seconds
      cpu time            0.25 seconds



NOTE: There were 85367 observations read from the data set WORK.VERIF4.
NOTE: There were 5033 observations read from the data set WORK.VERIF3.
NOTE: The data set RAJ.WEEK_OPTION_ALL_1 has 85367 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.40 seconds
      cpu time            0.20 seconds



NOTE: There were 345 observations read from the data set WORK.VERIF2.
      WHERE TRIM(REL_SOC) not = ' ';
NOTE: The data set WORK.VERIF4 has 345 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds



NOTE: There were 345 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 345 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 345 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 345 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 85367 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
NOTE: The data set RAJ.WEEK_OPTION_ALL_1 has 85367 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.76 seconds
      cpu time            0.28 seconds



NOTE: There were 85367 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
NOTE: There were 345 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF5 has 345 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds



NOTE: There were 85367 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
NOTE: There were 345 observations read from the data set WORK.VERIF4.
NOTE: The data set RAJ.WEEK_OPTION_ALL_1 has 85370 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.20 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set WORK.VERIF1 has 40130 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.05 seconds



NOTE: There were 40130 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 40130 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 40130 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 25375 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.13 seconds
      cpu time            0.08 seconds



NOTE: There were 3268 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
      WHERE ((INDEX(UPCASE(SOC_DESCRIPTION), 'DAT') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION), 'GB
      ') not = 0) or (INDEX(UPCASE(SOC_DESCRIPTION), 'MB ') not = 0) or
      (INDEX(UPCASE(SOC_DESCRIPTION), 'KB ') not = 0) or (INDEX(UPCASE(SOC), 'DAT') not = 0)) and
      ('23MAR2014'D<=DATEPART(EFFECTIVE_ISSUE_DATE)) and
      (DATEPART(EFFECTIVE_ISSUE_DATE)<='29MAR2014'D);
NOTE: The data set WORK.VERIF4 has 3268 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.15 seconds



NOTE: There were 3268 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 3268 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 25375 observations read from the data set WORK.VERIF1.
NOTE: There were 3268 observations read from the data set WORK.VERIF4.
NOTE: The data set RAJ.WEEK_DATA_LAST has 3268 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 3268 observations read from the data set RAJ.WEEK_DATA_LAST.
NOTE: The PROCEDURE FREQ printed page 17.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set WORK.VERIF0 has 40130 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.08 seconds



NOTE: There were 40130 observations read from the data set WORK.VERIF0.
      WHERE TRIM(SUBSCRIBER_NO) not = ' ';
NOTE: The data set WORK.VERIF0 has 40130 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.19 seconds
      cpu time            0.06 seconds



NOTE: There were 40130 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF1 has 25375 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 47100 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
      WHERE ('23MAR2014'D<=DATEPART(EXPIRATION_ISSUE_DATE)) and (TRIM(Origin)='Exp') and
      (DATEPART(EXPIRATION_ISSUE_DATE)<='29MAR2014'D);
NOTE: The data set WORK.VERIF3 has 47100 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.14 seconds



NOTE: There were 47100 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 47100 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.27 seconds
      cpu time            0.16 seconds



NOTE: There were 47100 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 47100 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.09 seconds



NOTE: There were 47100 observations read from the data set WORK.VERIF3.
NOTE: There were 25375 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF3 has 47100 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.30 seconds
      cpu time            0.13 seconds



NOTE: There were 47100 observations read from the data set WORK.VERIF3.
NOTE: The data set RAJ.OPTION_ONGOING_WEEK_EXPIRED has 47100 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.07 seconds



NOTE: There were 38267 observations read from the data set RAJ.WEEK_OPTION_ALL_1.
      WHERE ('23MAR2014'D<=DATEPART(EFFECTIVE_ISSUE_DATE)) and (TRIM(Origin)='Eff') and
      (DATEPART(EFFECTIVE_ISSUE_DATE)<='29MAR2014'D);
NOTE: The data set WORK.VERIF4 has 38267 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.12 seconds



NOTE: There were 38267 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 38267 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.21 seconds
      cpu time            0.13 seconds



NOTE: There were 38267 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 38267 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.08 seconds



NOTE: There were 38267 observations read from the data set WORK.VERIF4.
NOTE: There were 25375 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF4 has 38267 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.16 seconds
      cpu time            0.09 seconds



NOTE: There were 38267 observations read from the data set WORK.VERIF4.
NOTE: The data set RAJ.OPTION_ONGOING_WEEK_STARTED has 38267 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.07 seconds



NOTE: There were 47100 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 47100 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.27 seconds
      cpu time            0.16 seconds



NOTE: There were 47100 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 15700 observations and 5 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.13 seconds
      cpu time            0.07 seconds



NOTE: There were 15700 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 6081 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.08 seconds
      cpu time            0.05 seconds



NOTE: There were 38267 observations read from the data set WORK.VERIF4.
NOTE: The PROCEDURE FREQ printed page 18.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 38267 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 38267 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.21 seconds
      cpu time            0.13 seconds



NOTE: There were 38267 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 14152 observations and 5 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.36 seconds
      cpu time            0.06 seconds



NOTE: There were 14152 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 6866 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.08 seconds
      cpu time            0.05 seconds



NOTE: There were 6081 observations read from the data set WORK.VERIF3.
NOTE: There were 6866 observations read from the data set WORK.VERIF4.
NOTE: There were 25375 observations read from the data set WORK.VERIF1.
NOTE: The data set RAJ.WEEK_OPTION_LAST has 8450 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds



NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      2369 at 9302:250   1584 at 9302:53
NOTE: There were 8450 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: The data set RAJ.WEEK_OPTION_LAST has 5704 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: The data set WORK.VERIF2 has 5704 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 5704 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 60418 observations read from the data set ODS.SERVICE_OFFERING_CURRENT.
NOTE: The data set WORK.VERIF3 has 60418 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           1.10 seconds
      cpu time            0.06 seconds



NOTE: There were 60418 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 60418 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds



NOTE: There were 56640 observations read from the data set ODS.PP_RC_RATE.
      WHERE (DATEPART(EFFECTIVE_DATE)<='29MAR2014'D) and ((EXPIRATION_DATE=.) or
      (DATEPART(EXPIRATION_DATE)>'29MAR2014'D)) and (SUSPENSION_AMOUNT=100);
NOTE: The data set WORK.VERIF4 has 56640 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           5.85 seconds
      cpu time            0.27 seconds



NOTE: There were 56640 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 56640 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.07 seconds
      cpu time            0.05 seconds



NOTE: There were 56640 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 56640 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF2.
NOTE: There were 60418 observations read from the data set WORK.VERIF3.
NOTE: There were 56640 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF2 has 5704 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 5704 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 5704 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: There were 5704 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEK_OPTION_LAST has 5704 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: The data set RAJ.WEEK_OPTION_LAST has 5704 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.02 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: The data set RAJ.WEEK_OPTION_LAST has 5704 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: The data set WORK.VERIF1 has 5704 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 5704 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds


NOTE: Data file RAJ.WEEK_PLAN_CHURN_RC.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.
NOTE: Data file RAJ.WEEK_PLAN_CHURN_RBS.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.
NOTE: Data file RAJ.WEEK_PLAN_CHURN_RBM.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.
NOTE: Data file RAJ.WEEK_PLAN_CHURN_RBL.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.
NOTE: Data file RAJ.WEEK_PLAN_CHURN_FC.DATA is in a format that is native to another host, or the
      file encoding does not match the session encoding. Cross Environment Data Access will be used,
      which might require additional CPU resources and might reduce performance.

NOTE: There were 8 observations read from the data set RAJ.WEEK_PLAN_CHURN_RC.
NOTE: There were 8 observations read from the data set RAJ.WEEK_PLAN_CHURN_RBS.
NOTE: There were 8 observations read from the data set RAJ.WEEK_PLAN_CHURN_RBM.
NOTE: There were 8 observations read from the data set RAJ.WEEK_PLAN_CHURN_RBL.
NOTE: There were 8 observations read from the data set RAJ.WEEK_PLAN_CHURN_FC.
NOTE: The data set WORK.VERIF2 has 40 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.02 seconds



NOTE: There were 40 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 40 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF1.
NOTE: There were 40 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF1 has 5704 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 5704 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: There were 5704 observations read from the data set WORK.VERIF1.
NOTE: The data set RAJ.WEEK_OPTION_LAST has 5704 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: The data set RAJ.WEEK_OPTION_LAST has 5704 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: The PROCEDURE MEANS printed page 19.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.12 seconds
      cpu time            0.02 seconds



NOTE: There were 9877 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
      WHERE (TRIM(OFFER_DISPOSITION)='Accepted') and (TRIM(MARKETING_OFFER_NAME) not = 'Rogers.com -
      Self Service Options') and TRIM(SEG_SUB_GROUP) in ('BIZUNKWN', 'CONSUMER', 'CORPUNKWN',
      'LRGBIZ', 'MEDBIZ', 'SMBIZ');
NOTE: The data set WORK.VERIF1 has 9877 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds



NOTE: There were 19567 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
      WHERE (TRIM(Sub_Status)='AC') and (TRIM(SEG_SUB_GROUP)='CONSUMER');
NOTE: The data set WORK.VERIF11 has 19567 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds



NOTE: There were 9877 observations read from the data set WORK.VERIF1.
      WHERE TRIM(BusSize) not = ' ';
NOTE: There were 19567 observations read from the data set WORK.VERIF11.
      WHERE TRIM(BusSize) not = ' ';
NOTE: The data set WORK.VERIF1 has 29444 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 29444 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 29444 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 29444 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 21078 observations and 6 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.13 seconds
      cpu time            0.08 seconds



NOTE: There were 5704 observations read from the data set RAJ.WEEK_OPTION_LAST.
NOTE: The data set WORK.VERIF2 has 5704 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 5704 observations and 34 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 21078 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 21078 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 5704 observations read from the data set WORK.VERIF2.
NOTE: There were 21078 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF3 has 6275 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 6275 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 6275 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 6275 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 6275 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds



NOTE: There were 6275 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 6253 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 6253 observations read from the data set WORK.VERIF3.
NOTE: The data set RAJ.SAVE_OPTION_WEEK has 6253 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 6253 observations read from the data set RAJ.SAVE_OPTION_WEEK.
NOTE: The PROCEDURE FREQ printed page 20.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 3224 observations read from the data set RAJ.WEEK_DATA_LAST.
      WHERE TRIM(SERVICE_TYPE) in ('D', 'I', 'R');
NOTE: The data set WORK.VERIF1 has 3224 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 3224 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3224 observations and 55 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 3224 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF2 has 3055 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 3224 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3055 observations and 55 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1686 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE (TRIM(BusSize)='FCons') and
      ((DATEPART(NEW_COMMIT_START_DATE)-DATEPART(HUP_REQUEST_DATE))>=-30);
NOTE: The data set WORK.VERIF2 has 1686 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 1686 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 1686 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1686 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 1381 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE FREQ printed page 21.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF2.
NOTE: There were 3055 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF2 has 1381 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE FREQ printed page 22.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.02 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE MEANS printed page 23.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 7778 observations read from the data set ODS.HARDWARE_PRICE_INFO.
      WHERE (TRIM(FRANCHISE_TYPE)='F') and (TRIM(SRV_TYPE) not = ' ');
NOTE: The data set WORK.VERIF1 has 7778 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           1.07 seconds
      cpu time            0.15 seconds



NOTE: There were 7778 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE FREQ printed page 24.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 2843 observations read from the data set WORK.VERIF1.
      WHERE TRIM(ACTIVITY)='LHO';
NOTE: The data set WORK.VERIF1 has 2843 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 2843 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE FREQ printed page 25.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 1381 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 2843 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 2843 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 2843 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 1988 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 632 observations read from the data set WORK.VERIF1.
      WHERE TRIM(SRV_TYPE)='A';
NOTE: The data set WORK.VERIF11 has 632 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 751 observations read from the data set WORK.VERIF1.
      WHERE TRIM(SRV_TYPE)='V';
NOTE: The data set WORK.VERIF12 has 751 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 605 observations read from the data set WORK.VERIF1.
      WHERE TRIM(SRV_TYPE)='D';
NOTE: The data set WORK.VERIF13 has 605 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 632 observations read from the data set WORK.VERIF11.
NOTE: There were 751 observations read from the data set WORK.VERIF12.
NOTE: There were 605 observations read from the data set WORK.VERIF13.
NOTE: The data set WORK.VERIF1 has 754 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 632 observations read from the data set WORK.VERIF1.
      WHERE (PRICE_A not = .) and (PRICE_V not = .);
NOTE: The PROCEDURE FREQ printed pages 26-34.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 632 observations read from the data set WORK.VERIF1.
      WHERE (PRICE_A not = .) and (PRICE_V not = .);
NOTE: The data set WORK.VERIF1 has 632 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 632 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF3 has 632 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF2.
NOTE: There were 632 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF3 has 1381 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF3.
NOTE: The PROCEDURE FREQ printed page 35.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      5 at 9302:172
NOTE: There were 1381 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 1381 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF3.
NOTE: The PROCEDURE MEANS printed page 36.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 1381 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 1381 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1815 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE TRIM(BusSize)='FCons';
NOTE: The data set WORK.VERIF4 has 1815 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1815 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 1815 observations and 44 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1815 observations read from the data set WORK.VERIF4.
NOTE: There were 1381 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF4 has 1815 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1062 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE TRIM(BusSize) not = 'FCons';
NOTE: There were 1815 observations read from the data set WORK.VERIF4.
NOTE: The data set RAJ.SAVE_HANDSET_WEEK has 2877 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 2877 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
NOTE: The PROCEDURE MEANS printed page 37.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 0 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE (HUPCost_Old not = .) and (HUPCost=.);
NOTE: The data set WORK.VERIF4 has 0 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set WORK.VERIF0 has 24801 observations and 79 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.57 seconds
      cpu time            0.28 seconds



NOTE: There were 3962 observations read from the data set WORK.VERIF0.
      WHERE (Credit_Value not = .) and (Month_Value not = .);
NOTE: The data set WORK.VERIF1 has 3962 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.05 seconds



NOTE: There were 3376 observations read from the data set WORK.VERIF1.
      WHERE (TRIM(Sub_Status)='AC') and (TRIM(SEG_SUB_GROUP)='CONSUMER') and (DiscountCost>0);
NOTE: The data set WORK.VERIF1 has 3376 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds



NOTE: There were 3376 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 2899 observations and 9 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.07 seconds
      cpu time            0.05 seconds



NOTE: There were 2899 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 2899 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 2899 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE FREQ printed page 38.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 2899 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE MEANS printed page 39.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 2899 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE MEANS printed page 40.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 2899 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.WEEKLY_CSR_DISCOUNT_FIDO_SC has 2899 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 19567 observations read from the data set WORK.VERIF0.
      WHERE (TRIM(Sub_Status)='AC') and (TRIM(SEG_SUB_GROUP)='CONSUMER');
NOTE: The data set WORK.VERIF2 has 19567 observations and 79 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.13 seconds



NOTE: There were 19567 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 13091 observations and 9 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.13 seconds
      cpu time            0.08 seconds



NOTE: There were 2336 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (TRIM(BusSize)='FCons') and (PlanCost not = .);
NOTE: There were 1760 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE (TRIM(BusSize)='FCons') and (HUPCost not = .);
NOTE: There were 3373 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (TRIM(BusSize)='FCons') and (OptionCost not = .);
NOTE: There were 2899 observations read from the data set WORK.WEEKLY_CSR_DISCOUNT_FIDO_SC.
      WHERE DiscountCost not = .;
NOTE: The data set WORK.VERIF1 has 10368 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 10368 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 10368 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 10368 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 5062 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds



NOTE: There were 13091 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 13091 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 5062 observations read from the data set WORK.VERIF1.
NOTE: There were 13091 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 7319 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 7319 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.WEEKLY_CSR_NONCOST_FIDO_SC has 7319 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 9877 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
      WHERE (TRIM(OFFER_DISPOSITION)='Accepted') and (TRIM(MARKETING_OFFER_NAME) not = 'Rogers.com -
      Self Service Options') and TRIM(SEG_SUB_GROUP) in ('BIZUNKWN', 'CONSUMER', 'CORPUNKWN',
      'LRGBIZ', 'MEDBIZ', 'SMBIZ');
NOTE: The data set WORK.VERIF0 has 9877 observations and 66 variables.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.10 seconds



NOTE: There were 9877 observations read from the data set WORK.VERIF0.
      WHERE TRIM(BusSize) not = ' ';
NOTE: The data set WORK.VERIF0 has 9877 observations and 66 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.21 seconds
      cpu time            0.14 seconds



NOTE: There were 2122 observations read from the data set WORK.VERIF0.
      WHERE ((UPCASE(TRIM(SUBSTR(ITEMNAME, 1, 10)))='WIR_RET_CR') or (UPCASE(TRIM(SUBSTR(ITEMNAME, 1,
      14)))='WIR_BIZ_RET_CR')) and (TRIM(OFFER_DISPOSITION)='Accepted') and (COST_OF_SAVE>0);
NOTE: The data set WORK.VERIF1 has 2122 observations and 67 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 2122 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 1968 observations and 10 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 1968 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 1968 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 1968 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE FREQ printed page 41.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1968 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE MEANS printed page 42.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 1968 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE MEANS printed page 43.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 1968 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.WEEKLY_CSR_DISCOUNT_ROGERS_SC has 1968 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 9877 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF2 has 9877 observations and 66 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds



NOTE: There were 9877 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 7987 observations and 10 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.09 seconds
      cpu time            0.05 seconds



NOTE: There were 4379 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE PlanCost not = .;
NOTE: There were 2757 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE HUPCost not = .;
NOTE: There were 6246 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE OptionCost not = .;
NOTE: The data set WORK.VERIF1 has 13382 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 5913 observations read from the data set WORK.VERIF1.
      WHERE TRIM(BusSize) in ('Large', 'Medium', 'RCons', 'Small');
NOTE: There were 1968 observations read from the data set WORK.WEEKLY_CSR_DISCOUNT_ROGERS_SC.
      WHERE DiscountCost not = .;
NOTE: The data set WORK.VERIF1 has 7881 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 7881 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 7881 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 7881 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 4349 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds



NOTE: There were 7987 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 7987 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4349 observations read from the data set WORK.VERIF1.
NOTE: There were 7987 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 3638 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 3638 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.WEEKLY_CSR_NONCOST_ROGERS_SC has 3638 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 1968 observations read from the data set WORK.WEEKLY_CSR_DISCOUNT_ROGERS_SC.
NOTE: There were 2899 observations read from the data set WORK.WEEKLY_CSR_DISCOUNT_FIDO_SC.
NOTE: The data set RAJ.SAVE_DISCOUNT_WEEK has 4867 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 3638 observations read from the data set WORK.WEEKLY_CSR_NONCOST_ROGERS_SC.
NOTE: There were 7319 observations read from the data set WORK.WEEKLY_CSR_NONCOST_FIDO_SC.
NOTE: The data set RAJ.SAVE_NONCOST_WEEK has 10957 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 968 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (TRIM(Post_SavePlan)='Yes') and (PlanCost not = .);
NOTE: The data set WORK.VERIF11 has 23324 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.08 seconds
      cpu time            0.05 seconds



NOTE: There were 1719 observations read from the data set WORK.VERIF11.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(FootPrint) not = ' ') and
      (TRIM(CSR_ID) not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF11 has 1719 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1719 observations read from the data set WORK.VERIF11.
NOTE: The data set WORK.VERIF11 has 1719 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 3411 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (TRIM(Post_SavePlan)='No') and (PlanCost not = .);
NOTE: The data set WORK.VERIF111 has 58928 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.16 seconds
      cpu time            0.10 seconds



NOTE: There were 5033 observations read from the data set WORK.VERIF111.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(FootPrint) not = ' ') and
      (TRIM(CSR_ID) not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF111 has 5033 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 5033 observations read from the data set WORK.VERIF111.
NOTE: The data set WORK.VERIF111 has 5033 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 4379 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE PlanCost not = .;
NOTE: The data set WORK.VERIF1111 has 69066 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.17 seconds
      cpu time            0.11 seconds



NOTE: There were 6152 observations read from the data set WORK.VERIF1111.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(FootPrint) not = ' ') and
      (TRIM(CSR_ID) not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF1111 has 6152 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 6152 observations read from the data set WORK.VERIF1111.
NOTE: The data set WORK.VERIF1111 has 6152 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 2757 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE HUPCost not = .;
NOTE: The data set WORK.VERIF11111 has 48404 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds



NOTE: There were 4157 observations read from the data set WORK.VERIF11111.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(FootPrint) not = ' ') and
      (TRIM(CSR_ID) not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF11111 has 4157 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 4157 observations read from the data set WORK.VERIF11111.
NOTE: The data set WORK.VERIF11111 has 4157 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 6246 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE OptionCost not = .;
NOTE: The data set WORK.VERIF111111 has 83984 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.18 seconds
      cpu time            0.12 seconds



NOTE: There were 7875 observations read from the data set WORK.VERIF111111.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(FootPrint) not = ' ') and
      (TRIM(CSR_ID) not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF111111 has 7875 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 7875 observations read from the data set WORK.VERIF111111.
NOTE: The data set WORK.VERIF111111 has 7875 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1719 observations read from the data set WORK.VERIF11.
NOTE: There were 5033 observations read from the data set WORK.VERIF111.
NOTE: There were 6152 observations read from the data set WORK.VERIF1111.
NOTE: There were 4157 observations read from the data set WORK.VERIF11111.
NOTE: There were 7875 observations read from the data set WORK.VERIF111111.
NOTE: The data set WORK.VERIF3 has 9156 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 9877 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
      WHERE (TRIM(OFFER_DISPOSITION)='Accepted') and (TRIM(MARKETING_OFFER_NAME) not = 'Rogers.com -
      Self Service Options') and TRIM(SEG_SUB_GROUP) in ('BIZUNKWN', 'CONSUMER', 'CORPUNKWN',
      'LRGBIZ', 'MEDBIZ', 'SMBIZ');
NOTE: The data set WORK.VERIF1 has 9877 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 19567 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
      WHERE (TRIM(Sub_Status)='AC') and (TRIM(SEG_SUB_GROUP)='CONSUMER');
NOTE: The data set WORK.VERIF11 has 19567 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.05 seconds



NOTE: There were 9877 observations read from the data set WORK.VERIF1.
      WHERE TRIM(BusSize) not = ' ';
NOTE: There were 19567 observations read from the data set WORK.VERIF11.
      WHERE TRIM(BusSize) not = ' ';
NOTE: The data set WORK.VERIF1 has 29444 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 29444 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF4 has 21078 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.16 seconds
      cpu time            0.12 seconds



NOTE: There were 21078 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 131638 observations and 7 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.25 seconds
      cpu time            0.16 seconds



NOTE: There were 13972 observations read from the data set WORK.VERIF4.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(FootPrint) not = ' ') and
      (TRIM(CSR_ID) not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF4 has 13972 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds



NOTE: There were 13972 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 13972 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4867 observations read from the data set RAJ.SAVE_DISCOUNT_WEEK.
      WHERE DiscountCost not = .;
NOTE: The data set WORK.VERIF5 has 69778 observations and 9 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.17 seconds
      cpu time            0.11 seconds



NOTE: There were 6351 observations read from the data set WORK.VERIF5.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(FootPrint) not = ' ') and
      (TRIM(CSR_ID) not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF5 has 6351 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 6351 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 6351 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 10957 observations read from the data set RAJ.SAVE_NONCOST_WEEK.
      WHERE NbNonCost not = .;
NOTE: The data set WORK.VERIF6 has 74764 observations and 9 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.18 seconds
      cpu time            0.12 seconds



NOTE: There were 7948 observations read from the data set WORK.VERIF6.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(FootPrint) not = ' ') and
      (TRIM(CSR_ID) not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF6 has 7948 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 7948 observations read from the data set WORK.VERIF6.
NOTE: The data set WORK.VERIF6 has 7948 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 13972 observations read from the data set WORK.VERIF4.
NOTE: There were 9156 observations read from the data set WORK.VERIF3.
NOTE: There were 6351 observations read from the data set WORK.VERIF5.
NOTE: There were 7948 observations read from the data set WORK.VERIF6.
NOTE: The data set RAJ.DAILY_CSR_COS has 13972 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.05 seconds



NOTE: There were 171975 observations read from the data set RAJ.Y12_DAILY_CSR_CUM.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 13972 observations read from the data set RAJ.DAILY_CSR_COS.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_DAILY_CSR_CUM has 185947 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.79 seconds
      cpu time            0.42 seconds



NOTE: There were 6889 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
      WHERE TRIM(FootPrint)='Y';
NOTE: There were 8732 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
      WHERE TRIM(FootPrint)='Y';
NOTE: The data set WORK.VERIF5 has 15621 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds



NOTE: There were 15621 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 15621 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 15621 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF6 has 8700 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 8700 observations read from the data set WORK.VERIF6.
NOTE: The data set WORK.VERIF7 has 8700 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 8700 observations read from the data set WORK.VERIF6.
NOTE: The data set WORK.VERIF6 has 8700 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 184025 observations read from the data set RAJ.IPTV.
NOTE: There were 8700 observations read from the data set WORK.VERIF6.
NOTE: The data set WORK.VERIF5 has 8700 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.05 seconds



NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 8700 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 8700 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 65 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.35 seconds
      cpu time            0.21 seconds



NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set RAJ.WEEK_SMARTLAST_ROGERS has 15329 observations and 66 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.11 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 79 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.49 seconds
      cpu time            0.31 seconds



NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set RAJ.WEEK_SMARTLAST_FIDO has 24801 observations and 80 variables.
NOTE: DATA statement used (Total process time):
      real time           0.34 seconds
      cpu time            0.18 seconds



NOTE: There were 4379 observations read from the data set RAJ.SAVE_PLAN_WEEK.
NOTE: The data set RAJ.SAVE_PLAN_WEEK has 4379 observations and 109 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 4379 observations read from the data set RAJ.SAVE_PLAN_WEEK.
NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set RAJ.SAVE_PLAN_WEEK has 4379 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 2877 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
NOTE: The data set RAJ.SAVE_HANDSET_WEEK has 2877 observations and 52 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 2877 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set RAJ.SAVE_HANDSET_WEEK has 2877 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds



NOTE: There were 6253 observations read from the data set RAJ.SAVE_OPTION_WEEK.
NOTE: The data set RAJ.SAVE_OPTION_WEEK has 6253 observations and 37 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 6253 observations read from the data set RAJ.SAVE_OPTION_WEEK.
NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set RAJ.SAVE_OPTION_WEEK has 6253 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds



NOTE: There were 4867 observations read from the data set RAJ.SAVE_DISCOUNT_WEEK.
NOTE: The data set RAJ.SAVE_DISCOUNT_WEEK has 4867 observations and 11 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4867 observations read from the data set RAJ.SAVE_DISCOUNT_WEEK.
NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set RAJ.SAVE_DISCOUNT_WEEK has 4867 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 10957 observations read from the data set RAJ.SAVE_NONCOST_WEEK.
NOTE: The data set RAJ.SAVE_NONCOST_WEEK has 10957 observations and 10 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 10957 observations read from the data set RAJ.SAVE_NONCOST_WEEK.
NOTE: There were 8700 observations read from the data set WORK.VERIF5.
NOTE: The data set RAJ.SAVE_NONCOST_WEEK has 10957 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



WARNING: Multiple lengths were specified for the variable RETENTION_GROUP_ID by input data set(s).
         This may cause truncation of data.
WARNING: Multiple lengths were specified for the variable RETENTION_GROUP_DESC by input data set(s).
         This may cause truncation of data.
NOTE: There were 220099 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_ROGERS.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_SAVE_SMART_CUM_ROGERS has 235428 observations and 66 variables.
NOTE: DATA statement used (Total process time):
      real time           5.69 seconds
      cpu time            2.27 seconds



WARNING: Multiple lengths were specified for the variable Sub_DeacType by input data set(s). This may
         cause truncation of data.
WARNING: Multiple lengths were specified for the variable Sub_PricePlan by input data set(s). This
         may cause truncation of data.
WARNING: Multiple lengths were specified for the variable Offer_Group_Desc by input data set(s). This
         may cause truncation of data.
WARNING: Multiple lengths were specified for the variable Offer_Desc_Fr by input data set(s). This
         may cause truncation of data.
WARNING: Multiple lengths were specified for the variable Offer_Desc_En by input data set(s). This
         may cause truncation of data.
WARNING: Multiple lengths were specified for the variable ITEMNAME by input data set(s). This may
         cause truncation of data.
NOTE: There were 287374 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_FIDO.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 24801 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_SAVE_SMART_CUM_FIDO has 312175 observations and 76 variables.
NOTE: DATA statement used (Total process time):
      real time           3.40 seconds
      cpu time            1.48 seconds



NOTE: There were 59949 observations read from the data set RAJ.Y12_SAVE_PLAN_CUM.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 4379 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_SAVE_PLAN_CUM has 64328 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           2.24 seconds
      cpu time            0.40 seconds



NOTE: There were 35021 observations read from the data set RAJ.Y12_SAVE_HANDSET_CUM.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 2877 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_SAVE_HANDSET_CUM has 37898 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.65 seconds
      cpu time            0.15 seconds



NOTE: There were 82288 observations read from the data set RAJ.Y12_SAVE_OPTION_CUM.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 6253 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_SAVE_OPTION_CUM has 88541 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           2.34 seconds
      cpu time            0.30 seconds



NOTE: There were 63189 observations read from the data set RAJ.Y12_SAVE_DISCOUNT_CUM.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 4867 observations read from the data set RAJ.SAVE_DISCOUNT_WEEK.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_SAVE_DISCOUNT_CUM has 68056 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.43 seconds
      cpu time            0.13 seconds



NOTE: There were 118518 observations read from the data set RAJ.Y12_SAVE_NONCOST_CUM.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 10957 observations read from the data set RAJ.SAVE_NONCOST_WEEK.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_SAVE_NONCOST_CUM has 129475 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.44 seconds
      cpu time            0.23 seconds



NOTE: There were 466 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (TRIM(FootPrint)='Y') and (TRIM(Post_SavePlan)='Yes') and (PlanCost not = .);
NOTE: The data set WORK.VERIF11 has 12922 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds



NOTE: There were 859 observations read from the data set WORK.VERIF11.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(IPTV) not = ' ') and (TRIM(CSR_ID)
      not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF11 has 859 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 859 observations read from the data set WORK.VERIF11.
NOTE: The data set WORK.VERIF11 has 859 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1195 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (TRIM(FootPrint)='Y') and (TRIM(Post_SavePlan)='No') and (PlanCost not = .);
NOTE: The data set WORK.VERIF111 has 27572 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.09 seconds
      cpu time            0.05 seconds



NOTE: There were 1976 observations read from the data set WORK.VERIF111.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(IPTV) not = ' ') and (TRIM(CSR_ID)
      not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF111 has 1976 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 1976 observations read from the data set WORK.VERIF111.
NOTE: The data set WORK.VERIF111 has 1976 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1661 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (TRIM(FootPrint)='Y') and (PlanCost not = .);
NOTE: The data set WORK.VERIF1111 has 35546 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds



NOTE: There were 2685 observations read from the data set WORK.VERIF1111.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(IPTV) not = ' ') and (TRIM(CSR_ID)
      not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF1111 has 2685 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 2685 observations read from the data set WORK.VERIF1111.
NOTE: The data set WORK.VERIF1111 has 2685 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 951 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE (TRIM(FootPrint)='Y') and (HUPCost not = .);
NOTE: The data set WORK.VERIF11111 has 23064 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds



NOTE: There were 1670 observations read from the data set WORK.VERIF11111.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(IPTV) not = ' ') and (TRIM(CSR_ID)
      not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF11111 has 1670 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 1670 observations read from the data set WORK.VERIF11111.
NOTE: The data set WORK.VERIF11111 has 1670 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 2348 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (TRIM(FootPrint)='Y') and (OptionCost not = .);
NOTE: The data set WORK.VERIF111111 has 45310 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.14 seconds
      cpu time            0.07 seconds



NOTE: There were 3647 observations read from the data set WORK.VERIF111111.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(IPTV) not = ' ') and (TRIM(CSR_ID)
      not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF111111 has 3647 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 3647 observations read from the data set WORK.VERIF111111.
NOTE: The data set WORK.VERIF111111 has 3647 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.02 seconds



NOTE: There were 859 observations read from the data set WORK.VERIF11.
NOTE: There were 1976 observations read from the data set WORK.VERIF111.
NOTE: There were 2685 observations read from the data set WORK.VERIF1111.
NOTE: There were 1670 observations read from the data set WORK.VERIF11111.
NOTE: There were 3647 observations read from the data set WORK.VERIF111111.
NOTE: The data set WORK.VERIF3 has 4352 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 4471 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
      WHERE (TRIM(OFFER_DISPOSITION)='Accepted') and (TRIM(FootPrint)='Y') and
      (TRIM(MARKETING_OFFER_NAME) not = 'Rogers.com - Self Service Options') and TRIM(SEG_SUB_GROUP)
      in ('BIZUNKWN', 'CONSUMER', 'CORPUNKWN', 'LRGBIZ', 'MEDBIZ', 'SMBIZ');
NOTE: The data set WORK.VERIF0 has 4471 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds



NOTE: There were 6794 observations read from the data set RAJ.WEEK_SMARTLAST_FIDO.
      WHERE (TRIM(Sub_Status)='AC') and (TRIM(FootPrint)='Y') and (TRIM(SEG_SUB_GROUP)='CONSUMER');
NOTE: The data set WORK.VERIF1 has 6794 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 4471 observations read from the data set WORK.VERIF0.
NOTE: There were 6794 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF0 has 11265 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 11265 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF4 has 8136 observations and 8 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds



NOTE: There were 8136 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 86818 observations and 7 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.17 seconds
      cpu time            0.11 seconds



NOTE: There were 8260 observations read from the data set WORK.VERIF4.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(IPTV) not = ' ') and (TRIM(CSR_ID)
      not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF4 has 8260 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 8260 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 8260 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 2087 observations read from the data set RAJ.SAVE_DISCOUNT_WEEK.
      WHERE (TRIM(FootPrint)='Y') and (DiscountCost not = .);
NOTE: The data set WORK.VERIF5 has 40598 observations and 9 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.13 seconds
      cpu time            0.07 seconds



NOTE: There were 3207 observations read from the data set WORK.VERIF5.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(IPTV) not = ' ') and (TRIM(CSR_ID)
      not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF5 has 3207 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 3207 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 3207 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 4150 observations read from the data set RAJ.SAVE_NONCOST_WEEK.
      WHERE (TRIM(FootPrint)='Y') and (NbNonCost not = .);
NOTE: The data set WORK.VERIF6 has 49782 observations and 9 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.15 seconds
      cpu time            0.09 seconds



NOTE: There were 4623 observations read from the data set WORK.VERIF6.
      WHERE (TRIM(BusSize) not = ' ') and (Week not = .) and (TRIM(IPTV) not = ' ') and (TRIM(CSR_ID)
      not = ' ') and (TransactionDate not = .);
NOTE: The data set WORK.VERIF6 has 4623 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 4623 observations read from the data set WORK.VERIF6.
NOTE: The data set WORK.VERIF6 has 4623 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 8260 observations read from the data set WORK.VERIF4.
NOTE: There were 4352 observations read from the data set WORK.VERIF3.
NOTE: There were 3207 observations read from the data set WORK.VERIF5.
NOTE: There were 4623 observations read from the data set WORK.VERIF6.
NOTE: The data set RAJ.DAILY_CSR_IPTV has 8260 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 101821 observations read from the data set RAJ.Y12_DAILY_CSR_IPTV_CUM.
      WHERE (TransactionDate<(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) or
      (TransactionDate>(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: There were 8260 observations read from the data set RAJ.DAILY_CSR_IPTV.
      WHERE (TransactionDate>=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+1)) and
      (TransactionDate<=(((TODAY()-7)-WEEKDAY((TODAY()-7)))+7));
NOTE: The data set RAJ.Y12_DAILY_CSR_IPTV_CUM has 110081 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.63 seconds
      cpu time            0.26 seconds


                                              Directory

                    Libref             WORK
                    Engine             V9
                    Physical Name      /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Filename           /edwpl/sastmp/SAS_work2C6103610340_rcirs133
                    Inode Number       499907
                    Access Permission  rwxrwxr-x
                    Owner Name         rxavier
                    File Size (bytes)  4096


                                            Member
          #  Name                           Type       File Size  Last Modified

          1  FORMATS                        CATALOG        24576  30Mar14:19:19:55
          2  SASMACR                        CATALOG       249856  30Mar14:20:08:38
          3  VERIF                          DATA           16384  30Mar14:20:08:40
          4  VERIF0                         DATA          835584  30Mar14:20:26:58
          5  VERIF01                        DATA      9691332608  30Mar14:19:00:29
          6  VERIF02                        DATA      5349253120  30Mar14:19:19:32
          7  VERIF1                         DATA          507904  30Mar14:20:26:58
          8  VERIF11                        DATA           73728  30Mar14:20:26:58
          9  VERIF111                       DATA          139264  30Mar14:20:26:58
         10  VERIF1111                      DATA          188416  30Mar14:20:26:58
         11  VERIF11111                     DATA          122880  30Mar14:20:26:58
         12  VERIF111111                    DATA          253952  30Mar14:20:26:58
         13  VERIF12                        DATA           40960  30Mar14:20:26:34
         14  VERIF13                        DATA           32768  30Mar14:20:26:34
         15  VERIF2                         DATA          335872  30Mar14:20:26:37
         16  VERIF3                         DATA          581632  30Mar14:20:26:58
         17  VERIF4                         DATA          483328  30Mar14:20:26:59
         18  VERIF5                         DATA          245760  30Mar14:20:26:59
         19  VERIF6                         DATA          352256  30Mar14:20:26:59
         20  VERIF7                         DATA          294912  30Mar14:20:26:40
         21  WEEKLY_CSR_DISCOUNT_FIDO_SC    DATA          294912  30Mar14:20:26:36
         22  WEEKLY_CSR_DISCOUNT_ROGERS_SC  DATA          204800  30Mar14:20:26:37
         23  WEEKLY_CSR_NONCOST_FIDO_SC     DATA          663552  30Mar14:20:26:36
         24  WEEKLY_CSR_NONCOST_ROGERS_SC   DATA          335872  30Mar14:20:26:37
         25  WORKTABLE11                    DATA           90112  30Mar14:19:43:39

NOTE: Deleting WORK.VERIF (memtype=DATA).
NOTE: Deleting WORK.VERIF0 (memtype=DATA).
NOTE: Deleting WORK.VERIF01 (memtype=DATA).
NOTE: Deleting WORK.VERIF02 (memtype=DATA).
NOTE: Deleting WORK.VERIF1 (memtype=DATA).
NOTE: Deleting WORK.VERIF11 (memtype=DATA).
NOTE: Deleting WORK.VERIF111 (memtype=DATA).
NOTE: Deleting WORK.VERIF1111 (memtype=DATA).
NOTE: Deleting WORK.VERIF11111 (memtype=DATA).
NOTE: Deleting WORK.VERIF111111 (memtype=DATA).
NOTE: Deleting WORK.VERIF12 (memtype=DATA).
NOTE: Deleting WORK.VERIF13 (memtype=DATA).
NOTE: Deleting WORK.VERIF2 (memtype=DATA).
NOTE: Deleting WORK.VERIF3 (memtype=DATA).
NOTE: Deleting WORK.VERIF4 (memtype=DATA).
NOTE: Deleting WORK.VERIF5 (memtype=DATA).
NOTE: Deleting WORK.VERIF6 (memtype=DATA).
NOTE: Deleting WORK.VERIF7 (memtype=DATA).
NOTE: Deleting WORK.WEEKLY_CSR_DISCOUNT_ROGERS_SC (memtype=DATA).
NOTE: Deleting WORK.WEEKLY_CSR_DISCOUNT_FIDO_SC (memtype=DATA).
NOTE: Deleting WORK.WEEKLY_CSR_NONCOST_ROGERS_SC (memtype=DATA).
NOTE: Deleting WORK.WEEKLY_CSR_NONCOST_FIDO_SC (memtype=DATA).
NOTE: Deleting WORK.WORKTABLE11 (memtype=DATA).
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           15.64 seconds
      cpu time            10.11 seconds



NOTE: There were 87296 observations read from the data set RAJ.Y12_DAILY_CSR_CUM.
      WHERE TRIM(BusSize)='FCons';
NOTE: The PROCEDURE FREQ printed pages 44-45.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 110081 observations read from the data set RAJ.Y12_DAILY_CSR_IPTV_CUM.
NOTE: The PROCEDURE FREQ printed pages 46-47.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 235428 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_ROGERS.
NOTE: The PROCEDURE FREQ printed page 48.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.22 seconds
      cpu time            0.13 seconds


NOTE: Remote submit to HOST complete.
349    %inc sascode(Part3M.sas);
NOTE: Remote submit to HOST commencing.
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.

NOTE: There were 185947 observations read from the data set RAJ.Y12_DAILY_CSR_CUM.
NOTE: The data set WORK.Y12_DAILY_CSR_CUM has 185947 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.25 seconds
      cpu time            0.15 seconds



NOTE: There were 185947 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE (Week>=0 and Week<=12);
NOTE: The data set WORK.VERIF1 has 15 observations and 20 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.19 seconds
      cpu time            0.19 seconds



NOTE: There were 185947 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE (Week>=0 and Week<=12);
NOTE: The data set WORK.VERIF2 has 45 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds



NOTE: There were 13972 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF21 has 15 observations and 20 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds



NOTE: There were 13972 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF22 has 104 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds



NOTE: There were 13972 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF23 has 4127 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF1.
NOTE: There were 45 observations read from the data set WORK.VERIF2.
NOTE: There were 15 observations read from the data set WORK.VERIF21.
NOTE: There were 104 observations read from the data set WORK.VERIF22.
NOTE: There were 4127 observations read from the data set WORK.VERIF23.
NOTE: The data set WORK.VERIF4 has 4306 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      570 at 10918:227
NOTE: There were 4306 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4306 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4306 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4306 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4306 observations and 31 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF4.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD has 4306 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
      WHERE (Week=12) and (UPCASE(TRIM(SUBSTR(Case, 1, 21)))='  TOTAL ONGOING WEEK');
NOTE: The data set WORK.VERIF1 has 15 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 15 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 26 observations and 16 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF1.
NOTE: The data set RAJ.WEEKLY_ONE_PAGER_NATIONAL has 26 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_NATIONAL.
NOTE: The data set RAJ.WEEKLY_ONE_PAGER_NATIONAL_PERC has 26 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 185947 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE (Week>=0 and Week<=12);
NOTE: The data set WORK.VERIF1 has 30 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.21 seconds
      cpu time            0.19 seconds



NOTE: There were 185947 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE (Week>=0 and Week<=12);
NOTE: The data set WORK.VERIF2 has 90 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.22 seconds
      cpu time            0.22 seconds



NOTE: There were 13972 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF21 has 30 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.08 seconds
      cpu time            0.05 seconds



NOTE: There were 13972 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF22 has 203 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds



NOTE: There were 13972 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF23 has 6224 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds



NOTE: There were 30 observations read from the data set WORK.VERIF1.
NOTE: There were 90 observations read from the data set WORK.VERIF2.
NOTE: There were 30 observations read from the data set WORK.VERIF21.
NOTE: There were 203 observations read from the data set WORK.VERIF22.
NOTE: There were 6224 observations read from the data set WORK.VERIF23.
NOTE: The data set WORK.VERIF4 has 6577 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      938 at 10918:145
NOTE: There were 6577 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 6577 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 6577 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 6577 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 6577 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 6577 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 6577 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 6577 observations and 32 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 6577 observations read from the data set WORK.VERIF4.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD has 6577 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 30 observations read from the data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.
      WHERE (Week=12) and (UPCASE(TRIM(SUBSTR(Case, 1, 21)))='  TOTAL ONGOING WEEK');
NOTE: The data set WORK.VERIF2 has 30 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF2.
      WHERE TRIM(FootPrint)='Y';
NOTE: The data set WORK.VERIF0 has 15 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 26 observations and 16 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 26 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF2.
      WHERE TRIM(FootPrint)='N';
NOTE: The data set WORK.VERIF1 has 15 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 26 observations and 16 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 26 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF0.
NOTE: There were 26 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF2 has 52 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 52 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEKLY_ONE_PAGER_FOOTPRINT has 52 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 110081 observations read from the data set RAJ.Y12_DAILY_CSR_IPTV_CUM.
      WHERE (Week>=0 and Week<=12);
NOTE: The data set WORK.VERIF1 has 30 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.14 seconds
      cpu time            0.13 seconds



NOTE: There were 110081 observations read from the data set RAJ.Y12_DAILY_CSR_IPTV_CUM.
      WHERE (Week>=0 and Week<=12);
NOTE: The data set WORK.VERIF2 has 90 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.17 seconds
      cpu time            0.12 seconds



NOTE: There were 8260 observations read from the data set RAJ.Y12_DAILY_CSR_IPTV_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF21 has 30 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds



NOTE: There were 8260 observations read from the data set RAJ.Y12_DAILY_CSR_IPTV_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF22 has 199 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.10 seconds
      cpu time            0.05 seconds



NOTE: There were 8260 observations read from the data set RAJ.Y12_DAILY_CSR_IPTV_CUM.
      WHERE Week=12;
NOTE: The data set WORK.VERIF23 has 4351 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.13 seconds
      cpu time            0.06 seconds



NOTE: There were 30 observations read from the data set WORK.VERIF1.
NOTE: There were 90 observations read from the data set WORK.VERIF2.
NOTE: There were 30 observations read from the data set WORK.VERIF21.
NOTE: There were 199 observations read from the data set WORK.VERIF22.
NOTE: There were 4351 observations read from the data set WORK.VERIF23.
NOTE: The data set WORK.VERIF4 has 4700 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds



NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      946 at 10918:44
NOTE: There were 4700 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4700 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds



NOTE: There were 4700 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4700 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds



NOTE: There were 4700 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4700 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.02 seconds



NOTE: There were 4700 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4700 observations and 32 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds



NOTE: There were 4700 observations read from the data set WORK.VERIF4.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD has 4700 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.
      WHERE (TRIM(IPTV)='Y') and (Week=12) and (UPCASE(TRIM(SUBSTR(Case, 1, 21)))='  TOTAL ONGOING
      WEEK');
NOTE: The data set WORK.VERIF0 has 15 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 26 observations and 16 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 26 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.
      WHERE (TRIM(IPTV)='N') and (Week=12) and (UPCASE(TRIM(SUBSTR(Case, 1, 21)))='  TOTAL ONGOING
      WEEK');
NOTE: The data set WORK.VERIF1 has 15 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 26 observations and 16 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 26 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF0.
NOTE: There were 26 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF2 has 52 observations and 18 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 52 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEKLY_ONE_PAGER_IPTV has 52 observations and 17 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 86501 observations read from the data set ODS.HRXPRESS_MASTER_LIST.
NOTE: The data set WORK.VERIF0 has 86501 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           3.90 seconds
      cpu time            0.34 seconds



NOTE: There were 15329 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_ROGERS.
      WHERE Week=12;
NOTE: The data set WORK.VERIF1 has 15329 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.10 seconds



NOTE: There were 24801 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_FIDO.
      WHERE Week=12;
NOTE: The data set WORK.VERIF2 has 24801 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.08 seconds



NOTE: There were 86501 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 86501 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.58 seconds
      cpu time            0.22 seconds



NOTE: There were 86501 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF4 has 86501 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.60 seconds
      cpu time            0.25 seconds



NOTE: There were 15329 observations read from the data set WORK.VERIF1.
      WHERE EMPLOYEE_ID not = .;
NOTE: The data set WORK.VERIF1 has 15329 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds



NOTE: There were 15329 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 787 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 787 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF4 has 787 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 24798 observations read from the data set WORK.VERIF2.
      WHERE EMPLOYEE_ID not = .;
NOTE: The data set WORK.VERIF2 has 24798 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.08 seconds
      cpu time            0.01 seconds



NOTE: There were 24798 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 742 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 742 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF4 has 742 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 787 observations read from the data set WORK.VERIF1.
NOTE: There were 742 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF3 has 1529 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1529 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 1529 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1529 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF4 has 1504 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 1529 observations read from the data set WORK.VERIF3.
NOTE: There were 86501 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF3 has 1529 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.05 seconds



NOTE: There were 1529 observations read from the data set WORK.VERIF3.
NOTE: The PROCEDURE FREQ printed page 49.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1502 observations read from the data set WORK.VERIF3.
      WHERE TRIM(Origin)='ab';
NOTE: The data set WORK.VERIF3 has 1502 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1502 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 1478 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 1478 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 1478 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 1478 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF3 has 1478 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD has 4306 observations and 31 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
NOTE: There were 1478 observations read from the data set WORK.VERIF3.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD has 4306 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD has 4306 observations and 44 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 6577 observations read from the data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD has 6577 observations and 32 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 6577 observations read from the data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.
NOTE: There were 1478 observations read from the data set WORK.VERIF3.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD has 6577 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 6577 observations read from the data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD has 6577 observations and 45 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds



NOTE: There were 4700 observations read from the data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD has 4700 observations and 32 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4700 observations read from the data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.
NOTE: There were 1478 observations read from the data set WORK.VERIF3.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD has 4700 observations and 45 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 4700 observations read from the data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD has 4700 observations and 45 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 968 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (TRIM(Post_SavePlan)='Yes') and (Week=12);
NOTE: The data set WORK.VERIF1 has 968 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 968 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 968 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 968 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF2 has 60 observations and 7 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 60 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEKLY_SAVE_PLAN_NATIONAL has 60 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 466 observations read from the data set RAJ.Y12_SAVE_PLAN_CUM.
      WHERE (TRIM(Post_SavePlan)='Yes') and (Week=12) and (TRIM(FootPrint)='Y');
NOTE: The data set WORK.VERIF1 has 466 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds



NOTE: There were 466 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 466 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 466 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF2 has 52 observations and 7 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 52 observations read from the data set WORK.VERIF2.
NOTE: The data set RAJ.WEEKLY_SAVE_PLAN_IPTV has 52 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
NOTE: The data set WORK.VERIF6 has 4306 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF6.
NOTE: The data set WORK.VERIF6 has 4306 observations and 44 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
NOTE: The data set WORK.VERIF0 has 4306 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF0.
      WHERE TRIM(SaveContract)='T';
NOTE: The data set WORK.VERIF1 has 1738 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 970 observations read from the data set WORK.VERIF0.
      WHERE TRIM(SaveContract)='Y';
NOTE: The data set WORK.VERIF2 has 970 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 1598 observations read from the data set WORK.VERIF0.
      WHERE TRIM(SaveContract)='N';
NOTE: The data set WORK.VERIF3 has 1598 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF1.
NOTE: There were 970 observations read from the data set WORK.VERIF2.
NOTE: There were 1598 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF4 has 1738 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 1738 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF1 has 1738 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF2 has 1738 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF3 has 1738 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF1.
NOTE: There were 1738 observations read from the data set WORK.VERIF2.
NOTE: There were 1738 observations read from the data set WORK.VERIF3.
NOTE: The data set WORK.VERIF5 has 5214 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 5214 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 5214 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF6.
NOTE: There were 5214 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF6 has 4306 observations and 44 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF6.
NOTE: The data set RAJ.WEEKLY_CSR_REP_NATIONAL_PERC_YTD has 4306 observations and 44 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.02 seconds



NOTE: There were 185947 observations read from the data set RAJ.Y12_DAILY_CSR_CUM.
NOTE: The data set WORK.VERIF01 has 185947 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.34 seconds
      cpu time            0.22 seconds



NOTE: There were 86501 observations read from the data set ODS.HRXPRESS_MASTER_LIST.
NOTE: The data set WORK.VERIF0 has 86501 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           4.06 seconds
      cpu time            0.31 seconds



NOTE: There were 235428 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_ROGERS.
NOTE: There were 312175 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_FIDO.
NOTE: The data set WORK.VERIF1 has 547603 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.69 seconds
      cpu time            0.40 seconds



NOTE: There were 86501 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 86501 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.37 seconds
      cpu time            0.20 seconds



NOTE: There were 86501 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF5 has 86501 observations and 3 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.39 seconds
      cpu time            0.25 seconds



NOTE: There were 547603 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 547603 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.51 seconds
      cpu time            0.85 seconds


NOTE: There were 547603 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3036 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.13 seconds



NOTE: There were 3036 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3036 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 3036 observations read from the data set WORK.VERIF1.
NOTE: There were 86501 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF1 has 3036 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds



NOTE: There were 3036 observations read from the data set WORK.VERIF1.
NOTE: The PROCEDURE FREQ printed page 50.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF01.
NOTE: The data set WORK.VERIF01 has 185947 observations and 24 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.58 seconds
      cpu time            0.48 seconds



NOTE: There were 3036 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3036 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF01.
NOTE: There were 3036 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF01 has 185947 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.60 seconds
      cpu time            0.35 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF01.
NOTE: The data set WORK.VERIF01 has 185947 observations and 37 variables.
NOTE: DATA statement used (Total process time):
      real time           0.69 seconds
      cpu time            0.38 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF01.
      WHERE (Week>=0 and Week<=12);
NOTE: The data set WORK.VERIF1 has 236 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.39 seconds
      cpu time            0.23 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF01.
      WHERE (Week>=0 and Week<=12);
NOTE: The data set WORK.VERIF2 has 543 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.28 seconds
      cpu time            0.24 seconds



NOTE: There were 13972 observations read from the data set WORK.VERIF01.
      WHERE Week=12;
NOTE: The data set WORK.VERIF21 has 112 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.11 seconds
      cpu time            0.08 seconds



NOTE: There were 13972 observations read from the data set WORK.VERIF01.
      WHERE Week=12;
NOTE: The data set WORK.VERIF22 has 441 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.12 seconds
      cpu time            0.07 seconds



NOTE: There were 13972 observations read from the data set WORK.VERIF01.
      WHERE Week=12;
NOTE: The data set WORK.VERIF23 has 3463 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.10 seconds
      cpu time            0.08 seconds



NOTE: There were 236 observations read from the data set WORK.VERIF1.
NOTE: There were 543 observations read from the data set WORK.VERIF2.
NOTE: There were 112 observations read from the data set WORK.VERIF21.
NOTE: There were 441 observations read from the data set WORK.VERIF22.
NOTE: There were 3463 observations read from the data set WORK.VERIF23.
NOTE: The data set WORK.VERIF4 has 4795 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      524 at 10918:85
NOTE: There were 4795 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4795 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 4795 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4795 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4795 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4795 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4795 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4795 observations and 32 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 4795 observations read from the data set WORK.VERIF4.
NOTE: The data set RAJ.WEEKLY_CSR_REPORT_DEPARTMENT_YTD has 4795 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 13972 observations read from the data set WORK.VERIF01.
      WHERE Week=12;
NOTE: The data set WORK.VERIF22 has 6 observations and 20 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds



NOTE: There were 13972 observations read from the data set WORK.VERIF01.
      WHERE Week=12;
NOTE: The data set WORK.VERIF23 has 112 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds



NOTE: There were 6 observations read from the data set WORK.VERIF22.
NOTE: There were 112 observations read from the data set WORK.VERIF23.
NOTE: The data set WORK.VERIF5 has 118 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      15 at 10918:152
NOTE: There were 118 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 118 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 118 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 118 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 118 observations read from the data set WORK.VERIF5.
NOTE: The data set WORK.VERIF5 has 118 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 118 observations read from the data set WORK.VERIF5.
NOTE: The data set RAJ.WEEKLY_ONE_PAGER_DEPARTMENT has 118 observations and 31 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 7014 observations read from the data set RAJ.Y12_DAILY_CSR_CUM.
      WHERE (Week=12) and TRIM(BusSize) in ('Large', 'Medium', 'RCons', 'Small');
NOTE: The data set WORK.VERIF0 has 7014 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.04 seconds



NOTE: There were 7014 observations read from the data set WORK.VERIF0.
NOTE: The PROCEDURE FREQ printed page 51.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 7014 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF4 has 4507 observations and 21 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds



NOTE: Missing values were generated as a result of performing an operation on missing values.
      Each place is given by: (Number of times) at (Line):(Column).
      809 at 10918:198
NOTE: There were 4507 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4507 observations and 34 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4507 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4507 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4507 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4507 observations and 30 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 15329 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_ROGERS.
      WHERE Week=12;
NOTE: The data set WORK.VERIF1 has 15329 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.27 seconds
      cpu time            0.17 seconds



NOTE: There were 15329 observations read from the data set WORK.VERIF1.
      WHERE EMPLOYEE_ID not = .;
NOTE: The data set WORK.VERIF1 has 15329 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.06 seconds
      cpu time            0.05 seconds



NOTE: There were 15329 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 787 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 787 observations read from the data set WORK.VERIF1.
NOTE: There were 4507 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4507 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 4507 observations read from the data set WORK.VERIF4.
NOTE: The PROCEDURE FREQ printed pages 52-66.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4507 observations read from the data set WORK.VERIF4.
NOTE: The data set WORK.VERIF4 has 4507 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1936 observations read from the data set WORK.VERIF4.
      WHERE TRIM(SaveContract)='T';
NOTE: The data set RAJ.WEEKLY_SCORE_CARD_TOTAL has 1936 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 742 observations read from the data set WORK.VERIF4.
      WHERE TRIM(SaveContract)='Y';
NOTE: The data set RAJ.WEEKLY_SCORE_CARD_YES has 742 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 185947 observations read from the data set WORK.Y12_DAILY_CSR_CUM.
NOTE: The data set WORK.VERIF0 has 185947 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.15 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF0 has 185947 observations and 25 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.67 seconds
      cpu time            0.44 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF1 has 65 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.10 seconds
      cpu time            0.04 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF0.
NOTE: There were 65 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF0 has 185947 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.36 seconds
      cpu time            0.23 seconds



NOTE: There were 185947 observations read from the data set WORK.VERIF0.
NOTE: The data set WORK.VERIF1 has 195 observations and 22 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.12 seconds
      cpu time            0.19 seconds



NOTE: There were 195 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 195 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 195 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 195 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 195 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 195 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 195 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 195 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 195 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 195 observations and 32 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 195 observations read from the data set WORK.VERIF1.
NOTE: The data set RAJ.WEEKLY_COS_SERIES has 195 observations and 32 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1371 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (Week=12) and (TRIM(BusSize)='RCons');
NOTE: The data set WORK.WEEK_SAVE_LAST_ROGERS_F has 1371 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 725 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE (Week=12) and (TRIM(BusSize)='RCons');
NOTE: The data set WORK.WEEK_HUP_LAST_ROGERS_F has 725 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 2023 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (Week=12) and (TRIM(BusSize)='RCons');
NOTE: The data set WORK.WEEK_OPTION_LAST_ROGERS_F has 2023 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 47100 observations read from the data set RAJ.OPTION_ONGOING_WEEK_EXPIRED.
NOTE: The data set RAJ.OPTION_ONGOING_WEEK_EXPIRED has 47100 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.22 seconds
      cpu time            0.13 seconds



NOTE: There were 38267 observations read from the data set RAJ.OPTION_ONGOING_WEEK_STARTED.
NOTE: The data set RAJ.OPTION_ONGOING_WEEK_STARTED has 38267 observations and 54 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.18 seconds
      cpu time            0.13 seconds



NOTE: There were 2023 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (Week=12) and (TRIM(BusSize)='RCons');
NOTE: The data set WORK.VERIF1 has 2023 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 2023 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 2023 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 2023 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 1940 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1940 observations read from the data set WORK.VERIF1.
NOTE: There were 47100 observations read from the data set RAJ.OPTION_ONGOING_WEEK_EXPIRED.
NOTE: The data set WORK.OPTION_EXPIRED_RCONS has 15299 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.05 seconds



NOTE: There were 1940 observations read from the data set WORK.VERIF1.
NOTE: There were 38267 observations read from the data set RAJ.OPTION_ONGOING_WEEK_STARTED.
NOTE: The data set WORK.OPTION_STARTED_RCONS has 11002 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds



NOTE: There were 672 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (Week=12) and TRIM(BusSize) in ('Large', 'Medium', 'Small');
NOTE: The data set WORK.WEEK_SAVE_LAST_ROGERS_BUS_F has 672 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 337 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE (Week=12) and TRIM(BusSize) in ('Large', 'Medium', 'Small');
NOTE: The data set WORK.WEEK_HUP_LAST_ROGERS_BUS_F has 337 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 850 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (Week=12) and TRIM(BusSize) in ('Large', 'Medium', 'Small');
NOTE: The data set WORK.WEEK_OPTION_LAST_ROGERS_BUS_F has 850 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 850 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (Week=12) and TRIM(BusSize) in ('Large', 'Medium', 'Small');
NOTE: The data set WORK.VERIF1 has 850 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 850 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 850 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 850 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 821 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 821 observations read from the data set WORK.VERIF1.
NOTE: There were 47100 observations read from the data set RAJ.OPTION_ONGOING_WEEK_EXPIRED.
NOTE: The data set WORK.OPTION_EXPIRED_RBUS has 8146 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds



NOTE: There were 821 observations read from the data set WORK.VERIF1.
NOTE: There were 38267 observations read from the data set RAJ.OPTION_ONGOING_WEEK_STARTED.
NOTE: The data set WORK.OPTION_STARTED_RBUS has 6303 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds



NOTE: There were 3380 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (Week=12) and (TRIM(BusSize)='FCons');
NOTE: The data set WORK.VERIF1 has 3380 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 3380 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3380 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 3380 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 2943 observations and 4 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 2943 observations read from the data set WORK.VERIF1.
NOTE: There were 47100 observations read from the data set RAJ.OPTION_ONGOING_WEEK_EXPIRED.
NOTE: The data set WORK.OPTION_EXPIRED_FCONS has 19955 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.06 seconds



NOTE: There were 2943 observations read from the data set WORK.VERIF1.
NOTE: There were 38267 observations read from the data set RAJ.OPTION_ONGOING_WEEK_STARTED.
NOTE: The data set WORK.OPTION_STARTED_FCONS has 16972 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.05 seconds



NOTE: There were 2336 observations read from the data set RAJ.SAVE_PLAN_WEEK.
      WHERE (Week=12) and (TRIM(BusSize)='FCons');
NOTE: The data set WORK.WEEK_SAVE_LAST_FIDO_F has 2336 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 1815 observations read from the data set RAJ.SAVE_HANDSET_WEEK.
      WHERE (Week=12) and (TRIM(BusSize)='FCons');
NOTE: The data set WORK.WEEK_HUP_LAST_FIDO_F has 1815 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 3380 observations read from the data set RAJ.SAVE_OPTION_WEEK.
      WHERE (Week=12) and (TRIM(BusSize)='FCons');
NOTE: The data set WORK.WEEK_OPTION_LAST_FIDO_F has 3380 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
10919  %macro weekvalid;
10920  ****** 1. Cable footprint Yes + No = National ****;
10921  options source;
10922  data Verif1;
10923  set raj.Weekly_csr_report_National_YTD(drop=Order Week CSR_ID--USERID_V21);
10924  run;
10925
10926  data Verif2(drop=i);
10927  set raj.Weekly_csr_report_Cable_FP_YTD(drop=Order Week CSR_ID--USERID_V21);
10928  array tab0(*)TotalSaves--AveTotalCostOfSave_Costing_Saves;
10929  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
10930                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
10931                TotalSaves NbCostingSaves;
10932  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
10932! MeanSaveCost_HUP
10933                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
10934                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
10935  do i=1 to dim(tab1);
10936  if tab1(i) ne . and tab2(i) ne . then tab2(i)=tab1(i)*tab2(i);
10937  end;
10938  run;
10939
10940  proc sort data=Verif1;
10941  by BusSize Case SaveContract;
10942  run;
10943
10944  proc sort data=Verif2;
10945  by BusSize Case SaveContract;
10946  run;
10947
10948  proc summary data=Verif2 nway;
10949  var TotalSaves--AveTotalCostOfSave_Costing_Saves;
10950  by BusSize Case SaveContract;
10951  output out=Verif2(drop=_TYPE_ _FREQ_)
10952         sum=;
10953  run;
10954
10955  data Verif2(drop=i);
10956  set Verif2;
10957  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
10958                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
10959                TotalSaves NbCostingSaves;
10960  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
10960! MeanSaveCost_HUP
10961                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
10962                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
10963  do i=1 to dim(tab1);
10964  if tab1(i) gt 0 and tab2(i) ne . then tab2(i)=tab2(i)/tab1(i);
10965  end;
10966  if TotalSaves gt 0 then CostingSaveShare=(NbCostingSaves/TotalSaves)*100;
10967  run;
10968
10969  proc compare base=Verif1 compare=Verif2 /*outstats=Verif3*/ maxprint=0;
10970  title "WeekReport: Cable footprint Yes + No = National, by save contract";
10971  run;
10972
10973  **** Cable footprint: Yes = Yes + No Bell IPTV ****;
10974  data Verif1;
10975  set raj.Weekly_csr_report_Cable_FP_YTD(drop=Order Week CSR_ID--USERID_V21);
10976  where trim(FootPrint) eq "Y";
10977  run;
10978
10979  data Verif2(drop=i);
10980  set raj.Weekly_csr_report_IPTV_YTD(drop=Order Week CSR_ID--USERID_V21);
10981  array tab0(*)TotalSaves--AveTotalCostOfSave_Costing_Saves;
10982  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
10983                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
10984                TotalSaves NbCostingSaves;
10985  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
10985! MeanSaveCost_HUP
10986                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
10987                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
10988  do i=1 to dim(tab1);
10989  if tab1(i) ne . and tab2(i) ne . then tab2(i)=tab1(i)*tab2(i);
10990  end;
10991  run;
10992
10993  proc sort data=Verif1;
10994  by BusSize Case SaveContract;
10995  run;
10996
10997  proc sort data=Verif2;
10998  by BusSize Case SaveContract;
10999  run;
11000
11001  proc summary data=Verif2 nway;
11002  var TotalSaves--AveTotalCostOfSave_Costing_Saves;
11003  by BusSize Case SaveContract;
11004  output out=Verif2(drop=_TYPE_ _FREQ_)
11005         sum=;
11006  run;
11007
11008  data Verif2(drop=i);
11009  set Verif2;
11010  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11011                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11012                TotalSaves NbCostingSaves;
11013  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11013! MeanSaveCost_HUP
11014                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11015                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11016  do i=1 to dim(tab1);
11017  if tab1(i) gt 0 and tab2(i) ne . then tab2(i)=tab2(i)/tab1(i);
11018  end;
11019  if TotalSaves gt 0 then CostingSaveShare=(NbCostingSaves/TotalSaves)*100;
11020  run;
11021
11022  proc compare base=Verif1 compare=Verif2 /*outstats=Verif4*/ maxprint=0;
11023  title "WeekReport: Cable footprint Yes = Bell IPTV Yes + No, by save contract";
11024  run;
11025
11026  ***** Departement versus national: Rogers department= Consumer=Small+medium=Large, Fido
11026! department = Fido consumer *****;
11027  data Verif1;
11028  set raj.Weekly_csr_report_Department_YTD(drop=Order Week);
11029  array tab0(*)TotalSaves--AveTotalCostOfSave_Costing_Saves;
11030  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11031                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11032                TotalSaves NbCostingSaves;
11033  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11033! MeanSaveCost_HUP
11034                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11035                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11036  do i=1 to dim(tab1);
11037  if tab1(i) ne . and tab2(i) ne . then tab2(i)=tab1(i)*tab2(i);
11038  end;
11039  run;
11040
11041  proc sort data=Verif1;
11042  by BusSize Case SaveContract;
11043  run;
11044
11045  proc summary data=Verif1 nway;
11046  var TotalSaves--AveTotalCostOfSave_Costing_Saves;
11047  by BusSize Case SaveContract;
11048  output out=Verif1(drop=_TYPE_ _FREQ_)
11049         sum=;
11050  run;
11051
11052  data Verif1(drop=i);
11053  set Verif1;
11054  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11055                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11056                TotalSaves NbCostingSaves;
11057  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11057! MeanSaveCost_HUP
11058                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11059                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11060  do i=1 to dim(tab1);
11061  if tab1(i) gt 0 and tab2(i) ne . then tab2(i)=tab2(i)/tab1(i);
11062  end;
11063  if TotalSaves gt 0 then CostingSaveShare=(NbCostingSaves/TotalSaves)*100;
11064  run;
11065
11066  data Verif2(drop=i);
11067  set raj.Weekly_csr_report_National_YTD(drop=Order Week CSR_ID--USERID_V21);
11068  array tab0(*)TotalSaves--AveTotalCostOfSave_Costing_Saves;
11069  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11070                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11071                TotalSaves NbCostingSaves;
11072  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11072! MeanSaveCost_HUP
11073                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11074                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11075  do i=1 to dim(tab1);
11076  if tab1(i) ne . and tab2(i) ne . then tab2(i)=tab1(i)*tab2(i);
11077  end;
11078       if trim(BusSize) in ("Large","Medium","RCons","Small") then BusSize="Rogers";
11079  else if trim(BusSize) in ("FCons") then BusSize="Fido";
11080  run;
11081
11082  proc sort data=Verif2;
11083  by BusSize Case SaveContract;
11084  run;
11085
11086  proc summary data=Verif2 nway;
11087  var TotalSaves--AveTotalCostOfSave_Costing_Saves;
11088  by BusSize Case SaveContract;
11089  output out=Verif2(drop=_TYPE_ _FREQ_)
11090         sum=;
11091  run;
11092
11093  data Verif2(drop=i);
11094  set Verif2;
11095  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11096                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11097                TotalSaves NbCostingSaves;
11098  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11098! MeanSaveCost_HUP
11099                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11100                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11101  do i=1 to dim(tab1);
11102  if tab1(i) gt 0 and tab2(i) ne . then tab2(i)=tab2(i)/tab1(i);
11103  end;
11104  if TotalSaves gt 0 then CostingSaveShare=(NbCostingSaves/TotalSaves)*100;
11105  run;
11106
11107  proc compare base=Verif1 compare=Verif2 /*outstats=Verif5*/ maxprint=0;
11108  title1 "WeekReport: Rogers department=national consumer+small+medium+large,";
11109  title2 "Fido department=national, by save contract";
11110  run;
11111
11112  **** National total contract = National-contract-share total contract ****;
11113  data Verif1;
11114  set raj.Weekly_csr_report_National_YTD(drop=Order Week CSR_ID--USERID_V21);
11115  where trim(SaveContract) eq "T";
11116  run;
11117
11118  data Verif2;
11119  set raj.Weekly_csr_rep_national_perc_ytd(drop=Order Week CSR_ID--USERID_V21);
11120  where trim(SaveContract) eq "T";
11121  run;
11122
11123  proc sort data=Verif1;
11124  by BusSize Case SaveContract;
11125  run;
11126
11127  proc sort data=Verif2;
11128  by BusSize Case SaveContract;
11129  run;
11130
11131  proc compare base=Verif1 compare=Verif2 /*outstats=Verif6*/ maxprint=0;
11132  title "WeekReport: Total contract national = Total contract national/contract/share";
11133  run;
11134
11135  ****** One pager validation. 1. Department *****;
11136  data Verif1;
11137  set raj.Weekly_csr_report_Department_YTD(drop=Week Order);
11138  where trim(Case) eq "  Total ongoing week";
11139  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11140                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11141                TotalSaves NbCostingSaves;
11142  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11142! MeanSaveCost_HUP
11143                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11144                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11145  do i=1 to dim(tab1);
11146  if tab1(i) ne . and tab2(i) ne . then tab2(i)=tab1(i)*tab2(i);
11147  end;
11148  run;
11149
11150  proc sort data=Verif1;
11151  by BusSize Case SaveContract;
11152  run;
11153
11154  proc summary data=Verif1 nway;
11155  var TotalSaves--AveTotalCostOfSave_Costing_Saves;
11156  by BusSize Case SaveContract;
11157  output out=Verif1(drop=_TYPE_ _FREQ_)
11158         sum=;
11159  run;
11160
11161  data Verif1(drop=i);
11162  set Verif1;
11163  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11164                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11165                TotalSaves NbCostingSaves;
11166  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11166! MeanSaveCost_HUP
11167                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11168                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11169  do i=1 to dim(tab1);
11170  if tab1(i) gt 0 and tab2(i) ne . then tab2(i)=tab2(i)/tab1(i);
11171  end;
11172  if TotalSaves gt 0 then CostingSaveShare=(NbCostingSaves/TotalSaves)*100;
11173  run;
11174
11175  data Verif2(drop=Case rename=(DEPARTMENT_NAME=Case));
11176  set raj.Weekly_csr_report_Department_YTD(drop=Week Order);
11177  where trim(Case) eq "  Total ongoing week";
11178  run;
11179
11180  data Verif1;
11181  set Verif1 Verif2;
11182  run;
11183
11184  proc sort data=Verif1;
11185  by BusSize Case SaveContract;
11186  run;
11187
11188  data Verif2;
11189  set raj.Weekly_One_Pager_Department(drop=Week Order);
11190  run;
11191
11192  proc sort data=Verif2;
11193  by BusSize Case SaveContract;
11194  run;
11195
11196  proc compare base=Verif1 compare=Verif2 /*outstats=Verif0*/ maxprint=0;
11197  title "WeekReport: Core report week versus one pager. Department";
11198  run;
11199
11200  ****** One pager validation. 2. National *****;
11201  data Verif1(drop=BusSize Case SaveContract);
11202  length Segm $5;
11203  set raj.Weekly_csr_report_National_YTD(drop=Week Order CSR_ID--USERID_V21);
11204  where trim(Case) eq "  Total ongoing week";
11205  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "N" then Segm="RCo_N";
11206  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "Y" then Segm="RCo_Y";
11207  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "T" then Segm="RCo_T";
11208  if trim(BusSize) eq "Small" and trim(SaveContract) eq "N" then Segm="RBS_N";
11209  if trim(BusSize) eq "Small" and trim(SaveContract) eq "Y" then Segm="RBS_Y";
11210  if trim(BusSize) eq "Small" and trim(SaveContract) eq "T" then Segm="RBS_T";
11211  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "N" then Segm="RBM_N";
11212  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "Y" then Segm="RBM_Y";
11213  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "T" then Segm="RBM_T";
11214  if trim(BusSize) eq "Large" and trim(SaveContract) eq "N" then Segm="RBL_N";
11215  if trim(BusSize) eq "Large" and trim(SaveContract) eq "Y" then Segm="RBL_Y";
11216  if trim(BusSize) eq "Large" and trim(SaveContract) eq "T" then Segm="RBL_T";
11217  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "N" then Segm="FCo_N";
11218  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "Y" then Segm="FCo_Y";
11219  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "T" then Segm="FCo_T";
11220  run;
11221
11222  proc transpose data=Verif1 out=Verif1(drop=_LABEL_);
11223  id Segm;
11224  run;
11225
11226  data Verif2;
11227  set raj.Weekly_One_Pager_National;
11228  run;
11229
11230  proc compare base=Verif1(drop=_NAME_) compare=Verif2(drop=_LABEL_) /*outstats=Verif0*/
11230! maxprint=0;
11231  title "WeekReport: Core report week versus one pager. National";
11232  run;
11233
11234  ****** One pager validation. 3. National contract share*****;
11235  data Verif1(drop=BusSize Case SaveContract);
11236  length Segm $5;
11237  set raj.Weekly_csr_rep_National_Perc_YTD(drop=Week Order CSR_ID--USERID_V21);
11238  where trim(Case) eq "  Total ongoing week";
11239  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "N" then Segm="RCo_N";
11240  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "Y" then Segm="RCo_Y";
11241  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "T" then Segm="RCo_T";
11242  if trim(BusSize) eq "Small" and trim(SaveContract) eq "N" then Segm="RBS_N";
11243  if trim(BusSize) eq "Small" and trim(SaveContract) eq "Y" then Segm="RBS_Y";
11244  if trim(BusSize) eq "Small" and trim(SaveContract) eq "T" then Segm="RBS_T";
11245  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "N" then Segm="RBM_N";
11246  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "Y" then Segm="RBM_Y";
11247  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "T" then Segm="RBM_T";
11248  if trim(BusSize) eq "Large" and trim(SaveContract) eq "N" then Segm="RBL_N";
11249  if trim(BusSize) eq "Large" and trim(SaveContract) eq "Y" then Segm="RBL_Y";
11250  if trim(BusSize) eq "Large" and trim(SaveContract) eq "T" then Segm="RBL_T";
11251  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "N" then Segm="FCo_N";
11252  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "Y" then Segm="FCo_Y";
11253  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "T" then Segm="FCo_T";
11254  run;
11255
11256  proc transpose data=Verif1 out=Verif1(drop=_LABEL_);
11257  id Segm;
11258  run;
11259
11260  data Verif2;
11261  set raj.Weekly_One_Pager_National_Perc;
11262  run;
11263
11264  proc compare base=Verif1(drop=_NAME_) compare=Verif2(drop=_LABEL_) /*outstats=Verif0*/
11264! maxprint=0;
11265  title "WeekReport: Core report week versus one pager. Contract Share";
11266  run;
11267
11268  ****** One pager validation. 4. Cable footprint*****;
11269  data Verif1(drop=BusSize Case SaveContract);
11270  length Segm $5;
11271  set raj.Weekly_csr_report_Cable_FP_YTD(drop=Week Order CSR_ID--USERID_V21);
11272  where trim(Case) eq "  Total ongoing week";
11273  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "N" then Segm="RCo_N";
11274  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "Y" then Segm="RCo_Y";
11275  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "T" then Segm="RCo_T";
11276  if trim(BusSize) eq "Small" and trim(SaveContract) eq "N" then Segm="RBS_N";
11277  if trim(BusSize) eq "Small" and trim(SaveContract) eq "Y" then Segm="RBS_Y";
11278  if trim(BusSize) eq "Small" and trim(SaveContract) eq "T" then Segm="RBS_T";
11279  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "N" then Segm="RBM_N";
11280  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "Y" then Segm="RBM_Y";
11281  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "T" then Segm="RBM_T";
11282  if trim(BusSize) eq "Large" and trim(SaveContract) eq "N" then Segm="RBL_N";
11283  if trim(BusSize) eq "Large" and trim(SaveContract) eq "Y" then Segm="RBL_Y";
11284  if trim(BusSize) eq "Large" and trim(SaveContract) eq "T" then Segm="RBL_T";
11285  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "N" then Segm="FCo_N";
11286  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "Y" then Segm="FCo_Y";
11287  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "T" then Segm="FCo_T";
11288  run;
11289
11290  proc sort data=Verif1;
11291  by FootPrint;
11292  run;
11293
11294  proc transpose data=Verif1 out=Verif1(drop=_LABEL_);
11295  by FootPrint;
11296  id Segm;
11297  run;
11298
11299  data Verif2;
11300  set raj.Weekly_One_Pager_Footprint(where=(trim(FootPrint) eq "N"))
11301      raj.Weekly_One_Pager_Footprint(where=(trim(FootPrint) eq "Y"));
11302  run;
11303
11304  proc compare base=Verif1(drop=_NAME_) compare=Verif2(drop=_LABEL_) /*outstats=Verif0*/
11304! maxprint=0;
11305  title "WeekReport: Core report week versus one pager. Cable Footprint";
11306  run;
11307
11308  ****** One pager validation. 5. Bell IPTV within Cable footprint*****;
11309  data Verif1(drop=BusSize Case SaveContract);
11310  length Segm $5;
11311  set raj.Weekly_csr_report_IPTV_YTD(drop=Week Order CSR_ID--USERID_V21);
11312  where trim(Case) eq "  Total ongoing week";
11313  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "N" then Segm="RCo_N";
11314  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "Y" then Segm="RCo_Y";
11315  if trim(BusSize) eq "RCons" and trim(SaveContract) eq "T" then Segm="RCo_T";
11316  if trim(BusSize) eq "Small" and trim(SaveContract) eq "N" then Segm="RBS_N";
11317  if trim(BusSize) eq "Small" and trim(SaveContract) eq "Y" then Segm="RBS_Y";
11318  if trim(BusSize) eq "Small" and trim(SaveContract) eq "T" then Segm="RBS_T";
11319  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "N" then Segm="RBM_N";
11320  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "Y" then Segm="RBM_Y";
11321  if trim(BusSize) eq "Medium" and trim(SaveContract) eq "T" then Segm="RBM_T";
11322  if trim(BusSize) eq "Large" and trim(SaveContract) eq "N" then Segm="RBL_N";
11323  if trim(BusSize) eq "Large" and trim(SaveContract) eq "Y" then Segm="RBL_Y";
11324  if trim(BusSize) eq "Large" and trim(SaveContract) eq "T" then Segm="RBL_T";
11325  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "N" then Segm="FCo_N";
11326  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "Y" then Segm="FCo_Y";
11327  if trim(BusSize) eq "FCons" and trim(SaveContract) eq "T" then Segm="FCo_T";
11328  run;
11329
11330  proc sort data=Verif1;
11331  by IPTV;
11332  run;
11333
11334  proc transpose data=Verif1 out=Verif1(drop=_LABEL_);
11335  by IPTV;
11336  id Segm;
11337  run;
11338
11339  data Verif2;
11340  set raj.Weekly_One_Pager_IPTV(where=(trim(IPTV) eq "N"))
11341      raj.Weekly_One_Pager_IPTV(where=(trim(IPTV) eq "Y"));
11342  run;
11343
11344  proc compare base=Verif1(drop=_NAME_) compare=Verif2(drop=_LABEL_) /*outstats=Verif0*/
11344! maxprint=0;
11345  title "WeekReport: Core report week versus one pager. Bll IPTV within Cable Footprint";
11346  run;
11347
11348  ******* ScoreCard raw data versus total Rogers at CSR level, ongoing week, total save contract
11348! *****;
11349  data Verif1;
11350  set raj.Weekly_Score_Card_Total(keep=Week TransactionDate in=a)
11351      raj.Weekly_Score_Card_Yes(keep=Week TransactionDate in=b);
11352  if a then SaveContract="Total";
11353  if b then SaveContract="Yes";
11354  run;
11355
11356  proc sort data=Verif1;
11357  by SaveContract;
11358  run;
11359
11360  proc summary data=Verif1 nway;
11361  var Week TransactionDate;
11362  by SaveContract;
11363  output out=ScoreCard(drop=_TYPE_ _FREQ_)
11364         n=NbTransactions
11365      min(Week)=MinWeek
11366      max(Week)=MaxWeek
11367      min(TransactionDate)=MinTransactionDate
11368      max(TransactionDate)=MaxTransactionDate;
11369  run;
11370
11371  /*data ScoreCard;*/
11372  /*set ScoreCard;*/
11373  /*if _n_ le 2;*/
11374  /*run;*/
11375  /**/
11376  /*proc print data=ScoreCard noobs;*/
11377  /*title "WeekReport: Score card raw data. Week and number of records";*/
11378  /*run;*/
11379
11380  ***** Score card raw data total save contract = Rogers Consumer+Small+medium+Large, at CSR
11380! level *****;
11381  data Verif1;
11382  set raj.Weekly_Score_Card_Total(drop=emp_id--TransactionDate in=a)
11383      raj.Weekly_Score_Card_Yes(drop=emp_id--TransactionDate in=b);
11384  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11385                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11386                TotalSaves NbCostingSaves;
11387  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11387! MeanSaveCost_HUP
11388                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11389                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11390  do i=1 to dim(tab1);
11391  if tab1(i) ne . and tab2(i) ne . then tab2(i)=tab1(i)*tab2(i);
11392  end;
11393  if a then SaveContract="T";
11394  if b then SaveContract="Y";
11395  run;
11396
11397  proc sort data=Verif1;
11398  by CSR_ID SaveContract;
11399  run;
11400
11401  proc summary data=Verif1 nway;
11402  var TotalSaves--AveTotalCostOfSave_Costing_Saves;
11403  by CSR_ID SaveContract;
11404  output out=Verif1(drop=_TYPE_ _FREQ_)
11405         sum=;
11406  run;
11407
11408  data Verif1(drop=i);
11409  set Verif1;
11410  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11411                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11412                TotalSaves NbCostingSaves;
11413  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11413! MeanSaveCost_HUP
11414                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11415                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11416  do i=1 to dim(tab1);
11417  if tab1(i) gt 0 and tab2(i) ne . then tab2(i)=tab2(i)/tab1(i);
11418  end;
11419  if TotalSaves gt 0 then CostingSaveShare=(NbCostingSaves/TotalSaves)*100;
11420  run;
11421
11422  data Verif2(drop=BusSize i);
11423  length CSR_ID $20;
11424  set raj.Weekly_csr_report_National_YTD(drop=Order Week Case EMPLOYEE_ID--USERID_V21);
11425  where trim(BusSize) in ("Large","Medium","RCons","Small") and trim(SaveContract) in ("T","Y")
11425! and trim(CSR_ID) ne " ";
11426  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11427                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11428                TotalSaves NbCostingSaves;
11429  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11429! MeanSaveCost_HUP
11430                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11431                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11432  do i=1 to dim(tab1);
11433  if tab1(i) ne . and tab2(i) ne . then tab2(i)=tab1(i)*tab2(i);
11434  end;
11435  run;
11436
11437  proc sort data=Verif2;
11438  by CSR_ID SaveContract;
11439  run;
11440
11441  proc summary data=Verif2 nway;
11442  var TotalSaves--AveTotalCostOfSave_Costing_Saves;
11443  by CSR_ID SaveContract;
11444  output out=Verif2(drop=_TYPE_ _FREQ_)
11445         sum=;
11446  run;
11447
11448  data Verif2(drop=i);
11449  set Verif2;
11450  array tab1(*) NbSaves_SavePlan NbSaves_NonSavePlan NbSaves_AllPlans NbSaves_HUP
11451                NbSaves_Option NbSaves_Discount NbSaves_Discount NbSaves_NonCost NbSaves_NonCost
11452                TotalSaves NbCostingSaves;
11453  array tab2(*) MeanSaveCost_SavePlan MeanSaveCost_NonSavePlan MeanSaveCost_AllPlans
11453! MeanSaveCost_HUP
11454                MeanSaveCost_Option MeanSaveCost_SaveDiscount MeanNbDisc MeanSave_NonCost
11455                MeanNbNonCostOffer AveTotalCostOfSave_All_Saves AveTotalCostOfSave_Costing_Saves;
11456  do i=1 to dim(tab1);
11457  if tab1(i) gt 0 and tab2(i) ne . then tab2(i)=tab2(i)/tab1(i);
11458  end;
11459  if TotalSaves gt 0 then CostingSaveShare=(NbCostingSaves/TotalSaves)*100;
11460  run;
11461
11462  proc compare base=Verif1 compare=Verif2 /*outstats=Verif5*/ maxprint=0;
11463  title "WeekReport: Score card raw data versus Rogers consumer+small+medium+large, at CSR level"
11463! ;
11464  run;
11465  %mend weekvalid;
NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11466  **** Weekly cost save****;
11467  %weekvalid;

NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
NOTE: The data set WORK.VERIF1 has 4306 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 6577 observations read from the data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.
NOTE: The data set WORK.VERIF2 has 6577 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 4306 observations and 29 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 6577 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 6577 observations and 30 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds



NOTE: There were 6577 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 4306 observations and 29 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 4306 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF1.
NOTE: There were 4306 observations read from the data set WORK.VERIF2.
NOTE: At least one W.D format was too small for the number to be printed. The decimal may be shifted
      by the "BEST" format.
NOTE: The PROCEDURE COMPARE printed pages 67-68.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.04 seconds
      cpu time            0.02 seconds



NOTE: There were 3250 observations read from the data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.
      WHERE TRIM(FootPrint)='Y';
NOTE: The data set WORK.VERIF1 has 3250 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4700 observations read from the data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.
NOTE: The data set WORK.VERIF2 has 4700 observations and 30 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.02 seconds



NOTE: There were 3250 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3250 observations and 30 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 4700 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 4700 observations and 30 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4700 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 3250 observations and 29 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 3250 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 3250 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 3250 observations read from the data set WORK.VERIF1.
NOTE: There were 3250 observations read from the data set WORK.VERIF2.
NOTE: At least one W.D format was too small for the number to be printed. The decimal may be shifted
      by the "BEST" format.
NOTE: The PROCEDURE COMPARE printed pages 69-70.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 4795 observations read from the data set RAJ.WEEKLY_CSR_REPORT_DEPARTMENT_YTD.
NOTE: The data set WORK.VERIF1 has 4795 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 4795 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 4795 observations and 31 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4795 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3535 observations and 29 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds



NOTE: There were 3535 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 3535 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
NOTE: The data set WORK.VERIF2 has 4306 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 4306 observations and 29 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 4306 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 3535 observations and 29 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.03 seconds
      cpu time            0.02 seconds



NOTE: There were 3535 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 3535 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 3535 observations read from the data set WORK.VERIF1.
NOTE: There were 3535 observations read from the data set WORK.VERIF2.
NOTE: At least one W.D format was too small for the number to be printed. The decimal may be shifted
      by the "BEST" format.
NOTE: The PROCEDURE COMPARE printed pages 71-72.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 1738 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
      WHERE TRIM(SaveContract)='T';
NOTE: The data set WORK.VERIF1 has 1738 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 1738 observations read from the data set RAJ.WEEKLY_CSR_REP_NATIONAL_PERC_YTD.
      WHERE TRIM(SaveContract)='T';
NOTE: The data set WORK.VERIF2 has 1738 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 1738 observations and 29 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 1738 observations and 29 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1738 observations read from the data set WORK.VERIF1.
NOTE: There were 1738 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE COMPARE printed page 73.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.02 seconds



NOTE: There were 112 observations read from the data set RAJ.WEEKLY_CSR_REPORT_DEPARTMENT_YTD.
      WHERE TRIM(Case)='  Total ongoing week';
NOTE: The data set WORK.VERIF1 has 112 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 112 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 112 observations and 31 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 112 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 6 observations and 29 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 6 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 6 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 112 observations read from the data set RAJ.WEEKLY_CSR_REPORT_DEPARTMENT_YTD.
      WHERE TRIM(Case)='  Total ongoing week';
NOTE: The data set WORK.VERIF2 has 112 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



WARNING: Multiple lengths were specified for the variable Case by input data set(s). This may cause
         truncation of data.
NOTE: There were 6 observations read from the data set WORK.VERIF1.
NOTE: There were 112 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF1 has 118 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 118 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 118 observations and 29 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 118 observations read from the data set RAJ.WEEKLY_ONE_PAGER_DEPARTMENT.
NOTE: The data set WORK.VERIF2 has 118 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 118 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 118 observations and 29 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 118 observations read from the data set WORK.VERIF1.
NOTE: There were 118 observations read from the data set WORK.VERIF2.
NOTE: At least one W.D format was too small for the number to be printed. The decimal may be shifted
      by the "BEST" format.
NOTE: The PROCEDURE COMPARE printed pages 74-75.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
      WHERE TRIM(Case)='  Total ongoing week';
NOTE: The data set WORK.VERIF1 has 15 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 26 observations and 16 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_NATIONAL.
NOTE: The data set WORK.VERIF2 has 26 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF1.
NOTE: There were 26 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE COMPARE printed page 76.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set RAJ.WEEKLY_CSR_REP_NATIONAL_PERC_YTD.
      WHERE TRIM(Case)='  Total ongoing week';
NOTE: The data set WORK.VERIF1 has 15 observations and 27 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 15 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 26 observations and 16 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_NATIONAL_PERC.
NOTE: The data set WORK.VERIF2 has 26 observations and 16 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set WORK.VERIF1.
NOTE: There were 26 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE COMPARE printed page 77.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 30 observations read from the data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.
      WHERE TRIM(Case)='  Total ongoing week';
NOTE: The data set WORK.VERIF1 has 30 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 30 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 30 observations and 28 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 30 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 52 observations and 17 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_FOOTPRINT.
      WHERE TRIM(FootPrint)='N';
NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_FOOTPRINT.
      WHERE TRIM(FootPrint)='Y';
NOTE: The data set WORK.VERIF2 has 52 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 52 observations read from the data set WORK.VERIF1.
NOTE: There were 52 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE COMPARE printed page 78.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 30 observations read from the data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.
      WHERE TRIM(Case)='  Total ongoing week';
NOTE: The data set WORK.VERIF1 has 30 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 30 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 30 observations and 28 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 30 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 52 observations and 17 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds



NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_IPTV.
      WHERE TRIM(IPTV)='N';
NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_IPTV.
      WHERE TRIM(IPTV)='Y';
NOTE: The data set WORK.VERIF2 has 52 observations and 17 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 52 observations read from the data set WORK.VERIF1.
NOTE: There were 52 observations read from the data set WORK.VERIF2.
NOTE: The PROCEDURE COMPARE printed page 79.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1936 observations read from the data set RAJ.WEEKLY_SCORE_CARD_TOTAL.
NOTE: There were 742 observations read from the data set RAJ.WEEKLY_SCORE_CARD_YES.
NOTE: The data set WORK.VERIF1 has 2678 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 2678 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 2678 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 2678 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.SCORECARD has 2 observations and 6 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1936 observations read from the data set RAJ.WEEKLY_SCORE_CARD_TOTAL.
NOTE: There were 742 observations read from the data set RAJ.WEEKLY_SCORE_CARD_YES.
NOTE: The data set WORK.VERIF1 has 2678 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 2678 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 2678 observations and 29 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 2678 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 1045 observations and 28 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds



NOTE: There were 1045 observations read from the data set WORK.VERIF1.
NOTE: The data set WORK.VERIF1 has 1045 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds



NOTE: There were 1434 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
      WHERE TRIM(BusSize) in ('Large', 'Medium', 'RCons', 'Small') and TRIM(SaveContract) in ('T',
      'Y') and (TRIM(CSR_ID) not = ' ');
NOTE: The data set WORK.VERIF2 has 1434 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds



NOTE: There were 1434 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 1434 observations and 28 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds



NOTE: There were 1434 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 1045 observations and 28 variables.
NOTE: PROCEDURE SUMMARY used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds



NOTE: There were 1045 observations read from the data set WORK.VERIF2.
NOTE: The data set WORK.VERIF2 has 1045 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds



NOTE: There were 1045 observations read from the data set WORK.VERIF1.
NOTE: There were 1045 observations read from the data set WORK.VERIF2.
NOTE: At least one W.D format was too small for the number to be printed. The decimal may be shifted
      by the "BEST" format.
NOTE: The PROCEDURE COMPARE printed pages 80-81.
NOTE: PROCEDURE COMPARE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds


NOTE: Remote submit to HOST complete.

383     /**********************************************************************
384     *   PRODUCT:   SAS
385     *   VERSION:   9.2
386     *   CREATOR:   External File Interface
387     *   DATE:      30MAR14
388     *   DESC:      Generated SAS Datastep Code
389     *   TEMPLATE SOURCE:  (None Specified.)
390     ***********************************************************************/
391        data _null_;
392        %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
393        %let _EFIREC_ = 0;     /* clear export record count macro variable */
394        file 'D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014.csv' delimiter=',' DSD
394  ! DROPOVER lrecl=32767;
395        if _n_ = 1 then        /* write column names or labels */
396         do;
397           put
398              "CSR_ID"
399           ','
400              "emp_id"
401           ','
402              "CSR_ID_Orig"
403           ','
404              "Week"
405           ','
406              "TransactionDate"
407           ','
408              "TotalSaves"
409           ','
410              "NbSaves_SavePlan"
411           ','
412              "NbSaves_NonSavePlan"
413           ','
414              "NbSaves_AllPlans"
415           ','
416              "PlanSwapCost"
417           ','
418              "NbSaves_HUP"
419           ','
420              "HUPCost"
421           ','
422              "NbSaves_Option"
423           ','
424              "OptionCost"
425           ','
426              "NbSaves_Discount"
427           ','
428              "DiscountCost"
429           ','
430              "NbSaves_NonCost"
431           ','
432              "MeanSave_NonCost"
433           ','
434              "MeanSaveCost_SavePlan"
435           ','
436              "MeanSaveCost_NonSavePlan"
437           ','
438              "MeanSaveCost_AllPlans"
439           ','
440              "MeanSaveCost_HUP"
441           ','
442              "MeanSaveCost_Option"
443           ','
444              "MeanNbDisc"
445           ','
446              "MeanSaveCost_SaveDiscount"
447           ','
448              "MeanNbNonCostOffer"
449           ','
450              "NbCostingSaves"
451           ','
452              "CostingSaveShare"
453           ','
454              "TotalCostOfSave"
455           ','
456              "AveTotalCostOfSave_All_Saves"
457           ','
458              "AveTotalCostOfSave_Costing_Saves"
459           ;
460         end;
461       set  RAJ.WEEKLY_SCORE_CARD_TOTAL   end=EFIEOD;
462           format CSR_ID $20. ;
463           format emp_id 11. ;
464           format CSR_ID_Orig $254. ;
465           format Week best12. ;
466           format TransactionDate mmddyy10. ;
467           format TotalSaves best12. ;
468           format NbSaves_SavePlan best12. ;
469           format NbSaves_NonSavePlan best12. ;
470           format NbSaves_AllPlans best12. ;
471           format PlanSwapCost best12. ;
472           format NbSaves_HUP best12. ;
473           format HUPCost best12. ;
474           format NbSaves_Option best12. ;
475           format OptionCost best12. ;
476           format NbSaves_Discount best12. ;
477           format DiscountCost best12. ;
478           format NbSaves_NonCost best12. ;
479           format MeanSave_NonCost dollar23.2 ;
480           format MeanSaveCost_SavePlan best12. ;
481           format MeanSaveCost_NonSavePlan best12. ;
482           format MeanSaveCost_AllPlans best12. ;
483           format MeanSaveCost_HUP best12. ;
484           format MeanSaveCost_Option best12. ;
485           format MeanNbDisc best12. ;
486           format MeanSaveCost_SaveDiscount best12. ;
487           format MeanNbNonCostOffer best12. ;
488           format NbCostingSaves best12. ;
489           format CostingSaveShare best12. ;
490           format TotalCostOfSave best12. ;
491           format AveTotalCostOfSave_All_Saves best12. ;
492           format AveTotalCostOfSave_Costing_Saves best12. ;
493         do;
494           EFIOUT + 1;
495           put CSR_ID $ @;
496           put emp_id @;
497           put CSR_ID_Orig $ @;
498           put Week @;
499           put TransactionDate @;
500           put TotalSaves @;
501           put NbSaves_SavePlan @;
502           put NbSaves_NonSavePlan @;
503           put NbSaves_AllPlans @;
504           put PlanSwapCost @;
505           put NbSaves_HUP @;
506           put HUPCost @;
507           put NbSaves_Option @;
508           put OptionCost @;
509           put NbSaves_Discount @;
510           put DiscountCost @;
511           put NbSaves_NonCost @;
512           put MeanSave_NonCost @;
513           put MeanSaveCost_SavePlan @;
514           put MeanSaveCost_NonSavePlan @;
515           put MeanSaveCost_AllPlans @;
516           put MeanSaveCost_HUP @;
517           put MeanSaveCost_Option @;
518           put MeanNbDisc @;
519           put MeanSaveCost_SaveDiscount @;
520           put MeanNbNonCostOffer @;
521           put NbCostingSaves @;
522           put CostingSaveShare @;
523           put TotalCostOfSave @;
524           put AveTotalCostOfSave_All_Saves @;
525           put AveTotalCostOfSave_Costing_Saves ;
526           ;
527         end;
528        if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
529        if EFIEOD then call symputx('_EFIREC_',EFIOUT);
530        run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014.csv' is:
      Filename=D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:27:41 o'cloc,
      Create Time=March 30, 2014 20:27:41 o'cloc

NOTE: 1937 records were written to the file
      'D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014.csv'.
      The minimum record length was 72.
      The maximum record length was 505.
NOTE: There were 1936 observations read from the data set RAJ.WEEKLY_SCORE_CARD_TOTAL.
NOTE: DATA statement used (Total process time):
      real time           0.39 seconds
      cpu time            0.04 seconds


1936 records created in D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014.csv from
RAJ.WEEKLY_SCORE_CARD_TOTAL.


NOTE: "D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014.csv" file was successfully
      created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           1.63 seconds
      cpu time            0.06 seconds



536     /**********************************************************************
537     *   PRODUCT:   SAS
538     *   VERSION:   9.2
539     *   CREATOR:   External File Interface
540     *   DATE:      30MAR14
541     *   DESC:      Generated SAS Datastep Code
542     *   TEMPLATE SOURCE:  (None Specified.)
543     ***********************************************************************/
544        data _null_;
545        %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
546        %let _EFIREC_ = 0;     /* clear export record count macro variable */
547        file 'D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014-Y.csv' delimiter=','
547  ! DSD DROPOVER lrecl=32767;
548        if _n_ = 1 then        /* write column names or labels */
549         do;
550           put
551              "CSR_ID"
552           ','
553              "emp_id"
554           ','
555              "CSR_ID_Orig"
556           ','
557              "Week"
558           ','
559              "TransactionDate"
560           ','
561              "TotalSaves"
562           ','
563              "NbSaves_SavePlan"
564           ','
565              "NbSaves_NonSavePlan"
566           ','
567              "NbSaves_AllPlans"
568           ','
569              "PlanSwapCost"
570           ','
571              "NbSaves_HUP"
572           ','
573              "HUPCost"
574           ','
575              "NbSaves_Option"
576           ','
577              "OptionCost"
578           ','
579              "NbSaves_Discount"
580           ','
581              "DiscountCost"
582           ','
583              "NbSaves_NonCost"
584           ','
585              "MeanSave_NonCost"
586           ','
587              "MeanSaveCost_SavePlan"
588           ','
589              "MeanSaveCost_NonSavePlan"
590           ','
591              "MeanSaveCost_AllPlans"
592           ','
593              "MeanSaveCost_HUP"
594           ','
595              "MeanSaveCost_Option"
596           ','
597              "MeanNbDisc"
598           ','
599              "MeanSaveCost_SaveDiscount"
600           ','
601              "MeanNbNonCostOffer"
602           ','
603              "NbCostingSaves"
604           ','
605              "CostingSaveShare"
606           ','
607              "TotalCostOfSave"
608           ','
609              "AveTotalCostOfSave_All_Saves"
610           ','
611              "AveTotalCostOfSave_Costing_Saves"
612           ;
613         end;
614       set  RAJ.WEEKLY_SCORE_CARD_YES   end=EFIEOD;
615           format CSR_ID $20. ;
616           format emp_id 11. ;
617           format CSR_ID_Orig $254. ;
618           format Week best12. ;
619           format TransactionDate mmddyy10. ;
620           format TotalSaves best12. ;
621           format NbSaves_SavePlan best12. ;
622           format NbSaves_NonSavePlan best12. ;
623           format NbSaves_AllPlans best12. ;
624           format PlanSwapCost best12. ;
625           format NbSaves_HUP best12. ;
626           format HUPCost best12. ;
627           format NbSaves_Option best12. ;
628           format OptionCost best12. ;
629           format NbSaves_Discount best12. ;
630           format DiscountCost best12. ;
631           format NbSaves_NonCost best12. ;
632           format MeanSave_NonCost dollar23.2 ;
633           format MeanSaveCost_SavePlan best12. ;
634           format MeanSaveCost_NonSavePlan best12. ;
635           format MeanSaveCost_AllPlans best12. ;
636           format MeanSaveCost_HUP best12. ;
637           format MeanSaveCost_Option best12. ;
638           format MeanNbDisc best12. ;
639           format MeanSaveCost_SaveDiscount best12. ;
640           format MeanNbNonCostOffer best12. ;
641           format NbCostingSaves best12. ;
642           format CostingSaveShare best12. ;
643           format TotalCostOfSave best12. ;
644           format AveTotalCostOfSave_All_Saves best12. ;
645           format AveTotalCostOfSave_Costing_Saves best12. ;
646         do;
647           EFIOUT + 1;
648           put CSR_ID $ @;
649           put emp_id @;
650           put CSR_ID_Orig $ @;
651           put Week @;
652           put TransactionDate @;
653           put TotalSaves @;
654           put NbSaves_SavePlan @;
655           put NbSaves_NonSavePlan @;
656           put NbSaves_AllPlans @;
657           put PlanSwapCost @;
658           put NbSaves_HUP @;
659           put HUPCost @;
660           put NbSaves_Option @;
661           put OptionCost @;
662           put NbSaves_Discount @;
663           put DiscountCost @;
664           put NbSaves_NonCost @;
665           put MeanSave_NonCost @;
666           put MeanSaveCost_SavePlan @;
667           put MeanSaveCost_NonSavePlan @;
668           put MeanSaveCost_AllPlans @;
669           put MeanSaveCost_HUP @;
670           put MeanSaveCost_Option @;
671           put MeanNbDisc @;
672           put MeanSaveCost_SaveDiscount @;
673           put MeanNbNonCostOffer @;
674           put NbCostingSaves @;
675           put CostingSaveShare @;
676           put TotalCostOfSave @;
677           put AveTotalCostOfSave_All_Saves @;
678           put AveTotalCostOfSave_Costing_Saves ;
679           ;
680         end;
681        if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
682        if EFIEOD then call symputx('_EFIREC_',EFIOUT);
683        run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014-Y.csv' is:
      Filename=D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014-Y.csv,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:27:42 o'cloc,
      Create Time=March 30, 2014 20:27:42 o'cloc

NOTE: 743 records were written to the file
      'D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014-Y.csv'.
      The minimum record length was 78.
      The maximum record length was 505.
NOTE: There were 742 observations read from the data set RAJ.WEEKLY_SCORE_CARD_YES.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.04 seconds


742 records created in D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014-Y.csv from
RAJ.WEEKLY_SCORE_CARD_YES.


NOTE: "D:\x\24NOV2012BYMACROV\ScoreCard-Rogers-W-23MAR2014-29MAR2014-Y.csv" file was successfully
      created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.43 seconds
      cpu time            0.14 seconds



694     /**********************************************************************
695     *   PRODUCT:   SAS
696     *   VERSION:   9.2
697     *   CREATOR:   External File Interface
698     *   DATE:      30MAR14
699     *   DESC:      Generated SAS Datastep Code
700     *   TEMPLATE SOURCE:  (None Specified.)
701     ***********************************************************************/
702        data _null_;
703        %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
704        %let _EFIREC_ = 0;     /* clear export record count macro variable */
705        file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National.txt' delimiter='09'x DSD DROPOVER
705  !  lrecl=32767;
706        if _n_ = 1 then        /* write column names or labels */
707         do;
708           put
709              "_LABEL_"
710           '09'x
711              "RCo_N"
712           '09'x
713              "RCo_Y"
714           '09'x
715              "RCo_T"
716           '09'x
717              "RBS_N"
718           '09'x
719              "RBS_Y"
720           '09'x
721              "RBS_T"
722           '09'x
723              "RBM_N"
724           '09'x
725              "RBM_Y"
726           '09'x
727              "RBM_T"
728           '09'x
729              "RBL_N"
730           '09'x
731              "RBL_Y"
732           '09'x
733              "RBL_T"
734           '09'x
735              "FCo_N"
736           '09'x
737              "FCo_Y"
738           '09'x
739              "FCo_T"
740           ;
741         end;
742       set  RAJ.WEEKLY_ONE_PAGER_NATIONAL   end=EFIEOD;
743           format _LABEL_ $74. ;
744           format RCo_N best12. ;
745           format RCo_Y best12. ;
746           format RCo_T best12. ;
747           format RBS_N best12. ;
748           format RBS_Y best12. ;
749           format RBS_T best12. ;
750           format RBM_N best12. ;
751           format RBM_Y best12. ;
752           format RBM_T best12. ;
753           format RBL_N best12. ;
754           format RBL_Y best12. ;
755           format RBL_T best12. ;
756           format FCo_N best12. ;
757           format FCo_Y best12. ;
758           format FCo_T best12. ;
759         do;
760           EFIOUT + 1;
761           put _LABEL_ $ @;
762           put RCo_N @;
763           put RCo_Y @;
764           put RCo_T @;
765           put RBS_N @;
766           put RBS_Y @;
767           put RBS_T @;
768           put RBM_N @;
769           put RBM_Y @;
770           put RBM_T @;
771           put RBL_N @;
772           put RBL_Y @;
773           put RBL_T @;
774           put FCo_N @;
775           put FCo_Y @;
776           put FCo_T ;
777           ;
778         end;
779        if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
780        if EFIEOD then call symputx('_EFIREC_',EFIOUT);
781        run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:27:43 o'cloc,
      Create Time=March 10, 2014 23:20:39 o'cloc

NOTE: 27 records were written to the file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National.txt'.
      The minimum record length was 78.
      The maximum record length was 258.
NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_NATIONAL.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds


26 records created in D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National.txt from
RAJ.WEEKLY_ONE_PAGER_NATIONAL.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.53 seconds
      cpu time            0.06 seconds



787     /**********************************************************************
788     *   PRODUCT:   SAS
789     *   VERSION:   9.2
790     *   CREATOR:   External File Interface
791     *   DATE:      30MAR14
792     *   DESC:      Generated SAS Datastep Code
793     *   TEMPLATE SOURCE:  (None Specified.)
794     ***********************************************************************/
795        data _null_;
796        %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
797        %let _EFIREC_ = 0;     /* clear export record count macro variable */
798        file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National-ContShare.txt' delimiter='09'x
798  ! DSD DROPOVER lrecl=32767;
799        if _n_ = 1 then        /* write column names or labels */
800         do;
801           put
802              "_LABEL_"
803           '09'x
804              "RCo_N"
805           '09'x
806              "RCo_Y"
807           '09'x
808              "RCo_T"
809           '09'x
810              "RBS_N"
811           '09'x
812              "RBS_Y"
813           '09'x
814              "RBS_T"
815           '09'x
816              "RBM_N"
817           '09'x
818              "RBM_Y"
819           '09'x
820              "RBM_T"
821           '09'x
822              "RBL_N"
823           '09'x
824              "RBL_Y"
825           '09'x
826              "RBL_T"
827           '09'x
828              "FCo_N"
829           '09'x
830              "FCo_Y"
831           '09'x
832              "FCo_T"
833           ;
834         end;
835       set  RAJ.WEEKLY_ONE_PAGER_NATIONAL_PERC   end=EFIEOD;
836           format _LABEL_ $74. ;
837           format RCo_N best12. ;
838           format RCo_Y best12. ;
839           format RCo_T best12. ;
840           format RBS_N best12. ;
841           format RBS_Y best12. ;
842           format RBS_T best12. ;
843           format RBM_N best12. ;
844           format RBM_Y best12. ;
845           format RBM_T best12. ;
846           format RBL_N best12. ;
847           format RBL_Y best12. ;
848           format RBL_T best12. ;
849           format FCo_N best12. ;
850           format FCo_Y best12. ;
851           format FCo_T best12. ;
852         do;
853           EFIOUT + 1;
854           put _LABEL_ $ @;
855           put RCo_N @;
856           put RCo_Y @;
857           put RCo_T @;
858           put RBS_N @;
859           put RBS_Y @;
860           put RBS_T @;
861           put RBM_N @;
862           put RBM_Y @;
863           put RBM_T @;
864           put RBL_N @;
865           put RBL_Y @;
866           put RBL_T @;
867           put FCo_N @;
868           put FCo_Y @;
869           put FCo_T ;
870           ;
871         end;
872        if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
873        if EFIEOD then call symputx('_EFIREC_',EFIOUT);
874        run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National-ContShare.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National-ContShare.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:27:43 o'cloc,
      Create Time=March 10, 2014 23:20:39 o'cloc

NOTE: 27 records were written to the file
      'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National-ContShare.txt'.
      The minimum record length was 88.
      The maximum record length was 258.
NOTE: There were 26 observations read from the data set RAJ.WEEKLY_ONE_PAGER_NATIONAL_PERC.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds


26 records created in D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National-ContShare.txt from
RAJ.WEEKLY_ONE_PAGER_NATIONAL_PERC.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-National-ContShare.txt" file was successfully
      created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.38 seconds
      cpu time            0.03 seconds



880     /**********************************************************************
881     *   PRODUCT:   SAS
882     *   VERSION:   9.2
883     *   CREATOR:   External File Interface
884     *   DATE:      30MAR14
885     *   DESC:      Generated SAS Datastep Code
886     *   TEMPLATE SOURCE:  (None Specified.)
887     ***********************************************************************/
888        data _null_;
889        %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
890        %let _EFIREC_ = 0;     /* clear export record count macro variable */
891        file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-Cable-FP.txt' delimiter='09'x DSD DROPOVER
891  !  lrecl=32767;
892        if _n_ = 1 then        /* write column names or labels */
893         do;
894           put
895              "_LABEL_"
896           '09'x
897              "FootPrint"
898           '09'x
899              "RCo_N"
900           '09'x
901              "RCo_Y"
902           '09'x
903              "RCo_T"
904           '09'x
905              "RBS_N"
906           '09'x
907              "RBS_Y"
908           '09'x
909              "RBS_T"
910           '09'x
911              "RBM_N"
912           '09'x
913              "RBM_Y"
914           '09'x
915              "RBM_T"
916           '09'x
917              "RBL_N"
918           '09'x
919              "RBL_Y"
920           '09'x
921              "RBL_T"
922           '09'x
923              "FCo_N"
924           '09'x
925              "FCo_Y"
926           '09'x
927              "FCo_T"
928           ;
929         end;
930       set  RAJ.WEEKLY_ONE_PAGER_FOOTPRINT   end=EFIEOD;
931           format _LABEL_ $74. ;
932           format FootPrint $1. ;
933           format RCo_N best12. ;
934           format RCo_Y best12. ;
935           format RCo_T best12. ;
936           format RBS_N best12. ;
937           format RBS_Y best12. ;
938           format RBS_T best12. ;
939           format RBM_N best12. ;
940           format RBM_Y best12. ;
941           format RBM_T best12. ;
942           format RBL_N best12. ;
943           format RBL_Y best12. ;
944           format RBL_T best12. ;
945           format FCo_N best12. ;
946           format FCo_Y best12. ;
947           format FCo_T best12. ;
948         do;
949           EFIOUT + 1;
950           put _LABEL_ $ @;
951           put FootPrint $ @;
952           put RCo_N @;
953           put RCo_Y @;
954           put RCo_T @;
955           put RBS_N @;
956           put RBS_Y @;
957           put RBS_T @;
958           put RBM_N @;
959           put RBM_Y @;
960           put RBM_T @;
961           put RBL_N @;
962           put RBL_Y @;
963           put RBL_T @;
964           put FCo_N @;
965           put FCo_Y @;
966           put FCo_T ;
967           ;
968         end;
969        if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
970        if EFIEOD then call symputx('_EFIREC_',EFIOUT);
971        run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-Cable-FP.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-Cable-FP.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:27:44 o'cloc,
      Create Time=March 10, 2014 23:20:39 o'cloc

NOTE: 53 records were written to the file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-Cable-FP.txt'.
      The minimum record length was 75.
      The maximum record length was 261.
NOTE: There were 52 observations read from the data set RAJ.WEEKLY_ONE_PAGER_FOOTPRINT.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds


52 records created in D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-Cable-FP.txt from
RAJ.WEEKLY_ONE_PAGER_FOOTPRINT.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-Cable-FP.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.42 seconds
      cpu time            0.07 seconds



977     /**********************************************************************
978     *   PRODUCT:   SAS
979     *   VERSION:   9.2
980     *   CREATOR:   External File Interface
981     *   DATE:      30MAR14
982     *   DESC:      Generated SAS Datastep Code
983     *   TEMPLATE SOURCE:  (None Specified.)
984     ***********************************************************************/
985        data _null_;
986        %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
987        %let _EFIREC_ = 0;     /* clear export record count macro variable */
988        file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-IPTV.txt' delimiter='09'x DSD DROPOVER
988  ! lrecl=32767;
989        if _n_ = 1 then        /* write column names or labels */
990         do;
991           put
992              "_LABEL_"
993           '09'x
994              "IPTV"
995           '09'x
996              "RCo_N"
997           '09'x
998              "RCo_Y"
999           '09'x
1000             "RCo_T"
1001          '09'x
1002             "RBS_N"
1003          '09'x
1004             "RBS_Y"
1005          '09'x
1006             "RBS_T"
1007          '09'x
1008             "RBM_N"
1009          '09'x
1010             "RBM_Y"
1011          '09'x
1012             "RBM_T"
1013          '09'x
1014             "RBL_N"
1015          '09'x
1016             "RBL_Y"
1017          '09'x
1018             "RBL_T"
1019          '09'x
1020             "FCo_N"
1021          '09'x
1022             "FCo_Y"
1023          '09'x
1024             "FCo_T"
1025          ;
1026        end;
1027      set  RAJ.WEEKLY_ONE_PAGER_IPTV   end=EFIEOD;
1028          format _LABEL_ $74. ;
1029          format IPTV $1. ;
1030          format RCo_N best12. ;
1031          format RCo_Y best12. ;
1032          format RCo_T best12. ;
1033          format RBS_N best12. ;
1034          format RBS_Y best12. ;
1035          format RBS_T best12. ;
1036          format RBM_N best12. ;
1037          format RBM_Y best12. ;
1038          format RBM_T best12. ;
1039          format RBL_N best12. ;
1040          format RBL_Y best12. ;
1041          format RBL_T best12. ;
1042          format FCo_N best12. ;
1043          format FCo_Y best12. ;
1044          format FCo_T best12. ;
1045        do;
1046          EFIOUT + 1;
1047          put _LABEL_ $ @;
1048          put IPTV $ @;
1049          put RCo_N @;
1050          put RCo_Y @;
1051          put RCo_T @;
1052          put RBS_N @;
1053          put RBS_Y @;
1054          put RBS_T @;
1055          put RBM_N @;
1056          put RBM_Y @;
1057          put RBM_T @;
1058          put RBL_N @;
1059          put RBL_Y @;
1060          put RBL_T @;
1061          put FCo_N @;
1062          put FCo_Y @;
1063          put FCo_T ;
1064          ;
1065        end;
1066       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
1067       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
1068       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-IPTV.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-IPTV.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:27:44 o'cloc,
      Create Time=March 10, 2014 23:20:40 o'cloc

NOTE: 53 records were written to the file 'D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-IPTV.txt'.
      The minimum record length was 67.
      The maximum record length was 258.
NOTE: There were 52 observations read from the data set RAJ.WEEKLY_ONE_PAGER_IPTV.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds


52 records created in D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-IPTV.txt from
RAJ.WEEKLY_ONE_PAGER_IPTV.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfSave-OnePager-IPTV.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.40 seconds
      cpu time            0.04 seconds



1074    /**********************************************************************
1075    *   PRODUCT:   SAS
1076    *   VERSION:   9.2
1077    *   CREATOR:   External File Interface
1078    *   DATE:      30MAR14
1079    *   DESC:      Generated SAS Datastep Code
1080    *   TEMPLATE SOURCE:  (None Specified.)
1081    ***********************************************************************/
1082       data _null_;
1083       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
1084       %let _EFIREC_ = 0;     /* clear export record count macro variable */
1085       file 'D:\x\24NOV2012BYMACROV\SavePlan-National.txt' delimiter='09'x DSD DROPOVER
1085 ! lrecl=32767;
1086       if _n_ = 1 then        /* write column names or labels */
1087        do;
1088          put
1089             "BusSize"
1090          '09'x
1091             "Post_SOC"
1092          '09'x
1093             "Post_SOC_DESCRIPTION"
1094          '09'x
1095             "Post_PPLAN_GROUP_DESC"
1096          '09'x
1097             "Post_PPLAN_SERIES_TYPE_DESC"
1098          '09'x
1099             "Post_RATE"
1100          '09'x
1101             "NbSaves"
1102          ;
1103        end;
1104      set  RAJ.WEEKLY_SAVE_PLAN_NATIONAL   end=EFIEOD;
1105          format BusSize $6. ;
1106          format Post_SOC $9. ;
1107          format Post_SOC_DESCRIPTION $30. ;
1108          format Post_PPLAN_GROUP_DESC $50. ;
1109          format Post_PPLAN_SERIES_TYPE_DESC $30. ;
1110          format Post_RATE best12. ;
1111          format NbSaves best12. ;
1112        do;
1113          EFIOUT + 1;
1114          put BusSize $ @;
1115          put Post_SOC $ @;
1116          put Post_SOC_DESCRIPTION $ @;
1117          put Post_PPLAN_GROUP_DESC $ @;
1118          put Post_PPLAN_SERIES_TYPE_DESC $ @;
1119          put Post_RATE @;
1120          put NbSaves ;
1121          ;
1122        end;
1123       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
1124       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
1125       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\SavePlan-National.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\SavePlan-National.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:27:44 o'cloc,
      Create Time=March 10, 2014 23:20:40 o'cloc

NOTE: 61 records were written to the file 'D:\x\24NOV2012BYMACROV\SavePlan-National.txt'.
      The minimum record length was 53.
      The maximum record length was 105.
NOTE: There were 60 observations read from the data set RAJ.WEEKLY_SAVE_PLAN_NATIONAL.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds


60 records created in D:\x\24NOV2012BYMACROV\SavePlan-National.txt from RAJ.WEEKLY_SAVE_PLAN_NATIONAL.


NOTE: "D:\x\24NOV2012BYMACROV\SavePlan-National.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.40 seconds
      cpu time            0.01 seconds



1131    /**********************************************************************
1132    *   PRODUCT:   SAS
1133    *   VERSION:   9.2
1134    *   CREATOR:   External File Interface
1135    *   DATE:      30MAR14
1136    *   DESC:      Generated SAS Datastep Code
1137    *   TEMPLATE SOURCE:  (None Specified.)
1138    ***********************************************************************/
1139       data _null_;
1140       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
1141       %let _EFIREC_ = 0;     /* clear export record count macro variable */
1142       file 'D:\x\24NOV2012BYMACROV\CostOfSave-National.txt' delimiter='09'x DSD DROPOVER
1142 ! lrecl=32767;
1143       if _n_ = 1 then        /* write column names or labels */
1144        do;
1145          put
1146             "BusSize"
1147          '09'x
1148             "Case"
1149          '09'x
1150             "SaveContract"
1151          '09'x
1152             "Week"
1153          '09'x
1154             "Order"
1155          '09'x
1156             "TotalSaves"
1157          '09'x
1158             "NbSaves_SavePlan"
1159          '09'x
1160             "MeanSaveCost_SavePlan"
1161          '09'x
1162             "NbSaves_NonSavePlan"
1163          '09'x
1164             "MeanSaveCost_NonSavePlan"
1165          '09'x
1166             "NbSaves_AllPlans"
1167          '09'x
1168             "MeanSaveCost_AllPlans"
1169          '09'x
1170             "NbSaves_HUP"
1171          '09'x
1172             "MeanSaveCost_HUP"
1173          '09'x
1174             "NbSaves_Option"
1175          '09'x
1176             "MeanSaveCost_Option"
1177          '09'x
1178             "NbSaves_Discount"
1179          '09'x
1180             "MeanSaveCost_SaveDiscount"
1181          '09'x
1182             "MeanNbDisc"
1183          '09'x
1184             "NbSaves_NonCost"
1185          '09'x
1186             "MeanSave_NonCost"
1187          '09'x
1188             "MeanNbNonCostOffer"
1189          '09'x
1190             "NbCostingSaves"
1191          '09'x
1192             "CostingSaveShare"
1193          '09'x
1194             "PlanSwapCost"
1195          '09'x
1196             "HUPCost"
1197          '09'x
1198             "OptionCost"
1199          '09'x
1200             "DiscountCost"
1201          '09'x
1202             "TotalCostOfSave"
1203          '09'x
1204             "AveTotalCostOfSave_All_Saves"
1205          '09'x
1206             "AveTotalCostOfSave_Costing_Saves"
1207          '09'x
1208             "CSR_ID"
1209          '09'x
1210             "EMPLOYEE_ID"
1211          '09'x
1212             "FIRST_NAME"
1213          '09'x
1214             "LAST_NAME"
1215          '09'x
1216             "DEPARTMENT_NAME"
1217          '09'x
1218             "JOB_TITLE"
1219          '09'x
1220             "JOB_STATUS"
1221          '09'x
1222             "EMPLOYMENT_STATUS"
1223          '09'x
1224             "START_DATE"
1225          '09'x
1226             "SUPERVISOR1_NAME"
1227          '09'x
1228             "SUPERVISOR2_NAME"
1229          '09'x
1230             "SUPERVISOR3_NAME"
1231          '09'x
1232             "USERID_V21"
1233          ;
1234        end;
1235      set  RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD   end=EFIEOD;
1236          format BusSize $6. ;
1237          format Case $35. ;
1238          format SaveContract $1. ;
1239          format Week best12. ;
1240          format Order best12. ;
1241          format TotalSaves best12. ;
1242          format NbSaves_SavePlan best12. ;
1243          format MeanSaveCost_SavePlan best12. ;
1244          format NbSaves_NonSavePlan best12. ;
1245          format MeanSaveCost_NonSavePlan best12. ;
1246          format NbSaves_AllPlans best12. ;
1247          format MeanSaveCost_AllPlans best12. ;
1248          format NbSaves_HUP best12. ;
1249          format MeanSaveCost_HUP best12. ;
1250          format NbSaves_Option best12. ;
1251          format MeanSaveCost_Option best12. ;
1252          format NbSaves_Discount best12. ;
1253          format MeanSaveCost_SaveDiscount best12. ;
1254          format MeanNbDisc best12. ;
1255          format NbSaves_NonCost best12. ;
1256          format MeanSave_NonCost dollar23.2 ;
1257          format MeanNbNonCostOffer best12. ;
1258          format NbCostingSaves best12. ;
1259          format CostingSaveShare best12. ;
1260          format PlanSwapCost best12. ;
1261          format HUPCost best12. ;
1262          format OptionCost best12. ;
1263          format DiscountCost best12. ;
1264          format TotalCostOfSave best12. ;
1265          format AveTotalCostOfSave_All_Saves best12. ;
1266          format AveTotalCostOfSave_Costing_Saves best12. ;
1267          format CSR_ID $20. ;
1268          format EMPLOYEE_ID 11. ;
1269          format FIRST_NAME $40. ;
1270          format LAST_NAME $40. ;
1271          format DEPARTMENT_NAME $40. ;
1272          format JOB_TITLE $40. ;
1273          format JOB_STATUS $1. ;
1274          format EMPLOYMENT_STATUS $20. ;
1275          format START_DATE datetime20. ;
1276          format SUPERVISOR1_NAME $40. ;
1277          format SUPERVISOR2_NAME $40. ;
1278          format SUPERVISOR3_NAME $40. ;
1279          format USERID_V21 $10. ;
1280        do;
1281          EFIOUT + 1;
1282          put BusSize $ @;
1283          put Case $ @;
1284          put SaveContract $ @;
1285          put Week @;
1286          put Order @;
1287          put TotalSaves @;
1288          put NbSaves_SavePlan @;
1289          put MeanSaveCost_SavePlan @;
1290          put NbSaves_NonSavePlan @;
1291          put MeanSaveCost_NonSavePlan @;
1292          put NbSaves_AllPlans @;
1293          put MeanSaveCost_AllPlans @;
1294          put NbSaves_HUP @;
1295          put MeanSaveCost_HUP @;
1296          put NbSaves_Option @;
1297          put MeanSaveCost_Option @;
1298          put NbSaves_Discount @;
1299          put MeanSaveCost_SaveDiscount @;
1300          put MeanNbDisc @;
1301          put NbSaves_NonCost @;
1302          put MeanSave_NonCost @;
1303          put MeanNbNonCostOffer @;
1304          put NbCostingSaves @;
1305          put CostingSaveShare @;
1306          put PlanSwapCost @;
1307          put HUPCost @;
1308          put OptionCost @;
1309          put DiscountCost @;
1310          put TotalCostOfSave @;
1311          put AveTotalCostOfSave_All_Saves @;
1312          put AveTotalCostOfSave_Costing_Saves @;
1313          put CSR_ID $ @;
1314          put EMPLOYEE_ID @;
1315          put FIRST_NAME $ @;
1316          put LAST_NAME $ @;
1317          put DEPARTMENT_NAME $ @;
1318          put JOB_TITLE $ @;
1319          put JOB_STATUS $ @;
1320          put EMPLOYMENT_STATUS $ @;
1321          put START_DATE @;
1322          put SUPERVISOR1_NAME $ @;
1323          put SUPERVISOR2_NAME $ @;
1324          put SUPERVISOR3_NAME $ @;
1325          put USERID_V21 $ ;
1326          ;
1327        end;
1328       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
1329       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
1330       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfSave-National.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfSave-National.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:27:51 o'cloc,
      Create Time=March 10, 2014 23:20:40 o'cloc

NOTE: 4307 records were written to the file 'D:\x\24NOV2012BYMACROV\CostOfSave-National.txt'.
      The minimum record length was 73.
      The maximum record length was 663.
NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.
NOTE: DATA statement used (Total process time):
      real time           0.76 seconds
      cpu time            0.25 seconds


4306 records created in D:\x\24NOV2012BYMACROV\CostOfSave-National.txt from
RAJ.WEEKLY_CSR_REPORT_NATIONAL_YTD.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfSave-National.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           7.10 seconds
      cpu time            0.31 seconds



1336    /**********************************************************************
1337    *   PRODUCT:   SAS
1338    *   VERSION:   9.2
1339    *   CREATOR:   External File Interface
1340    *   DATE:      30MAR14
1341    *   DESC:      Generated SAS Datastep Code
1342    *   TEMPLATE SOURCE:  (None Specified.)
1343    ***********************************************************************/
1344       data _null_;
1345       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
1346       %let _EFIREC_ = 0;     /* clear export record count macro variable */
1347       file 'D:\x\24NOV2012BYMACROV\CostOfSave-Footprint.txt' delimiter='09'x DSD DROPOVER
1347 ! lrecl=32767;
1348       if _n_ = 1 then        /* write column names or labels */
1349        do;
1350          put
1351             "BusSize"
1352          '09'x
1353             "FootPrint"
1354          '09'x
1355             "Case"
1356          '09'x
1357             "SaveContract"
1358          '09'x
1359             "Week"
1360          '09'x
1361             "Order"
1362          '09'x
1363             "TotalSaves"
1364          '09'x
1365             "NbSaves_SavePlan"
1366          '09'x
1367             "MeanSaveCost_SavePlan"
1368          '09'x
1369             "NbSaves_NonSavePlan"
1370          '09'x
1371             "MeanSaveCost_NonSavePlan"
1372          '09'x
1373             "NbSaves_AllPlans"
1374          '09'x
1375             "MeanSaveCost_AllPlans"
1376          '09'x
1377             "NbSaves_HUP"
1378          '09'x
1379             "MeanSaveCost_HUP"
1380          '09'x
1381             "NbSaves_Option"
1382          '09'x
1383             "MeanSaveCost_Option"
1384          '09'x
1385             "NbSaves_Discount"
1386          '09'x
1387             "MeanSaveCost_SaveDiscount"
1388          '09'x
1389             "MeanNbDisc"
1390          '09'x
1391             "NbSaves_NonCost"
1392          '09'x
1393             "MeanSave_NonCost"
1394          '09'x
1395             "MeanNbNonCostOffer"
1396          '09'x
1397             "NbCostingSaves"
1398          '09'x
1399             "CostingSaveShare"
1400          '09'x
1401             "PlanSwapCost"
1402          '09'x
1403             "HUPCost"
1404          '09'x
1405             "OptionCost"
1406          '09'x
1407             "DiscountCost"
1408          '09'x
1409             "TotalCostOfSave"
1410          '09'x
1411             "AveTotalCostOfSave_All_Saves"
1412          '09'x
1413             "AveTotalCostOfSave_Costing_Saves"
1414          '09'x
1415             "CSR_ID"
1416          '09'x
1417             "EMPLOYEE_ID"
1418          '09'x
1419             "FIRST_NAME"
1420          '09'x
1421             "LAST_NAME"
1422          '09'x
1423             "DEPARTMENT_NAME"
1424          '09'x
1425             "JOB_TITLE"
1426          '09'x
1427             "JOB_STATUS"
1428          '09'x
1429             "EMPLOYMENT_STATUS"
1430          '09'x
1431             "START_DATE"
1432          '09'x
1433             "SUPERVISOR1_NAME"
1434          '09'x
1435             "SUPERVISOR2_NAME"
1436          '09'x
1437             "SUPERVISOR3_NAME"
1438          '09'x
1439             "USERID_V21"
1440          ;
1441        end;
1442      set  RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD   end=EFIEOD;
1443          format BusSize $6. ;
1444          format FootPrint $1. ;
1445          format Case $35. ;
1446          format SaveContract $1. ;
1447          format Week best12. ;
1448          format Order best12. ;
1449          format TotalSaves best12. ;
1450          format NbSaves_SavePlan best12. ;
1451          format MeanSaveCost_SavePlan best12. ;
1452          format NbSaves_NonSavePlan best12. ;
1453          format MeanSaveCost_NonSavePlan best12. ;
1454          format NbSaves_AllPlans best12. ;
1455          format MeanSaveCost_AllPlans best12. ;
1456          format NbSaves_HUP best12. ;
1457          format MeanSaveCost_HUP best12. ;
1458          format NbSaves_Option best12. ;
1459          format MeanSaveCost_Option best12. ;
1460          format NbSaves_Discount best12. ;
1461          format MeanSaveCost_SaveDiscount best12. ;
1462          format MeanNbDisc best12. ;
1463          format NbSaves_NonCost best12. ;
1464          format MeanSave_NonCost dollar23.2 ;
1465          format MeanNbNonCostOffer best12. ;
1466          format NbCostingSaves best12. ;
1467          format CostingSaveShare best12. ;
1468          format PlanSwapCost best12. ;
1469          format HUPCost best12. ;
1470          format OptionCost best12. ;
1471          format DiscountCost best12. ;
1472          format TotalCostOfSave best12. ;
1473          format AveTotalCostOfSave_All_Saves best12. ;
1474          format AveTotalCostOfSave_Costing_Saves best12. ;
1475          format CSR_ID $20. ;
1476          format EMPLOYEE_ID 11. ;
1477          format FIRST_NAME $40. ;
1478          format LAST_NAME $40. ;
1479          format DEPARTMENT_NAME $40. ;
1480          format JOB_TITLE $40. ;
1481          format JOB_STATUS $1. ;
1482          format EMPLOYMENT_STATUS $20. ;
1483          format START_DATE datetime20. ;
1484          format SUPERVISOR1_NAME $40. ;
1485          format SUPERVISOR2_NAME $40. ;
1486          format SUPERVISOR3_NAME $40. ;
1487          format USERID_V21 $10. ;
1488        do;
1489          EFIOUT + 1;
1490          put BusSize $ @;
1491          put FootPrint $ @;
1492          put Case $ @;
1493          put SaveContract $ @;
1494          put Week @;
1495          put Order @;
1496          put TotalSaves @;
1497          put NbSaves_SavePlan @;
1498          put MeanSaveCost_SavePlan @;
1499          put NbSaves_NonSavePlan @;
1500          put MeanSaveCost_NonSavePlan @;
1501          put NbSaves_AllPlans @;
1502          put MeanSaveCost_AllPlans @;
1503          put NbSaves_HUP @;
1504          put MeanSaveCost_HUP @;
1505          put NbSaves_Option @;
1506          put MeanSaveCost_Option @;
1507          put NbSaves_Discount @;
1508          put MeanSaveCost_SaveDiscount @;
1509          put MeanNbDisc @;
1510          put NbSaves_NonCost @;
1511          put MeanSave_NonCost @;
1512          put MeanNbNonCostOffer @;
1513          put NbCostingSaves @;
1514          put CostingSaveShare @;
1515          put PlanSwapCost @;
1516          put HUPCost @;
1517          put OptionCost @;
1518          put DiscountCost @;
1519          put TotalCostOfSave @;
1520          put AveTotalCostOfSave_All_Saves @;
1521          put AveTotalCostOfSave_Costing_Saves @;
1522          put CSR_ID $ @;
1523          put EMPLOYEE_ID @;
1524          put FIRST_NAME $ @;
1525          put LAST_NAME $ @;
1526          put DEPARTMENT_NAME $ @;
1527          put JOB_TITLE $ @;
1528          put JOB_STATUS $ @;
1529          put EMPLOYMENT_STATUS $ @;
1530          put START_DATE @;
1531          put SUPERVISOR1_NAME $ @;
1532          put SUPERVISOR2_NAME $ @;
1533          put SUPERVISOR3_NAME $ @;
1534          put USERID_V21 $ ;
1535          ;
1536        end;
1537       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
1538       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
1539       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfSave-Footprint.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfSave-Footprint.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:28:01 o'cloc,
      Create Time=March 10, 2014 23:20:42 o'cloc

NOTE: 6578 records were written to the file 'D:\x\24NOV2012BYMACROV\CostOfSave-Footprint.txt'.
      The minimum record length was 75.
      The maximum record length was 673.
NOTE: There were 6577 observations read from the data set RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.
NOTE: DATA statement used (Total process time):
      real time           1.10 seconds
      cpu time            0.29 seconds


6577 records created in D:\x\24NOV2012BYMACROV\CostOfSave-Footprint.txt from
RAJ.WEEKLY_CSR_REPORT_CABLE_FP_YTD.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfSave-Footprint.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           10.40 seconds
      cpu time            0.32 seconds



1545    /**********************************************************************
1546    *   PRODUCT:   SAS
1547    *   VERSION:   9.2
1548    *   CREATOR:   External File Interface
1549    *   DATE:      30MAR14
1550    *   DESC:      Generated SAS Datastep Code
1551    *   TEMPLATE SOURCE:  (None Specified.)
1552    ***********************************************************************/
1553       data _null_;
1554       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
1555       %let _EFIREC_ = 0;     /* clear export record count macro variable */
1556       file 'D:\x\24NOV2012BYMACROV\SavePlanIPTV.txt' delimiter='09'x DSD DROPOVER lrecl=32767;
1557       if _n_ = 1 then        /* write column names or labels */
1558        do;
1559          put
1560             "BusSize"
1561          '09'x
1562             "Post_SOC"
1563          '09'x
1564             "Post_SOC_DESCRIPTION"
1565          '09'x
1566             "Post_PPLAN_GROUP_DESC"
1567          '09'x
1568             "Post_PPLAN_SERIES_TYPE_DESC"
1569          '09'x
1570             "Post_RATE"
1571          '09'x
1572             "NbSaves"
1573          ;
1574        end;
1575      set  RAJ.WEEKLY_SAVE_PLAN_IPTV   end=EFIEOD;
1576          format BusSize $6. ;
1577          format Post_SOC $9. ;
1578          format Post_SOC_DESCRIPTION $30. ;
1579          format Post_PPLAN_GROUP_DESC $50. ;
1580          format Post_PPLAN_SERIES_TYPE_DESC $30. ;
1581          format Post_RATE best12. ;
1582          format NbSaves best12. ;
1583        do;
1584          EFIOUT + 1;
1585          put BusSize $ @;
1586          put Post_SOC $ @;
1587          put Post_SOC_DESCRIPTION $ @;
1588          put Post_PPLAN_GROUP_DESC $ @;
1589          put Post_PPLAN_SERIES_TYPE_DESC $ @;
1590          put Post_RATE @;
1591          put NbSaves ;
1592          ;
1593        end;
1594       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
1595       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
1596       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\SavePlanIPTV.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\SavePlanIPTV.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:28:02 o'cloc,
      Create Time=March 10, 2014 23:20:43 o'cloc

NOTE: 53 records were written to the file 'D:\x\24NOV2012BYMACROV\SavePlanIPTV.txt'.
      The minimum record length was 53.
      The maximum record length was 105.
NOTE: There were 52 observations read from the data set RAJ.WEEKLY_SAVE_PLAN_IPTV.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.00 seconds


52 records created in D:\x\24NOV2012BYMACROV\SavePlanIPTV.txt from RAJ.WEEKLY_SAVE_PLAN_IPTV.


NOTE: "D:\x\24NOV2012BYMACROV\SavePlanIPTV.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.46 seconds
      cpu time            0.04 seconds



1602    /**********************************************************************
1603    *   PRODUCT:   SAS
1604    *   VERSION:   9.2
1605    *   CREATOR:   External File Interface
1606    *   DATE:      30MAR14
1607    *   DESC:      Generated SAS Datastep Code
1608    *   TEMPLATE SOURCE:  (None Specified.)
1609    ***********************************************************************/
1610       data _null_;
1611       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
1612       %let _EFIREC_ = 0;     /* clear export record count macro variable */
1613       file 'D:\x\24NOV2012BYMACROV\CostOfSave-IPTV.txt' delimiter='09'x DSD DROPOVER lrecl=32767;
1614       if _n_ = 1 then        /* write column names or labels */
1615        do;
1616          put
1617             "BusSize"
1618          '09'x
1619             "IPTV"
1620          '09'x
1621             "Case"
1622          '09'x
1623             "SaveContract"
1624          '09'x
1625             "Week"
1626          '09'x
1627             "Order"
1628          '09'x
1629             "TotalSaves"
1630          '09'x
1631             "NbSaves_SavePlan"
1632          '09'x
1633             "MeanSaveCost_SavePlan"
1634          '09'x
1635             "NbSaves_NonSavePlan"
1636          '09'x
1637             "MeanSaveCost_NonSavePlan"
1638          '09'x
1639             "NbSaves_AllPlans"
1640          '09'x
1641             "MeanSaveCost_AllPlans"
1642          '09'x
1643             "NbSaves_HUP"
1644          '09'x
1645             "MeanSaveCost_HUP"
1646          '09'x
1647             "NbSaves_Option"
1648          '09'x
1649             "MeanSaveCost_Option"
1650          '09'x
1651             "NbSaves_Discount"
1652          '09'x
1653             "MeanSaveCost_SaveDiscount"
1654          '09'x
1655             "MeanNbDisc"
1656          '09'x
1657             "NbSaves_NonCost"
1658          '09'x
1659             "MeanSave_NonCost"
1660          '09'x
1661             "MeanNbNonCostOffer"
1662          '09'x
1663             "NbCostingSaves"
1664          '09'x
1665             "CostingSaveShare"
1666          '09'x
1667             "PlanSwapCost"
1668          '09'x
1669             "HUPCost"
1670          '09'x
1671             "OptionCost"
1672          '09'x
1673             "DiscountCost"
1674          '09'x
1675             "TotalCostOfSave"
1676          '09'x
1677             "AveTotalCostOfSave_All_Saves"
1678          '09'x
1679             "AveTotalCostOfSave_Costing_Saves"
1680          '09'x
1681             "CSR_ID"
1682          '09'x
1683             "EMPLOYEE_ID"
1684          '09'x
1685             "FIRST_NAME"
1686          '09'x
1687             "LAST_NAME"
1688          '09'x
1689             "DEPARTMENT_NAME"
1690          '09'x
1691             "JOB_TITLE"
1692          '09'x
1693             "JOB_STATUS"
1694          '09'x
1695             "EMPLOYMENT_STATUS"
1696          '09'x
1697             "START_DATE"
1698          '09'x
1699             "SUPERVISOR1_NAME"
1700          '09'x
1701             "SUPERVISOR2_NAME"
1702          '09'x
1703             "SUPERVISOR3_NAME"
1704          '09'x
1705             "USERID_V21"
1706          ;
1707        end;
1708      set  RAJ.WEEKLY_CSR_REPORT_IPTV_YTD   end=EFIEOD;
1709          format BusSize $6. ;
1710          format IPTV $1. ;
1711          format Case $35. ;
1712          format SaveContract $1. ;
1713          format Week best12. ;
1714          format Order best12. ;
1715          format TotalSaves best12. ;
1716          format NbSaves_SavePlan best12. ;
1717          format MeanSaveCost_SavePlan best12. ;
1718          format NbSaves_NonSavePlan best12. ;
1719          format MeanSaveCost_NonSavePlan best12. ;
1720          format NbSaves_AllPlans best12. ;
1721          format MeanSaveCost_AllPlans best12. ;
1722          format NbSaves_HUP best12. ;
1723          format MeanSaveCost_HUP best12. ;
1724          format NbSaves_Option best12. ;
1725          format MeanSaveCost_Option best12. ;
1726          format NbSaves_Discount best12. ;
1727          format MeanSaveCost_SaveDiscount best12. ;
1728          format MeanNbDisc best12. ;
1729          format NbSaves_NonCost best12. ;
1730          format MeanSave_NonCost dollar23.2 ;
1731          format MeanNbNonCostOffer best12. ;
1732          format NbCostingSaves best12. ;
1733          format CostingSaveShare best12. ;
1734          format PlanSwapCost best12. ;
1735          format HUPCost best12. ;
1736          format OptionCost best12. ;
1737          format DiscountCost best12. ;
1738          format TotalCostOfSave best12. ;
1739          format AveTotalCostOfSave_All_Saves best12. ;
1740          format AveTotalCostOfSave_Costing_Saves best12. ;
1741          format CSR_ID $20. ;
1742          format EMPLOYEE_ID 11. ;
1743          format FIRST_NAME $40. ;
1744          format LAST_NAME $40. ;
1745          format DEPARTMENT_NAME $40. ;
1746          format JOB_TITLE $40. ;
1747          format JOB_STATUS $1. ;
1748          format EMPLOYMENT_STATUS $20. ;
1749          format START_DATE datetime20. ;
1750          format SUPERVISOR1_NAME $40. ;
1751          format SUPERVISOR2_NAME $40. ;
1752          format SUPERVISOR3_NAME $40. ;
1753          format USERID_V21 $10. ;
1754        do;
1755          EFIOUT + 1;
1756          put BusSize $ @;
1757          put IPTV $ @;
1758          put Case $ @;
1759          put SaveContract $ @;
1760          put Week @;
1761          put Order @;
1762          put TotalSaves @;
1763          put NbSaves_SavePlan @;
1764          put MeanSaveCost_SavePlan @;
1765          put NbSaves_NonSavePlan @;
1766          put MeanSaveCost_NonSavePlan @;
1767          put NbSaves_AllPlans @;
1768          put MeanSaveCost_AllPlans @;
1769          put NbSaves_HUP @;
1770          put MeanSaveCost_HUP @;
1771          put NbSaves_Option @;
1772          put MeanSaveCost_Option @;
1773          put NbSaves_Discount @;
1774          put MeanSaveCost_SaveDiscount @;
1775          put MeanNbDisc @;
1776          put NbSaves_NonCost @;
1777          put MeanSave_NonCost @;
1778          put MeanNbNonCostOffer @;
1779          put NbCostingSaves @;
1780          put CostingSaveShare @;
1781          put PlanSwapCost @;
1782          put HUPCost @;
1783          put OptionCost @;
1784          put DiscountCost @;
1785          put TotalCostOfSave @;
1786          put AveTotalCostOfSave_All_Saves @;
1787          put AveTotalCostOfSave_Costing_Saves @;
1788          put CSR_ID $ @;
1789          put EMPLOYEE_ID @;
1790          put FIRST_NAME $ @;
1791          put LAST_NAME $ @;
1792          put DEPARTMENT_NAME $ @;
1793          put JOB_TITLE $ @;
1794          put JOB_STATUS $ @;
1795          put EMPLOYMENT_STATUS $ @;
1796          put START_DATE @;
1797          put SUPERVISOR1_NAME $ @;
1798          put SUPERVISOR2_NAME $ @;
1799          put SUPERVISOR3_NAME $ @;
1800          put USERID_V21 $ ;
1801          ;
1802        end;
1803       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
1804       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
1805       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfSave-IPTV.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfSave-IPTV.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:28:09 o'cloc,
      Create Time=March 10, 2014 23:20:44 o'cloc

NOTE: 4701 records were written to the file 'D:\x\24NOV2012BYMACROV\CostOfSave-IPTV.txt'.
      The minimum record length was 75.
      The maximum record length was 668.
NOTE: There were 4700 observations read from the data set RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.
NOTE: DATA statement used (Total process time):
      real time           0.85 seconds
      cpu time            0.18 seconds


4700 records created in D:\x\24NOV2012BYMACROV\CostOfSave-IPTV.txt from
RAJ.WEEKLY_CSR_REPORT_IPTV_YTD.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfSave-IPTV.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           7.23 seconds
      cpu time            0.26 seconds



1811    /**********************************************************************
1812    *   PRODUCT:   SAS
1813    *   VERSION:   9.2
1814    *   CREATOR:   External File Interface
1815    *   DATE:      30MAR14
1816    *   DESC:      Generated SAS Datastep Code
1817    *   TEMPLATE SOURCE:  (None Specified.)
1818    ***********************************************************************/
1819       data _null_;
1820       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
1821       %let _EFIREC_ = 0;     /* clear export record count macro variable */
1822       file 'D:\x\24NOV2012BYMACROV\CostOfSave-National-ContShare.txt' delimiter='09'x DSD
1822 ! DROPOVER lrecl=32767;
1823       if _n_ = 1 then        /* write column names or labels */
1824        do;
1825          put
1826             "BusSize"
1827          '09'x
1828             "Case"
1829          '09'x
1830             "SaveContract"
1831          '09'x
1832             "Week"
1833          '09'x
1834             "Order"
1835          '09'x
1836             "TotalSaves"
1837          '09'x
1838             "NbSaves_SavePlan"
1839          '09'x
1840             "MeanSaveCost_SavePlan"
1841          '09'x
1842             "NbSaves_NonSavePlan"
1843          '09'x
1844             "MeanSaveCost_NonSavePlan"
1845          '09'x
1846             "NbSaves_AllPlans"
1847          '09'x
1848             "MeanSaveCost_AllPlans"
1849          '09'x
1850             "NbSaves_HUP"
1851          '09'x
1852             "MeanSaveCost_HUP"
1853          '09'x
1854             "NbSaves_Option"
1855          '09'x
1856             "MeanSaveCost_Option"
1857          '09'x
1858             "NbSaves_Discount"
1859          '09'x
1860             "MeanSaveCost_SaveDiscount"
1861          '09'x
1862             "MeanNbDisc"
1863          '09'x
1864             "NbSaves_NonCost"
1865          '09'x
1866             "MeanSave_NonCost"
1867          '09'x
1868             "MeanNbNonCostOffer"
1869          '09'x
1870             "NbCostingSaves"
1871          '09'x
1872             "CostingSaveShare"
1873          '09'x
1874             "PlanSwapCost"
1875          '09'x
1876             "HUPCost"
1877          '09'x
1878             "OptionCost"
1879          '09'x
1880             "DiscountCost"
1881          '09'x
1882             "TotalCostOfSave"
1883          '09'x
1884             "AveTotalCostOfSave_All_Saves"
1885          '09'x
1886             "AveTotalCostOfSave_Costing_Saves"
1887          '09'x
1888             "CSR_ID"
1889          '09'x
1890             "EMPLOYEE_ID"
1891          '09'x
1892             "FIRST_NAME"
1893          '09'x
1894             "LAST_NAME"
1895          '09'x
1896             "DEPARTMENT_NAME"
1897          '09'x
1898             "JOB_TITLE"
1899          '09'x
1900             "JOB_STATUS"
1901          '09'x
1902             "EMPLOYMENT_STATUS"
1903          '09'x
1904             "START_DATE"
1905          '09'x
1906             "SUPERVISOR1_NAME"
1907          '09'x
1908             "SUPERVISOR2_NAME"
1909          '09'x
1910             "SUPERVISOR3_NAME"
1911          '09'x
1912             "USERID_V21"
1913          ;
1914        end;
1915      set  RAJ.WEEKLY_CSR_REP_NATIONAL_PERC_YTD   end=EFIEOD;
1916          format BusSize $6. ;
1917          format Case $35. ;
1918          format SaveContract $1. ;
1919          format Week best12. ;
1920          format Order best12. ;
1921          format TotalSaves best12. ;
1922          format NbSaves_SavePlan best12. ;
1923          format MeanSaveCost_SavePlan best12. ;
1924          format NbSaves_NonSavePlan best12. ;
1925          format MeanSaveCost_NonSavePlan best12. ;
1926          format NbSaves_AllPlans best12. ;
1927          format MeanSaveCost_AllPlans best12. ;
1928          format NbSaves_HUP best12. ;
1929          format MeanSaveCost_HUP best12. ;
1930          format NbSaves_Option best12. ;
1931          format MeanSaveCost_Option best12. ;
1932          format NbSaves_Discount best12. ;
1933          format MeanSaveCost_SaveDiscount best12. ;
1934          format MeanNbDisc best12. ;
1935          format NbSaves_NonCost best12. ;
1936          format MeanSave_NonCost dollar23.2 ;
1937          format MeanNbNonCostOffer best12. ;
1938          format NbCostingSaves best12. ;
1939          format CostingSaveShare best12. ;
1940          format PlanSwapCost best12. ;
1941          format HUPCost best12. ;
1942          format OptionCost best12. ;
1943          format DiscountCost best12. ;
1944          format TotalCostOfSave best12. ;
1945          format AveTotalCostOfSave_All_Saves best12. ;
1946          format AveTotalCostOfSave_Costing_Saves best12. ;
1947          format CSR_ID $20. ;
1948          format EMPLOYEE_ID 11. ;
1949          format FIRST_NAME $40. ;
1950          format LAST_NAME $40. ;
1951          format DEPARTMENT_NAME $40. ;
1952          format JOB_TITLE $40. ;
1953          format JOB_STATUS $1. ;
1954          format EMPLOYMENT_STATUS $20. ;
1955          format START_DATE datetime20. ;
1956          format SUPERVISOR1_NAME $40. ;
1957          format SUPERVISOR2_NAME $40. ;
1958          format SUPERVISOR3_NAME $40. ;
1959          format USERID_V21 $10. ;
1960        do;
1961          EFIOUT + 1;
1962          put BusSize $ @;
1963          put Case $ @;
1964          put SaveContract $ @;
1965          put Week @;
1966          put Order @;
1967          put TotalSaves @;
1968          put NbSaves_SavePlan @;
1969          put MeanSaveCost_SavePlan @;
1970          put NbSaves_NonSavePlan @;
1971          put MeanSaveCost_NonSavePlan @;
1972          put NbSaves_AllPlans @;
1973          put MeanSaveCost_AllPlans @;
1974          put NbSaves_HUP @;
1975          put MeanSaveCost_HUP @;
1976          put NbSaves_Option @;
1977          put MeanSaveCost_Option @;
1978          put NbSaves_Discount @;
1979          put MeanSaveCost_SaveDiscount @;
1980          put MeanNbDisc @;
1981          put NbSaves_NonCost @;
1982          put MeanSave_NonCost @;
1983          put MeanNbNonCostOffer @;
1984          put NbCostingSaves @;
1985          put CostingSaveShare @;
1986          put PlanSwapCost @;
1987          put HUPCost @;
1988          put OptionCost @;
1989          put DiscountCost @;
1990          put TotalCostOfSave @;
1991          put AveTotalCostOfSave_All_Saves @;
1992          put AveTotalCostOfSave_Costing_Saves @;
1993          put CSR_ID $ @;
1994          put EMPLOYEE_ID @;
1995          put FIRST_NAME $ @;
1996          put LAST_NAME $ @;
1997          put DEPARTMENT_NAME $ @;
1998          put JOB_TITLE $ @;
1999          put JOB_STATUS $ @;
2000          put EMPLOYMENT_STATUS $ @;
2001          put START_DATE @;
2002          put SUPERVISOR1_NAME $ @;
2003          put SUPERVISOR2_NAME $ @;
2004          put SUPERVISOR3_NAME $ @;
2005          put USERID_V21 $ ;
2006          ;
2007        end;
2008       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
2009       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
2010       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfSave-National-ContShare.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfSave-National-ContShare.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:28:16 o'cloc,
      Create Time=March 10, 2014 23:20:45 o'cloc

NOTE: 4307 records were written to the file
      'D:\x\24NOV2012BYMACROV\CostOfSave-National-ContShare.txt'.
      The minimum record length was 73.
      The maximum record length was 663.
NOTE: There were 4306 observations read from the data set RAJ.WEEKLY_CSR_REP_NATIONAL_PERC_YTD.
NOTE: DATA statement used (Total process time):
      real time           0.76 seconds
      cpu time            0.28 seconds


4306 records created in D:\x\24NOV2012BYMACROV\CostOfSave-National-ContShare.txt from
RAJ.WEEKLY_CSR_REP_NATIONAL_PERC_YTD.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfSave-National-ContShare.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           7.34 seconds
      cpu time            0.31 seconds



2016    /**********************************************************************
2017    *   PRODUCT:   SAS
2018    *   VERSION:   9.2
2019    *   CREATOR:   External File Interface
2020    *   DATE:      30MAR14
2021    *   DESC:      Generated SAS Datastep Code
2022    *   TEMPLATE SOURCE:  (None Specified.)
2023    ***********************************************************************/
2024       data _null_;
2025       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
2026       %let _EFIREC_ = 0;     /* clear export record count macro variable */
2027       file 'D:\x\24NOV2012BYMACROV\CostOfsave-Department.txt' delimiter='09'x DSD DROPOVER
2027 ! lrecl=32767;
2028       if _n_ = 1 then        /* write column names or labels */
2029        do;
2030          put
2031             "BusSize"
2032          '09'x
2033             "DEPARTMENT_NAME"
2034          '09'x
2035             "Case"
2036          '09'x
2037             "SaveContract"
2038          '09'x
2039             "Week"
2040          '09'x
2041             "Order"
2042          '09'x
2043             "TotalSaves"
2044          '09'x
2045             "NbSaves_SavePlan"
2046          '09'x
2047             "MeanSaveCost_SavePlan"
2048          '09'x
2049             "NbSaves_NonSavePlan"
2050          '09'x
2051             "MeanSaveCost_NonSavePlan"
2052          '09'x
2053             "NbSaves_AllPlans"
2054          '09'x
2055             "MeanSaveCost_AllPlans"
2056          '09'x
2057             "NbSaves_HUP"
2058          '09'x
2059             "MeanSaveCost_HUP"
2060          '09'x
2061             "NbSaves_Option"
2062          '09'x
2063             "MeanSaveCost_Option"
2064          '09'x
2065             "NbSaves_Discount"
2066          '09'x
2067             "MeanSaveCost_SaveDiscount"
2068          '09'x
2069             "MeanNbDisc"
2070          '09'x
2071             "NbSaves_NonCost"
2072          '09'x
2073             "MeanSave_NonCost"
2074          '09'x
2075             "MeanNbNonCostOffer"
2076          '09'x
2077             "NbCostingSaves"
2078          '09'x
2079             "CostingSaveShare"
2080          '09'x
2081             "PlanSwapCost"
2082          '09'x
2083             "HUPCost"
2084          '09'x
2085             "OptionCost"
2086          '09'x
2087             "DiscountCost"
2088          '09'x
2089             "TotalCostOfSave"
2090          '09'x
2091             "AveTotalCostOfSave_All_Saves"
2092          '09'x
2093             "AveTotalCostOfSave_Costing_Saves"
2094          ;
2095        end;
2096      set  RAJ.WEEKLY_CSR_REPORT_DEPARTMENT_YTD   end=EFIEOD;
2097          format BusSize $6. ;
2098          format DEPARTMENT_NAME $40. ;
2099          format Case $35. ;
2100          format SaveContract $1. ;
2101          format Week best12. ;
2102          format Order best12. ;
2103          format TotalSaves best12. ;
2104          format NbSaves_SavePlan best12. ;
2105          format MeanSaveCost_SavePlan best12. ;
2106          format NbSaves_NonSavePlan best12. ;
2107          format MeanSaveCost_NonSavePlan best12. ;
2108          format NbSaves_AllPlans best12. ;
2109          format MeanSaveCost_AllPlans best12. ;
2110          format NbSaves_HUP best12. ;
2111          format MeanSaveCost_HUP best12. ;
2112          format NbSaves_Option best12. ;
2113          format MeanSaveCost_Option best12. ;
2114          format NbSaves_Discount best12. ;
2115          format MeanSaveCost_SaveDiscount best12. ;
2116          format MeanNbDisc best12. ;
2117          format NbSaves_NonCost best12. ;
2118          format MeanSave_NonCost dollar23.2 ;
2119          format MeanNbNonCostOffer best12. ;
2120          format NbCostingSaves best12. ;
2121          format CostingSaveShare best12. ;
2122          format PlanSwapCost best12. ;
2123          format HUPCost best12. ;
2124          format OptionCost best12. ;
2125          format DiscountCost best12. ;
2126          format TotalCostOfSave best12. ;
2127          format AveTotalCostOfSave_All_Saves best12. ;
2128          format AveTotalCostOfSave_Costing_Saves best12. ;
2129        do;
2130          EFIOUT + 1;
2131          put BusSize $ @;
2132          put DEPARTMENT_NAME $ @;
2133          put Case $ @;
2134          put SaveContract $ @;
2135          put Week @;
2136          put Order @;
2137          put TotalSaves @;
2138          put NbSaves_SavePlan @;
2139          put MeanSaveCost_SavePlan @;
2140          put NbSaves_NonSavePlan @;
2141          put MeanSaveCost_NonSavePlan @;
2142          put NbSaves_AllPlans @;
2143          put MeanSaveCost_AllPlans @;
2144          put NbSaves_HUP @;
2145          put MeanSaveCost_HUP @;
2146          put NbSaves_Option @;
2147          put MeanSaveCost_Option @;
2148          put NbSaves_Discount @;
2149          put MeanSaveCost_SaveDiscount @;
2150          put MeanNbDisc @;
2151          put NbSaves_NonCost @;
2152          put MeanSave_NonCost @;
2153          put MeanNbNonCostOffer @;
2154          put NbCostingSaves @;
2155          put CostingSaveShare @;
2156          put PlanSwapCost @;
2157          put HUPCost @;
2158          put OptionCost @;
2159          put DiscountCost @;
2160          put TotalCostOfSave @;
2161          put AveTotalCostOfSave_All_Saves @;
2162          put AveTotalCostOfSave_Costing_Saves ;
2163          ;
2164        end;
2165       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
2166       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
2167       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostOfsave-Department.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostOfsave-Department.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:28:21 o'cloc,
      Create Time=March 10, 2014 23:20:47 o'cloc

NOTE: 4796 records were written to the file 'D:\x\24NOV2012BYMACROV\CostOfsave-Department.txt'.
      The minimum record length was 60.
      The maximum record length was 511.
NOTE: There were 4795 observations read from the data set RAJ.WEEKLY_CSR_REPORT_DEPARTMENT_YTD.
NOTE: DATA statement used (Total process time):
      real time           0.46 seconds
      cpu time            0.20 seconds


4795 records created in D:\x\24NOV2012BYMACROV\CostOfsave-Department.txt from
RAJ.WEEKLY_CSR_REPORT_DEPARTMENT_YTD.


NOTE: "D:\x\24NOV2012BYMACROV\CostOfsave-Department.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           4.79 seconds
      cpu time            0.26 seconds



2173    /**********************************************************************
2174    *   PRODUCT:   SAS
2175    *   VERSION:   9.2
2176    *   CREATOR:   External File Interface
2177    *   DATE:      30MAR14
2178    *   DESC:      Generated SAS Datastep Code
2179    *   TEMPLATE SOURCE:  (None Specified.)
2180    ***********************************************************************/
2181       data _null_;
2182       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
2183       %let _EFIREC_ = 0;     /* clear export record count macro variable */
2184       file 'D:\x\24NOV2012BYMACROV\CostofSave-OnePager-Department.txt' delimiter='09'x DSD
2184 ! DROPOVER lrecl=32767;
2185       if _n_ = 1 then        /* write column names or labels */
2186        do;
2187          put
2188             "BusSize"
2189          '09'x
2190             "Case"
2191          '09'x
2192             "SaveContract"
2193          '09'x
2194             "Week"
2195          '09'x
2196             "Order"
2197          '09'x
2198             "TotalSaves"
2199          '09'x
2200             "NbSaves_SavePlan"
2201          '09'x
2202             "MeanSaveCost_SavePlan"
2203          '09'x
2204             "NbSaves_NonSavePlan"
2205          '09'x
2206             "MeanSaveCost_NonSavePlan"
2207          '09'x
2208             "NbSaves_AllPlans"
2209          '09'x
2210             "MeanSaveCost_AllPlans"
2211          '09'x
2212             "NbSaves_HUP"
2213          '09'x
2214             "MeanSaveCost_HUP"
2215          '09'x
2216             "NbSaves_Option"
2217          '09'x
2218             "MeanSaveCost_Option"
2219          '09'x
2220             "NbSaves_Discount"
2221          '09'x
2222             "MeanSaveCost_SaveDiscount"
2223          '09'x
2224             "MeanNbDisc"
2225          '09'x
2226             "NbSaves_NonCost"
2227          '09'x
2228             "MeanSave_NonCost"
2229          '09'x
2230             "MeanNbNonCostOffer"
2231          '09'x
2232             "NbCostingSaves"
2233          '09'x
2234             "CostingSaveShare"
2235          '09'x
2236             "PlanSwapCost"
2237          '09'x
2238             "HUPCost"
2239          '09'x
2240             "OptionCost"
2241          '09'x
2242             "DiscountCost"
2243          '09'x
2244             "TotalCostOfSave"
2245          '09'x
2246             "AveTotalCostOfSave_All_Saves"
2247          '09'x
2248             "AveTotalCostOfSave_Costing_Saves"
2249          ;
2250        end;
2251      set  RAJ.WEEKLY_ONE_PAGER_DEPARTMENT   end=EFIEOD;
2252          format BusSize $6. ;
2253          format Case $35. ;
2254          format SaveContract $1. ;
2255          format Week best12. ;
2256          format Order best12. ;
2257          format TotalSaves best12. ;
2258          format NbSaves_SavePlan best12. ;
2259          format MeanSaveCost_SavePlan best12. ;
2260          format NbSaves_NonSavePlan best12. ;
2261          format MeanSaveCost_NonSavePlan best12. ;
2262          format NbSaves_AllPlans best12. ;
2263          format MeanSaveCost_AllPlans best12. ;
2264          format NbSaves_HUP best12. ;
2265          format MeanSaveCost_HUP best12. ;
2266          format NbSaves_Option best12. ;
2267          format MeanSaveCost_Option best12. ;
2268          format NbSaves_Discount best12. ;
2269          format MeanSaveCost_SaveDiscount best12. ;
2270          format MeanNbDisc best12. ;
2271          format NbSaves_NonCost best12. ;
2272          format MeanSave_NonCost dollar23.2 ;
2273          format MeanNbNonCostOffer best12. ;
2274          format NbCostingSaves best12. ;
2275          format CostingSaveShare best12. ;
2276          format PlanSwapCost best12. ;
2277          format HUPCost best12. ;
2278          format OptionCost best12. ;
2279          format DiscountCost best12. ;
2280          format TotalCostOfSave best12. ;
2281          format AveTotalCostOfSave_All_Saves best12. ;
2282          format AveTotalCostOfSave_Costing_Saves best12. ;
2283        do;
2284          EFIOUT + 1;
2285          put BusSize $ @;
2286          put Case $ @;
2287          put SaveContract $ @;
2288          put Week @;
2289          put Order @;
2290          put TotalSaves @;
2291          put NbSaves_SavePlan @;
2292          put MeanSaveCost_SavePlan @;
2293          put NbSaves_NonSavePlan @;
2294          put MeanSaveCost_NonSavePlan @;
2295          put NbSaves_AllPlans @;
2296          put MeanSaveCost_AllPlans @;
2297          put NbSaves_HUP @;
2298          put MeanSaveCost_HUP @;
2299          put NbSaves_Option @;
2300          put MeanSaveCost_Option @;
2301          put NbSaves_Discount @;
2302          put MeanSaveCost_SaveDiscount @;
2303          put MeanNbDisc @;
2304          put NbSaves_NonCost @;
2305          put MeanSave_NonCost @;
2306          put MeanNbNonCostOffer @;
2307          put NbCostingSaves @;
2308          put CostingSaveShare @;
2309          put PlanSwapCost @;
2310          put HUPCost @;
2311          put OptionCost @;
2312          put DiscountCost @;
2313          put TotalCostOfSave @;
2314          put AveTotalCostOfSave_All_Saves @;
2315          put AveTotalCostOfSave_Costing_Saves ;
2316          ;
2317        end;
2318       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
2319       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
2320       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\CostofSave-OnePager-Department.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\CostofSave-OnePager-Department.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:28:22 o'cloc,
      Create Time=March 10, 2014 23:20:47 o'cloc

NOTE: 119 records were written to the file
      'D:\x\24NOV2012BYMACROV\CostofSave-OnePager-Department.txt'.
      The minimum record length was 68.
      The maximum record length was 495.
NOTE: There were 118 observations read from the data set RAJ.WEEKLY_ONE_PAGER_DEPARTMENT.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds


118 records created in D:\x\24NOV2012BYMACROV\CostofSave-OnePager-Department.txt from
RAJ.WEEKLY_ONE_PAGER_DEPARTMENT.


NOTE: "D:\x\24NOV2012BYMACROV\CostofSave-OnePager-Department.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.50 seconds
      cpu time            0.07 seconds



2326    /**********************************************************************
2327    *   PRODUCT:   SAS
2328    *   VERSION:   9.2
2329    *   CREATOR:   External File Interface
2330    *   DATE:      30MAR14
2331    *   DESC:      Generated SAS Datastep Code
2332    *   TEMPLATE SOURCE:  (None Specified.)
2333    ***********************************************************************/
2334       data _null_;
2335       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
2336       %let _EFIREC_ = 0;     /* clear export record count macro variable */
2337       file 'D:\x\24NOV2012BYMACROV\Weekly_COS_Series.xls' delimiter='09'x DSD DROPOVER
2337 ! lrecl=32767;
2338       if _n_ = 1 then        /* write column names or labels */
2339        do;
2340          put
2341             "BusSize"
2342          '09'x
2343             "Week"
2344          '09'x
2345             "WeekStart"
2346          '09'x
2347             "WeekEnd"
2348          '09'x
2349             "SaveContract"
2350          '09'x
2351             "Order"
2352          '09'x
2353             "TotalSaves"
2354          '09'x
2355             "NbSaves_SavePlan"
2356          '09'x
2357             "MeanSaveCost_SavePlan"
2358          '09'x
2359             "NbSaves_NonSavePlan"
2360          '09'x
2361             "MeanSaveCost_NonSavePlan"
2362          '09'x
2363             "NbSaves_AllPlans"
2364          '09'x
2365             "MeanSaveCost_AllPlans"
2366          '09'x
2367             "NbSaves_HUP"
2368          '09'x
2369             "MeanSaveCost_HUP"
2370          '09'x
2371             "NbSaves_Option"
2372          '09'x
2373             "MeanSaveCost_Option"
2374          '09'x
2375             "NbSaves_Discount"
2376          '09'x
2377             "MeanSaveCost_SaveDiscount"
2378          '09'x
2379             "MeanNbDisc"
2380          '09'x
2381             "NbSaves_NonCost"
2382          '09'x
2383             "MeanSave_NonCost"
2384          '09'x
2385             "MeanNbNonCostOffer"
2386          '09'x
2387             "NbCostingSaves"
2388          '09'x
2389             "CostingSaveShare"
2390          '09'x
2391             "PlanSwapCost"
2392          '09'x
2393             "HUPCost"
2394          '09'x
2395             "OptionCost"
2396          '09'x
2397             "DiscountCost"
2398          '09'x
2399             "TotalCostOfSave"
2400          '09'x
2401             "AveTotalCostOfSave_All_Saves"
2402          '09'x
2403             "AveTotalCostOfSave_Costing_Saves"
2404          ;
2405        end;
2406      set  RAJ.WEEKLY_COS_SERIES   end=EFIEOD;
2407          format BusSize $6. ;
2408          format Week best12. ;
2409          format WeekStart date9. ;
2410          format WeekEnd date9. ;
2411          format SaveContract $1. ;
2412          format Order best12. ;
2413          format TotalSaves best12. ;
2414          format NbSaves_SavePlan best12. ;
2415          format MeanSaveCost_SavePlan best12. ;
2416          format NbSaves_NonSavePlan best12. ;
2417          format MeanSaveCost_NonSavePlan best12. ;
2418          format NbSaves_AllPlans best12. ;
2419          format MeanSaveCost_AllPlans best12. ;
2420          format NbSaves_HUP best12. ;
2421          format MeanSaveCost_HUP best12. ;
2422          format NbSaves_Option best12. ;
2423          format MeanSaveCost_Option best12. ;
2424          format NbSaves_Discount best12. ;
2425          format MeanSaveCost_SaveDiscount best12. ;
2426          format MeanNbDisc best12. ;
2427          format NbSaves_NonCost best12. ;
2428          format MeanSave_NonCost dollar23.2 ;
2429          format MeanNbNonCostOffer best12. ;
2430          format NbCostingSaves best12. ;
2431          format CostingSaveShare best12. ;
2432          format PlanSwapCost best12. ;
2433          format HUPCost best12. ;
2434          format OptionCost best12. ;
2435          format DiscountCost best12. ;
2436          format TotalCostOfSave best12. ;
2437          format AveTotalCostOfSave_All_Saves best12. ;
2438          format AveTotalCostOfSave_Costing_Saves best12. ;
2439        do;
2440          EFIOUT + 1;
2441          put BusSize $ @;
2442          put Week @;
2443          put WeekStart @;
2444          put WeekEnd @;
2445          put SaveContract $ @;
2446          put Order @;
2447          put TotalSaves @;
2448          put NbSaves_SavePlan @;
2449          put MeanSaveCost_SavePlan @;
2450          put NbSaves_NonSavePlan @;
2451          put MeanSaveCost_NonSavePlan @;
2452          put NbSaves_AllPlans @;
2453          put MeanSaveCost_AllPlans @;
2454          put NbSaves_HUP @;
2455          put MeanSaveCost_HUP @;
2456          put NbSaves_Option @;
2457          put MeanSaveCost_Option @;
2458          put NbSaves_Discount @;
2459          put MeanSaveCost_SaveDiscount @;
2460          put MeanNbDisc @;
2461          put NbSaves_NonCost @;
2462          put MeanSave_NonCost @;
2463          put MeanNbNonCostOffer @;
2464          put NbCostingSaves @;
2465          put CostingSaveShare @;
2466          put PlanSwapCost @;
2467          put HUPCost @;
2468          put OptionCost @;
2469          put DiscountCost @;
2470          put TotalCostOfSave @;
2471          put AveTotalCostOfSave_All_Saves @;
2472          put AveTotalCostOfSave_Costing_Saves ;
2473          ;
2474        end;
2475       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
2476       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
2477       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\Weekly_COS_Series.xls' is:
      Filename=D:\x\24NOV2012BYMACROV\Weekly_COS_Series.xls,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:28:23 o'cloc,
      Create Time=March 10, 2014 23:20:48 o'cloc

NOTE: 196 records were written to the file 'D:\x\24NOV2012BYMACROV\Weekly_COS_Series.xls'.
      The minimum record length was 164.
      The maximum record length was 508.
NOTE: There were 195 observations read from the data set RAJ.WEEKLY_COS_SERIES.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds


195 records created in D:\x\24NOV2012BYMACROV\Weekly_COS_Series.xls from RAJ.WEEKLY_COS_SERIES.


NOTE: "D:\x\24NOV2012BYMACROV\Weekly_COS_Series.xls" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.64 seconds
      cpu time            0.04 seconds



2483    /**********************************************************************
2484    *   PRODUCT:   SAS
2485    *   VERSION:   9.2
2486    *   CREATOR:   External File Interface
2487    *   DATE:      30MAR14
2488    *   DESC:      Generated SAS Datastep Code
2489    *   TEMPLATE SOURCE:  (None Specified.)
2490    ***********************************************************************/
2491       data _null_;
2492       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
2493       %let _EFIREC_ = 0;     /* clear export record count macro variable */
2494       file 'D:\x\24NOV2012BYMACROV\PlanSwap.xls' delimiter='09'x DSD DROPOVER lrecl=32767;
2495       if _n_ = 1 then        /* write column names or labels */
2496        do;
2497          put
2498             "SOCRate"
2499          '09'x
2500             "Post_SOCRate"
2501          '09'x
2502             "MSF_Cat"
2503          '09'x
2504             "BAN"
2505          '09'x
2506             "SUBSCRIBER_NO"
2507          '09'x
2508             "Pre_SOC"
2509          '09'x
2510             "Pre_SOC_EFFECTIVE_DATE"
2511          '09'x
2512             "Pre_SOC_SEQ_NO"
2513          '09'x
2514             "Pre_PRODUCT_TYPE"
2515          '09'x
2516             "Pre_SERVICE_TYPE"
2517          '09'x
2518             "Pre_MOST_RECENT_FLAG"
2519          '09'x
2520             "Pre_EFFECTIVE_DATE"
2521          '09'x
2522             "Pre_EXPIRATION_DATE"
2523          '09'x
2524             "Pre_EFFECTIVE_ISSUE_DATE"
2525          '09'x
2526             "Pre_EXPIRATION_ISSUE_DATE"
2527          '09'x
2528             "Pre_CHANNEL_ID"
2529          '09'x
2530             "Pre_SYS_CREATION_DATE"
2531          '09'x
2532             "Pre_SYS_UPDATE_DATE"
2533          '09'x
2534             "Pre_FRANCHISE_ELIGIBILITY"
2535          '09'x
2536             "Pre_START_COMMIT_DATE"
2537          '09'x
2538             "Pre_END_COMMIT_DATE"
2539          '09'x
2540             "Pre_Type"
2541          '09'x
2542             "Pre_PPLAN_GROUP_DESC"
2543          '09'x
2544             "Pre_PPLAN_SERIES_TYPE_DESC"
2545          '09'x
2546             "Pre_SOC_DESCRIPTION"
2547          '09'x
2548             "Pre_SavePlan"
2549          '09'x
2550             "Pre_RATE_Orig"
2551          '09'x
2552             "SUSPENSION_AMOUNT"
2553          '09'x
2554             "Pre_SECONDARY_AMOUNT"
2555          '09'x
2556             "Pre_FRANCHISE_TP"
2557          '09'x
2558             "Week"
2559          '09'x
2560             "Pre_NbShareSubs"
2561          '09'x
2562             "Pre_TotSecAMT"
2563          '09'x
2564             "Pre_RATE"
2565          '09'x
2566             "Pre_Origin"
2567          '09'x
2568             "Post_SOC"
2569          '09'x
2570             "Post_SOC_EFFECTIVE_DATE"
2571          '09'x
2572             "Post_SOC_SEQ_NO"
2573          '09'x
2574             "Post_PRODUCT_TYPE"
2575          '09'x
2576             "Post_SERVICE_TYPE"
2577          '09'x
2578             "Post_MOST_RECENT_FLAG"
2579          '09'x
2580             "Post_EFFECTIVE_DATE"
2581          '09'x
2582             "Post_EXPIRATION_DATE"
2583          '09'x
2584             "Post_EFFECTIVE_ISSUE_DATE"
2585          '09'x
2586             "Post_EXPIRATION_ISSUE_DATE"
2587          '09'x
2588             "Post_CHANNEL_ID"
2589          '09'x
2590             "Post_SYS_CREATION_DATE"
2591          '09'x
2592             "Post_SYS_UPDATE_DATE"
2593          '09'x
2594             "Post_FRANCHISE_ELIGIBILITY"
2595          '09'x
2596             "Post_START_COMMIT_DATE"
2597          '09'x
2598             "Post_END_COMMIT_DATE"
2599          '09'x
2600             "Post_Type"
2601          '09'x
2602             "Post_PPLAN_GROUP_DESC"
2603          '09'x
2604             "Post_PPLAN_SERIES_TYPE_DESC"
2605          '09'x
2606             "Post_SOC_DESCRIPTION"
2607          '09'x
2608             "Post_SavePlan"
2609          '09'x
2610             "Post_RATE_Orig"
2611          '09'x
2612             "Post_SECONDARY_AMOUNT"
2613          '09'x
2614             "Post_FRANCHISE_TP"
2615          '09'x
2616             "Post_NbShareSubs"
2617          '09'x
2618             "Post_TotSecAMT"
2619          '09'x
2620             "Post_RATE"
2621          '09'x
2622             "Post_Origin"
2623          '09'x
2624             "PARTY_ID"
2625          '09'x
2626             "BRAND"
2627          '09'x
2628             "REGION_Cust_Segm"
2629          '09'x
2630             "ACCOUNT_TYPE"
2631          '09'x
2632             "ACCOUNT_SUB_TYPE"
2633          '09'x
2634             "DEACT_REASON_CODE"
2635          '09'x
2636             "SEGMENT_ID"
2637          '09'x
2638             "SEGMENT_DESC_ENG"
2639          '09'x
2640             "SEGMENT_DESC_FR"
2641          '09'x
2642             "EMPLOYEES"
2643          '09'x
2644             "SUB_STATUS_Cust_Segm"
2645          '09'x
2646             "PRICE_PLAN"
2647          '09'x
2648             "PPLAN_SERIES_TYPE"
2649          '09'x
2650             "COMPANY_CODE"
2651          '09'x
2652             "PRODUCT_TYPE"
2653          '09'x
2654             "CUSTGRP"
2655          '09'x
2656             "CUSTTYPE"
2657          '09'x
2658             "MSDTYPE"
2659          '09'x
2660             "SEG_GROUP"
2661          '09'x
2662             "SEG_SUB_GROUP"
2663          '09'x
2664             "ACCTYPE"
2665          '09'x
2666             "DEACT_REASON_CD"
2667          '09'x
2668             "SUB_STATUS_Subs"
2669          '09'x
2670             "SUB_STATUS_LAST_ACT"
2671          '09'x
2672             "PRODUCT_TYPE_Subs"
2673          '09'x
2674             "PRICE_PLAN_Subs"
2675          '09'x
2676             "SOC_EFFECTIVE_DATE"
2677          '09'x
2678             "FRANCHISE_TP"
2679          '09'x
2680             "MSID"
2681          '09'x
2682             "InitActDate"
2683          '09'x
2684             "DeactDate"
2685          '09'x
2686             "CommitStartDate"
2687          '09'x
2688             "CommitEndDate"
2689          '09'x
2690             "ACCTYPE_Subs"
2691          '09'x
2692             "Contract"
2693          '09'x
2694             "Ave3MthChurn"
2695          '09'x
2696             "LeftContDur"
2697          '09'x
2698             "ExpTenLeftCont"
2699          '09'x
2700             "CumChurnLeftCon"
2701          '09'x
2702             "PlanCost"
2703          '09'x
2704             "BusSize"
2705          '09'x
2706             "FootPrint"
2707          '09'x
2708             "TransactionDate"
2709          '09'x
2710             "MinTransactionDate"
2711          '09'x
2712             "SaveContract"
2713          '09'x
2714             "CSR_ID"
2715          '09'x
2716             "IPTV"
2717          ;
2718        end;
2719      set  RAJ.SAVE_PLAN_WEEK   end=EFIEOD;
2720          format SOCRate $45. ;
2721          format Post_SOCRate $40. ;
2722          format MSF_Cat $20. ;
2723          format BAN 10. ;
2724          format SUBSCRIBER_NO $20. ;
2725          format Pre_SOC $9. ;
2726          format Pre_SOC_EFFECTIVE_DATE datetime20. ;
2727          format Pre_SOC_SEQ_NO 10. ;
2728          format Pre_PRODUCT_TYPE $1. ;
2729          format Pre_SERVICE_TYPE $1. ;
2730          format Pre_MOST_RECENT_FLAG $1. ;
2731          format Pre_EFFECTIVE_DATE datetime20. ;
2732          format Pre_EXPIRATION_DATE datetime20. ;
2733          format Pre_EFFECTIVE_ISSUE_DATE datetime20. ;
2734          format Pre_EXPIRATION_ISSUE_DATE datetime20. ;
2735          format Pre_CHANNEL_ID $5. ;
2736          format Pre_SYS_CREATION_DATE datetime20. ;
2737          format Pre_SYS_UPDATE_DATE datetime20. ;
2738          format Pre_FRANCHISE_ELIGIBILITY $1. ;
2739          format Pre_START_COMMIT_DATE datetime20. ;
2740          format Pre_END_COMMIT_DATE datetime20. ;
2741          format Pre_Type $7. ;
2742          format Pre_PPLAN_GROUP_DESC $50. ;
2743          format Pre_PPLAN_SERIES_TYPE_DESC $30. ;
2744          format Pre_SOC_DESCRIPTION $30. ;
2745          format Pre_SavePlan $3. ;
2746          format Pre_RATE_Orig 11.2 ;
2747          format SUSPENSION_AMOUNT 11.2 ;
2748          format Pre_SECONDARY_AMOUNT 11.2 ;
2749          format Pre_FRANCHISE_TP $1. ;
2750          format Week best12. ;
2751          format Pre_NbShareSubs best12. ;
2752          format Pre_TotSecAMT best12. ;
2753          format Pre_RATE best12. ;
2754          format Pre_Origin $3. ;
2755          format Post_SOC $9. ;
2756          format Post_SOC_EFFECTIVE_DATE datetime20. ;
2757          format Post_SOC_SEQ_NO 10. ;
2758          format Post_PRODUCT_TYPE $1. ;
2759          format Post_SERVICE_TYPE $1. ;
2760          format Post_MOST_RECENT_FLAG $1. ;
2761          format Post_EFFECTIVE_DATE datetime20. ;
2762          format Post_EXPIRATION_DATE datetime20. ;
2763          format Post_EFFECTIVE_ISSUE_DATE datetime20. ;
2764          format Post_EXPIRATION_ISSUE_DATE datetime20. ;
2765          format Post_CHANNEL_ID $5. ;
2766          format Post_SYS_CREATION_DATE datetime20. ;
2767          format Post_SYS_UPDATE_DATE datetime20. ;
2768          format Post_FRANCHISE_ELIGIBILITY $1. ;
2769          format Post_START_COMMIT_DATE datetime20. ;
2770          format Post_END_COMMIT_DATE datetime20. ;
2771          format Post_Type $7. ;
2772          format Post_PPLAN_GROUP_DESC $50. ;
2773          format Post_PPLAN_SERIES_TYPE_DESC $30. ;
2774          format Post_SOC_DESCRIPTION $30. ;
2775          format Post_SavePlan $3. ;
2776          format Post_RATE_Orig 11.2 ;
2777          format Post_SECONDARY_AMOUNT 11.2 ;
2778          format Post_FRANCHISE_TP $1. ;
2779          format Post_NbShareSubs best12. ;
2780          format Post_TotSecAMT best12. ;
2781          format Post_RATE best12. ;
2782          format Post_Origin $3. ;
2783          format PARTY_ID best12. ;
2784          format BRAND $1. ;
2785          format REGION_Cust_Segm $2. ;
2786          format ACCOUNT_TYPE $1. ;
2787          format ACCOUNT_SUB_TYPE $1. ;
2788          format DEACT_REASON_CODE $4. ;
2789          format SEGMENT_ID best12. ;
2790          format SEGMENT_DESC_ENG $50. ;
2791          format SEGMENT_DESC_FR $50. ;
2792          format EMPLOYEES best12. ;
2793          format SUB_STATUS_Cust_Segm $1. ;
2794          format PRICE_PLAN $9. ;
2795          format PPLAN_SERIES_TYPE 3. ;
2796          format COMPANY_CODE $9. ;
2797          format PRODUCT_TYPE $1. ;
2798          format CUSTGRP $10. ;
2799          format CUSTTYPE $3. ;
2800          format MSDTYPE $9. ;
2801          format SEG_GROUP $10. ;
2802          format SEG_SUB_GROUP $10. ;
2803          format ACCTYPE $2. ;
2804          format DEACT_REASON_CD $4. ;
2805          format SUB_STATUS_Subs $1. ;
2806          format SUB_STATUS_LAST_ACT $3. ;
2807          format PRODUCT_TYPE_Subs $1. ;
2808          format PRICE_PLAN_Subs $9. ;
2809          format SOC_EFFECTIVE_DATE datetime20. ;
2810          format FRANCHISE_TP $1. ;
2811          format MSID 9. ;
2812          format InitActDate date9. ;
2813          format DeactDate date9. ;
2814          format CommitStartDate date9. ;
2815          format CommitEndDate date9. ;
2816          format ACCTYPE_Subs $2. ;
2817          format Contract $1. ;
2818          format Ave3MthChurn best12. ;
2819          format LeftContDur best12. ;
2820          format ExpTenLeftCont best12. ;
2821          format CumChurnLeftCon best12. ;
2822          format PlanCost best12. ;
2823          format BusSize $6. ;
2824          format FootPrint $1. ;
2825          format TransactionDate date9. ;
2826          format MinTransactionDate date9. ;
2827          format SaveContract $1. ;
2828          format CSR_ID $20. ;
2829          format IPTV $1. ;
2830        do;
2831          EFIOUT + 1;
2832          put SOCRate $ @;
2833          put Post_SOCRate $ @;
2834          put MSF_Cat $ @;
2835          put BAN @;
2836          put SUBSCRIBER_NO $ @;
2837          put Pre_SOC $ @;
2838          put Pre_SOC_EFFECTIVE_DATE @;
2839          put Pre_SOC_SEQ_NO @;
2840          put Pre_PRODUCT_TYPE $ @;
2841          put Pre_SERVICE_TYPE $ @;
2842          put Pre_MOST_RECENT_FLAG $ @;
2843          put Pre_EFFECTIVE_DATE @;
2844          put Pre_EXPIRATION_DATE @;
2845          put Pre_EFFECTIVE_ISSUE_DATE @;
2846          put Pre_EXPIRATION_ISSUE_DATE @;
2847          put Pre_CHANNEL_ID $ @;
2848          put Pre_SYS_CREATION_DATE @;
2849          put Pre_SYS_UPDATE_DATE @;
2850          put Pre_FRANCHISE_ELIGIBILITY $ @;
2851          put Pre_START_COMMIT_DATE @;
2852          put Pre_END_COMMIT_DATE @;
2853          put Pre_Type $ @;
2854          put Pre_PPLAN_GROUP_DESC $ @;
2855          put Pre_PPLAN_SERIES_TYPE_DESC $ @;
2856          put Pre_SOC_DESCRIPTION $ @;
2857          put Pre_SavePlan $ @;
2858          put Pre_RATE_Orig @;
2859          put SUSPENSION_AMOUNT @;
2860          put Pre_SECONDARY_AMOUNT @;
2861          put Pre_FRANCHISE_TP $ @;
2862          put Week @;
2863          put Pre_NbShareSubs @;
2864          put Pre_TotSecAMT @;
2865          put Pre_RATE @;
2866          put Pre_Origin $ @;
2867          put Post_SOC $ @;
2868          put Post_SOC_EFFECTIVE_DATE @;
2869          put Post_SOC_SEQ_NO @;
2870          put Post_PRODUCT_TYPE $ @;
2871          put Post_SERVICE_TYPE $ @;
2872          put Post_MOST_RECENT_FLAG $ @;
2873          put Post_EFFECTIVE_DATE @;
2874          put Post_EXPIRATION_DATE @;
2875          put Post_EFFECTIVE_ISSUE_DATE @;
2876          put Post_EXPIRATION_ISSUE_DATE @;
2877          put Post_CHANNEL_ID $ @;
2878          put Post_SYS_CREATION_DATE @;
2879          put Post_SYS_UPDATE_DATE @;
2880          put Post_FRANCHISE_ELIGIBILITY $ @;
2881          put Post_START_COMMIT_DATE @;
2882          put Post_END_COMMIT_DATE @;
2883          put Post_Type $ @;
2884          put Post_PPLAN_GROUP_DESC $ @;
2885          put Post_PPLAN_SERIES_TYPE_DESC $ @;
2886          put Post_SOC_DESCRIPTION $ @;
2887          put Post_SavePlan $ @;
2888          put Post_RATE_Orig @;
2889          put Post_SECONDARY_AMOUNT @;
2890          put Post_FRANCHISE_TP $ @;
2891          put Post_NbShareSubs @;
2892          put Post_TotSecAMT @;
2893          put Post_RATE @;
2894          put Post_Origin $ @;
2895          put PARTY_ID @;
2896          put BRAND $ @;
2897          put REGION_Cust_Segm $ @;
2898          put ACCOUNT_TYPE $ @;
2899          put ACCOUNT_SUB_TYPE $ @;
2900          put DEACT_REASON_CODE $ @;
2901          put SEGMENT_ID @;
2902          put SEGMENT_DESC_ENG $ @;
2903          put SEGMENT_DESC_FR $ @;
2904          put EMPLOYEES @;
2905          put SUB_STATUS_Cust_Segm $ @;
2906          put PRICE_PLAN $ @;
2907          put PPLAN_SERIES_TYPE @;
2908          put COMPANY_CODE $ @;
2909          put PRODUCT_TYPE $ @;
2910          put CUSTGRP $ @;
2911          put CUSTTYPE $ @;
2912          put MSDTYPE $ @;
2913          put SEG_GROUP $ @;
2914          put SEG_SUB_GROUP $ @;
2915          put ACCTYPE $ @;
2916          put DEACT_REASON_CD $ @;
2917          put SUB_STATUS_Subs $ @;
2918          put SUB_STATUS_LAST_ACT $ @;
2919          put PRODUCT_TYPE_Subs $ @;
2920          put PRICE_PLAN_Subs $ @;
2921          put SOC_EFFECTIVE_DATE @;
2922          put FRANCHISE_TP $ @;
2923          put MSID @;
2924          put InitActDate @;
2925          put DeactDate @;
2926          put CommitStartDate @;
2927          put CommitEndDate @;
2928          put ACCTYPE_Subs $ @;
2929          put Contract $ @;
2930          put Ave3MthChurn @;
2931          put LeftContDur @;
2932          put ExpTenLeftCont @;
2933          put CumChurnLeftCon @;
2934          put PlanCost @;
2935          put BusSize $ @;
2936          put FootPrint $ @;
2937          put TransactionDate @;
2938          put MinTransactionDate @;
2939          put SaveContract $ @;
2940          put CSR_ID $ @;
2941          put IPTV $ ;
2942          ;
2943        end;
2944       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
2945       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
2946       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\PlanSwap.xls' is:
      Filename=D:\x\24NOV2012BYMACROV\PlanSwap.xls,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:28:41 o'cloc,
      Create Time=March 10, 2014 23:20:48 o'cloc

NOTE: 4380 records were written to the file 'D:\x\24NOV2012BYMACROV\PlanSwap.xls'.
      The minimum record length was 757.
      The maximum record length was 1720.
NOTE: There were 4379 observations read from the data set RAJ.SAVE_PLAN_WEEK.
NOTE: DATA statement used (Total process time):
      real time           1.25 seconds
      cpu time            0.43 seconds


4379 records created in D:\x\24NOV2012BYMACROV\PlanSwap.xls from RAJ.SAVE_PLAN_WEEK.


NOTE: "D:\x\24NOV2012BYMACROV\PlanSwap.xls" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           19.34 seconds
      cpu time            0.49 seconds



2953    /**********************************************************************
2954    *   PRODUCT:   SAS
2955    *   VERSION:   9.2
2956    *   CREATOR:   External File Interface
2957    *   DATE:      30MAR14
2958    *   DESC:      Generated SAS Datastep Code
2959    *   TEMPLATE SOURCE:  (None Specified.)
2960    ***********************************************************************/
2961       data _null_;
2962       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
2963       %let _EFIREC_ = 0;     /* clear export record count macro variable */
2964       file 'D:\x\24NOV2012BYMACROV\RCons-Options-Expired.txt' delimiter='09'x DSD DROPOVER
2964 ! lrecl=32767;
2965       if _n_ = 1 then        /* write column names or labels */
2966        do;
2967          put
2968             "Week"
2969          '09'x
2970             "BAN"
2971          '09'x
2972             "SUBSCRIBER_NO"
2973          '09'x
2974             "BusSize"
2975          '09'x
2976             "PRODUCT_TYPE"
2977          '09'x
2978             "SOC"
2979          '09'x
2980             "SUBSCRIBER_LOOKUP_ID"
2981          '09'x
2982             "SOC_SEQ_NO"
2983          '09'x
2984             "SOC_VER_NO"
2985          '09'x
2986             "SOC_LEVEL_CODE"
2987          '09'x
2988             "EFFECTIVE_DATE"
2989          '09'x
2990             "EXPIRATION_DATE"
2991          '09'x
2992             "EFFECTIVE_ISSUE_DATE"
2993          '09'x
2994             "EXPIRATION_ISSUE_DATE"
2995          '09'x
2996             "CHANNEL_ID"
2997          '09'x
2998             "SPLIT_DEALER_CODE"
2999          '09'x
3000             "SERVICE_TYPE"
3001          '09'x
3002             "REL_SOC"
3003          '09'x
3004             "REL_SOC_SEQ_NO"
3005          '09'x
3006             "DEPENDS_ON_SOC"
3007          '09'x
3008             "NIN1_IND"
3009          '09'x
3010             "PARTITION_IND"
3011          '09'x
3012             "USER_ID"
3013          '09'x
3014             "SYS_CREATION_DATE"
3015          '09'x
3016             "SYS_UPDATE_DATE"
3017          '09'x
3018             "FRANCHISE_ELIGIBILITY"
3019          '09'x
3020             "START_COMMIT_DATE"
3021          '09'x
3022             "END_COMMIT_DATE"
3023          '09'x
3024             "PENALTY_AMT"
3025          '09'x
3026             "WAIVE_RSN"
3027          '09'x
3028             "WAIVE_OPER_ID"
3029          '09'x
3030             "RC_WAIVER_CODE"
3031          '09'x
3032             "RC_WAIVER_EFF_DATE"
3033          '09'x
3034             "RC_WAIVER_EXPR_DATE"
3035          '09'x
3036             "RC_WAIVER_RSN"
3037          '09'x
3038             "Type"
3039          '09'x
3040             "SOC_DURATION"
3041          '09'x
3042             "SOC_DURATION_TYPE"
3043          '09'x
3044             "SOC_DESCRIPTION"
3045          '09'x
3046             "SERVICE_TYPE_SOC"
3047          '09'x
3048             "OptionEffDate"
3049          '09'x
3050             "OptionExpDate"
3051          '09'x
3052             "RATE_Orig"
3053          '09'x
3054             "SUSPENSION_AMOUNT"
3055          '09'x
3056             "SECONDARY_AMOUNT"
3057          '09'x
3058             "NbShareSubs"
3059          '09'x
3060             "TotSecAMT"
3061          '09'x
3062             "RATE"
3063          '09'x
3064             "Origin"
3065          '09'x
3066             "MeanRate"
3067          '09'x
3068             "RateCat"
3069          '09'x
3070             "OptionDevice"
3071          '09'x
3072             "DEP_SOC_RATE"
3073          '09'x
3074             "RATE_AS_REL_SOC"
3075          ;
3076        end;
3077      set  RWORK.OPTION_EXPIRED_RCONS   end=EFIEOD;
3078          format Week best12. ;
3079          format BAN 10. ;
3080          format SUBSCRIBER_NO $20. ;
3081          format BusSize $6. ;
3082          format PRODUCT_TYPE $1. ;
3083          format SOC $9. ;
3084          format SUBSCRIBER_LOOKUP_ID 20. ;
3085          format SOC_SEQ_NO 10. ;
3086          format SOC_VER_NO 10. ;
3087          format SOC_LEVEL_CODE $1. ;
3088          format EFFECTIVE_DATE datetime20. ;
3089          format EXPIRATION_DATE datetime20. ;
3090          format EFFECTIVE_ISSUE_DATE datetime20. ;
3091          format EXPIRATION_ISSUE_DATE datetime20. ;
3092          format CHANNEL_ID $5. ;
3093          format SPLIT_DEALER_CODE $5. ;
3094          format SERVICE_TYPE $1. ;
3095          format REL_SOC $9. ;
3096          format REL_SOC_SEQ_NO 10. ;
3097          format DEPENDS_ON_SOC $9. ;
3098          format NIN1_IND $1. ;
3099          format PARTITION_IND $1. ;
3100          format USER_ID 10. ;
3101          format SYS_CREATION_DATE datetime20. ;
3102          format SYS_UPDATE_DATE datetime20. ;
3103          format FRANCHISE_ELIGIBILITY $1. ;
3104          format START_COMMIT_DATE datetime20. ;
3105          format END_COMMIT_DATE datetime20. ;
3106          format PENALTY_AMT 11.2 ;
3107          format WAIVE_RSN $6. ;
3108          format WAIVE_OPER_ID 10. ;
3109          format RC_WAIVER_CODE $6. ;
3110          format RC_WAIVER_EFF_DATE datetime20. ;
3111          format RC_WAIVER_EXPR_DATE datetime20. ;
3112          format RC_WAIVER_RSN $6. ;
3113          format Type $3. ;
3114          format SOC_DURATION 4. ;
3115          format SOC_DURATION_TYPE $1. ;
3116          format SOC_DESCRIPTION $30. ;
3117          format SERVICE_TYPE_SOC $1. ;
3118          format OptionEffDate date9. ;
3119          format OptionExpDate date9. ;
3120          format RATE_Orig 11.2 ;
3121          format SUSPENSION_AMOUNT 11.2 ;
3122          format SECONDARY_AMOUNT 11.2 ;
3123          format NbShareSubs best12. ;
3124          format TotSecAMT best12. ;
3125          format RATE best12. ;
3126          format Origin $3. ;
3127          format MeanRate best12. ;
3128          format RateCat $2. ;
3129          format OptionDevice best12. ;
3130          format DEP_SOC_RATE best12. ;
3131          format RATE_AS_REL_SOC best12. ;
3132        do;
3133          EFIOUT + 1;
3134          put Week @;
3135          put BAN @;
3136          put SUBSCRIBER_NO $ @;
3137          put BusSize $ @;
3138          put PRODUCT_TYPE $ @;
3139          put SOC $ @;
3140          put SUBSCRIBER_LOOKUP_ID @;
3141          put SOC_SEQ_NO @;
3142          put SOC_VER_NO @;
3143          put SOC_LEVEL_CODE $ @;
3144          put EFFECTIVE_DATE @;
3145          put EXPIRATION_DATE @;
3146          put EFFECTIVE_ISSUE_DATE @;
3147          put EXPIRATION_ISSUE_DATE @;
3148          put CHANNEL_ID $ @;
3149          put SPLIT_DEALER_CODE $ @;
3150          put SERVICE_TYPE $ @;
3151          put REL_SOC $ @;
3152          put REL_SOC_SEQ_NO @;
3153          put DEPENDS_ON_SOC $ @;
3154          put NIN1_IND $ @;
3155          put PARTITION_IND $ @;
3156          put USER_ID @;
3157          put SYS_CREATION_DATE @;
3158          put SYS_UPDATE_DATE @;
3159          put FRANCHISE_ELIGIBILITY $ @;
3160          put START_COMMIT_DATE @;
3161          put END_COMMIT_DATE @;
3162          put PENALTY_AMT @;
3163          put WAIVE_RSN $ @;
3164          put WAIVE_OPER_ID @;
3165          put RC_WAIVER_CODE $ @;
3166          put RC_WAIVER_EFF_DATE @;
3167          put RC_WAIVER_EXPR_DATE @;
3168          put RC_WAIVER_RSN $ @;
3169          put Type $ @;
3170          put SOC_DURATION @;
3171          put SOC_DURATION_TYPE $ @;
3172          put SOC_DESCRIPTION $ @;
3173          put SERVICE_TYPE_SOC $ @;
3174          put OptionEffDate @;
3175          put OptionExpDate @;
3176          put RATE_Orig @;
3177          put SUSPENSION_AMOUNT @;
3178          put SECONDARY_AMOUNT @;
3179          put NbShareSubs @;
3180          put TotSecAMT @;
3181          put RATE @;
3182          put Origin $ @;
3183          put MeanRate @;
3184          put RateCat $ @;
3185          put OptionDevice @;
3186          put DEP_SOC_RATE @;
3187          put RATE_AS_REL_SOC ;
3188          ;
3189        end;
3190       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
3191       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
3192       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RCons-Options-Expired.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RCons-Options-Expired.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:04 o'cloc,
      Create Time=March 10, 2014 23:20:51 o'cloc

NOTE: 15300 records were written to the file 'D:\x\24NOV2012BYMACROV\RCons-Options-Expired.txt'.
      The minimum record length was 253.
      The maximum record length was 719.
NOTE: There were 15299 observations read from the data set RWORK.OPTION_EXPIRED_RCONS.
NOTE: DATA statement used (Total process time):
      real time           1.60 seconds
      cpu time            0.57 seconds


15299 records created in D:\x\24NOV2012BYMACROV\RCons-Options-Expired.txt from
RWORK.OPTION_EXPIRED_RCONS.


NOTE: "D:\x\24NOV2012BYMACROV\RCons-Options-Expired.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           23.06 seconds
      cpu time            0.61 seconds



3198    /**********************************************************************
3199    *   PRODUCT:   SAS
3200    *   VERSION:   9.2
3201    *   CREATOR:   External File Interface
3202    *   DATE:      30MAR14
3203    *   DESC:      Generated SAS Datastep Code
3204    *   TEMPLATE SOURCE:  (None Specified.)
3205    ***********************************************************************/
3206       data _null_;
3207       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
3208       %let _EFIREC_ = 0;     /* clear export record count macro variable */
3209       file 'D:\x\24NOV2012BYMACROV\RCons-Options-Started.txt' delimiter='09'x DSD DROPOVER
3209 ! lrecl=32767;
3210       if _n_ = 1 then        /* write column names or labels */
3211        do;
3212          put
3213             "Week"
3214          '09'x
3215             "BAN"
3216          '09'x
3217             "SUBSCRIBER_NO"
3218          '09'x
3219             "BusSize"
3220          '09'x
3221             "PRODUCT_TYPE"
3222          '09'x
3223             "SOC"
3224          '09'x
3225             "SUBSCRIBER_LOOKUP_ID"
3226          '09'x
3227             "SOC_SEQ_NO"
3228          '09'x
3229             "SOC_VER_NO"
3230          '09'x
3231             "SOC_LEVEL_CODE"
3232          '09'x
3233             "EFFECTIVE_DATE"
3234          '09'x
3235             "EXPIRATION_DATE"
3236          '09'x
3237             "EFFECTIVE_ISSUE_DATE"
3238          '09'x
3239             "EXPIRATION_ISSUE_DATE"
3240          '09'x
3241             "CHANNEL_ID"
3242          '09'x
3243             "SPLIT_DEALER_CODE"
3244          '09'x
3245             "SERVICE_TYPE"
3246          '09'x
3247             "REL_SOC"
3248          '09'x
3249             "REL_SOC_SEQ_NO"
3250          '09'x
3251             "DEPENDS_ON_SOC"
3252          '09'x
3253             "NIN1_IND"
3254          '09'x
3255             "PARTITION_IND"
3256          '09'x
3257             "USER_ID"
3258          '09'x
3259             "SYS_CREATION_DATE"
3260          '09'x
3261             "SYS_UPDATE_DATE"
3262          '09'x
3263             "FRANCHISE_ELIGIBILITY"
3264          '09'x
3265             "START_COMMIT_DATE"
3266          '09'x
3267             "END_COMMIT_DATE"
3268          '09'x
3269             "PENALTY_AMT"
3270          '09'x
3271             "WAIVE_RSN"
3272          '09'x
3273             "WAIVE_OPER_ID"
3274          '09'x
3275             "RC_WAIVER_CODE"
3276          '09'x
3277             "RC_WAIVER_EFF_DATE"
3278          '09'x
3279             "RC_WAIVER_EXPR_DATE"
3280          '09'x
3281             "RC_WAIVER_RSN"
3282          '09'x
3283             "Type"
3284          '09'x
3285             "SOC_DURATION"
3286          '09'x
3287             "SOC_DURATION_TYPE"
3288          '09'x
3289             "SOC_DESCRIPTION"
3290          '09'x
3291             "SERVICE_TYPE_SOC"
3292          '09'x
3293             "OptionEffDate"
3294          '09'x
3295             "OptionExpDate"
3296          '09'x
3297             "RATE_Orig"
3298          '09'x
3299             "SUSPENSION_AMOUNT"
3300          '09'x
3301             "SECONDARY_AMOUNT"
3302          '09'x
3303             "NbShareSubs"
3304          '09'x
3305             "TotSecAMT"
3306          '09'x
3307             "RATE"
3308          '09'x
3309             "Origin"
3310          '09'x
3311             "MeanRate"
3312          '09'x
3313             "RateCat"
3314          '09'x
3315             "OptionDevice"
3316          '09'x
3317             "DEP_SOC_RATE"
3318          '09'x
3319             "RATE_AS_REL_SOC"
3320          ;
3321        end;
3322      set  RWORK.OPTION_STARTED_RCONS   end=EFIEOD;
3323          format Week best12. ;
3324          format BAN 10. ;
3325          format SUBSCRIBER_NO $20. ;
3326          format BusSize $6. ;
3327          format PRODUCT_TYPE $1. ;
3328          format SOC $9. ;
3329          format SUBSCRIBER_LOOKUP_ID 20. ;
3330          format SOC_SEQ_NO 10. ;
3331          format SOC_VER_NO 10. ;
3332          format SOC_LEVEL_CODE $1. ;
3333          format EFFECTIVE_DATE datetime20. ;
3334          format EXPIRATION_DATE datetime20. ;
3335          format EFFECTIVE_ISSUE_DATE datetime20. ;
3336          format EXPIRATION_ISSUE_DATE datetime20. ;
3337          format CHANNEL_ID $5. ;
3338          format SPLIT_DEALER_CODE $5. ;
3339          format SERVICE_TYPE $1. ;
3340          format REL_SOC $9. ;
3341          format REL_SOC_SEQ_NO 10. ;
3342          format DEPENDS_ON_SOC $9. ;
3343          format NIN1_IND $1. ;
3344          format PARTITION_IND $1. ;
3345          format USER_ID 10. ;
3346          format SYS_CREATION_DATE datetime20. ;
3347          format SYS_UPDATE_DATE datetime20. ;
3348          format FRANCHISE_ELIGIBILITY $1. ;
3349          format START_COMMIT_DATE datetime20. ;
3350          format END_COMMIT_DATE datetime20. ;
3351          format PENALTY_AMT 11.2 ;
3352          format WAIVE_RSN $6. ;
3353          format WAIVE_OPER_ID 10. ;
3354          format RC_WAIVER_CODE $6. ;
3355          format RC_WAIVER_EFF_DATE datetime20. ;
3356          format RC_WAIVER_EXPR_DATE datetime20. ;
3357          format RC_WAIVER_RSN $6. ;
3358          format Type $3. ;
3359          format SOC_DURATION 4. ;
3360          format SOC_DURATION_TYPE $1. ;
3361          format SOC_DESCRIPTION $30. ;
3362          format SERVICE_TYPE_SOC $1. ;
3363          format OptionEffDate date9. ;
3364          format OptionExpDate date9. ;
3365          format RATE_Orig 11.2 ;
3366          format SUSPENSION_AMOUNT 11.2 ;
3367          format SECONDARY_AMOUNT 11.2 ;
3368          format NbShareSubs best12. ;
3369          format TotSecAMT best12. ;
3370          format RATE best12. ;
3371          format Origin $3. ;
3372          format MeanRate best12. ;
3373          format RateCat $2. ;
3374          format OptionDevice best12. ;
3375          format DEP_SOC_RATE best12. ;
3376          format RATE_AS_REL_SOC best12. ;
3377        do;
3378          EFIOUT + 1;
3379          put Week @;
3380          put BAN @;
3381          put SUBSCRIBER_NO $ @;
3382          put BusSize $ @;
3383          put PRODUCT_TYPE $ @;
3384          put SOC $ @;
3385          put SUBSCRIBER_LOOKUP_ID @;
3386          put SOC_SEQ_NO @;
3387          put SOC_VER_NO @;
3388          put SOC_LEVEL_CODE $ @;
3389          put EFFECTIVE_DATE @;
3390          put EXPIRATION_DATE @;
3391          put EFFECTIVE_ISSUE_DATE @;
3392          put EXPIRATION_ISSUE_DATE @;
3393          put CHANNEL_ID $ @;
3394          put SPLIT_DEALER_CODE $ @;
3395          put SERVICE_TYPE $ @;
3396          put REL_SOC $ @;
3397          put REL_SOC_SEQ_NO @;
3398          put DEPENDS_ON_SOC $ @;
3399          put NIN1_IND $ @;
3400          put PARTITION_IND $ @;
3401          put USER_ID @;
3402          put SYS_CREATION_DATE @;
3403          put SYS_UPDATE_DATE @;
3404          put FRANCHISE_ELIGIBILITY $ @;
3405          put START_COMMIT_DATE @;
3406          put END_COMMIT_DATE @;
3407          put PENALTY_AMT @;
3408          put WAIVE_RSN $ @;
3409          put WAIVE_OPER_ID @;
3410          put RC_WAIVER_CODE $ @;
3411          put RC_WAIVER_EFF_DATE @;
3412          put RC_WAIVER_EXPR_DATE @;
3413          put RC_WAIVER_RSN $ @;
3414          put Type $ @;
3415          put SOC_DURATION @;
3416          put SOC_DURATION_TYPE $ @;
3417          put SOC_DESCRIPTION $ @;
3418          put SERVICE_TYPE_SOC $ @;
3419          put OptionEffDate @;
3420          put OptionExpDate @;
3421          put RATE_Orig @;
3422          put SUSPENSION_AMOUNT @;
3423          put SECONDARY_AMOUNT @;
3424          put NbShareSubs @;
3425          put TotSecAMT @;
3426          put RATE @;
3427          put Origin $ @;
3428          put MeanRate @;
3429          put RateCat $ @;
3430          put OptionDevice @;
3431          put DEP_SOC_RATE @;
3432          put RATE_AS_REL_SOC ;
3433          ;
3434        end;
3435       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
3436       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
3437       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RCons-Options-Started.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RCons-Options-Started.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:20 o'cloc,
      Create Time=March 10, 2014 23:20:53 o'cloc

NOTE: 11003 records were written to the file 'D:\x\24NOV2012BYMACROV\RCons-Options-Started.txt'.
      The minimum record length was 220.
      The maximum record length was 719.
NOTE: There were 11002 observations read from the data set RWORK.OPTION_STARTED_RCONS.
NOTE: DATA statement used (Total process time):
      real time           1.18 seconds
      cpu time            0.31 seconds


11002 records created in D:\x\24NOV2012BYMACROV\RCons-Options-Started.txt from
RWORK.OPTION_STARTED_RCONS.


NOTE: "D:\x\24NOV2012BYMACROV\RCons-Options-Started.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           16.01 seconds
      cpu time            0.34 seconds



3443    /**********************************************************************
3444    *   PRODUCT:   SAS
3445    *   VERSION:   9.2
3446    *   CREATOR:   External File Interface
3447    *   DATE:      30MAR14
3448    *   DESC:      Generated SAS Datastep Code
3449    *   TEMPLATE SOURCE:  (None Specified.)
3450    ***********************************************************************/
3451       data _null_;
3452       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
3453       %let _EFIREC_ = 0;     /* clear export record count macro variable */
3454       file 'D:\x\24NOV2012BYMACROV\RCons-PlanSwap.txt' delimiter='09'x DSD DROPOVER lrecl=32767;
3455       if _n_ = 1 then        /* write column names or labels */
3456        do;
3457          put
3458             "SOCRate"
3459          '09'x
3460             "Post_SOCRate"
3461          '09'x
3462             "MSF_Cat"
3463          '09'x
3464             "BAN"
3465          '09'x
3466             "SUBSCRIBER_NO"
3467          '09'x
3468             "Pre_SOC"
3469          '09'x
3470             "Pre_SOC_EFFECTIVE_DATE"
3471          '09'x
3472             "Pre_SOC_SEQ_NO"
3473          '09'x
3474             "Pre_PRODUCT_TYPE"
3475          '09'x
3476             "Pre_SERVICE_TYPE"
3477          '09'x
3478             "Pre_MOST_RECENT_FLAG"
3479          '09'x
3480             "Pre_EFFECTIVE_DATE"
3481          '09'x
3482             "Pre_EXPIRATION_DATE"
3483          '09'x
3484             "Pre_EFFECTIVE_ISSUE_DATE"
3485          '09'x
3486             "Pre_EXPIRATION_ISSUE_DATE"
3487          '09'x
3488             "Pre_CHANNEL_ID"
3489          '09'x
3490             "Pre_SYS_CREATION_DATE"
3491          '09'x
3492             "Pre_SYS_UPDATE_DATE"
3493          '09'x
3494             "Pre_FRANCHISE_ELIGIBILITY"
3495          '09'x
3496             "Pre_START_COMMIT_DATE"
3497          '09'x
3498             "Pre_END_COMMIT_DATE"
3499          '09'x
3500             "Pre_Type"
3501          '09'x
3502             "Pre_PPLAN_GROUP_DESC"
3503          '09'x
3504             "Pre_PPLAN_SERIES_TYPE_DESC"
3505          '09'x
3506             "Pre_SOC_DESCRIPTION"
3507          '09'x
3508             "Pre_SavePlan"
3509          '09'x
3510             "Pre_RATE_Orig"
3511          '09'x
3512             "SUSPENSION_AMOUNT"
3513          '09'x
3514             "Pre_SECONDARY_AMOUNT"
3515          '09'x
3516             "Pre_FRANCHISE_TP"
3517          '09'x
3518             "Week"
3519          '09'x
3520             "Pre_NbShareSubs"
3521          '09'x
3522             "Pre_TotSecAMT"
3523          '09'x
3524             "Pre_RATE"
3525          '09'x
3526             "Pre_Origin"
3527          '09'x
3528             "Post_SOC"
3529          '09'x
3530             "Post_SOC_EFFECTIVE_DATE"
3531          '09'x
3532             "Post_SOC_SEQ_NO"
3533          '09'x
3534             "Post_PRODUCT_TYPE"
3535          '09'x
3536             "Post_SERVICE_TYPE"
3537          '09'x
3538             "Post_MOST_RECENT_FLAG"
3539          '09'x
3540             "Post_EFFECTIVE_DATE"
3541          '09'x
3542             "Post_EXPIRATION_DATE"
3543          '09'x
3544             "Post_EFFECTIVE_ISSUE_DATE"
3545          '09'x
3546             "Post_EXPIRATION_ISSUE_DATE"
3547          '09'x
3548             "Post_CHANNEL_ID"
3549          '09'x
3550             "Post_SYS_CREATION_DATE"
3551          '09'x
3552             "Post_SYS_UPDATE_DATE"
3553          '09'x
3554             "Post_FRANCHISE_ELIGIBILITY"
3555          '09'x
3556             "Post_START_COMMIT_DATE"
3557          '09'x
3558             "Post_END_COMMIT_DATE"
3559          '09'x
3560             "Post_Type"
3561          '09'x
3562             "Post_PPLAN_GROUP_DESC"
3563          '09'x
3564             "Post_PPLAN_SERIES_TYPE_DESC"
3565          '09'x
3566             "Post_SOC_DESCRIPTION"
3567          '09'x
3568             "Post_SavePlan"
3569          '09'x
3570             "Post_RATE_Orig"
3571          '09'x
3572             "Post_SECONDARY_AMOUNT"
3573          '09'x
3574             "Post_FRANCHISE_TP"
3575          '09'x
3576             "Post_NbShareSubs"
3577          '09'x
3578             "Post_TotSecAMT"
3579          '09'x
3580             "Post_RATE"
3581          '09'x
3582             "Post_Origin"
3583          '09'x
3584             "PARTY_ID"
3585          '09'x
3586             "BRAND"
3587          '09'x
3588             "REGION_Cust_Segm"
3589          '09'x
3590             "ACCOUNT_TYPE"
3591          '09'x
3592             "ACCOUNT_SUB_TYPE"
3593          '09'x
3594             "DEACT_REASON_CODE"
3595          '09'x
3596             "SEGMENT_ID"
3597          '09'x
3598             "SEGMENT_DESC_ENG"
3599          '09'x
3600             "SEGMENT_DESC_FR"
3601          '09'x
3602             "EMPLOYEES"
3603          '09'x
3604             "SUB_STATUS_Cust_Segm"
3605          '09'x
3606             "PRICE_PLAN"
3607          '09'x
3608             "PPLAN_SERIES_TYPE"
3609          '09'x
3610             "COMPANY_CODE"
3611          '09'x
3612             "PRODUCT_TYPE"
3613          '09'x
3614             "CUSTGRP"
3615          '09'x
3616             "CUSTTYPE"
3617          '09'x
3618             "MSDTYPE"
3619          '09'x
3620             "SEG_GROUP"
3621          '09'x
3622             "SEG_SUB_GROUP"
3623          '09'x
3624             "ACCTYPE"
3625          '09'x
3626             "DEACT_REASON_CD"
3627          '09'x
3628             "SUB_STATUS_Subs"
3629          '09'x
3630             "SUB_STATUS_LAST_ACT"
3631          '09'x
3632             "PRODUCT_TYPE_Subs"
3633          '09'x
3634             "PRICE_PLAN_Subs"
3635          '09'x
3636             "SOC_EFFECTIVE_DATE"
3637          '09'x
3638             "FRANCHISE_TP"
3639          '09'x
3640             "MSID"
3641          '09'x
3642             "InitActDate"
3643          '09'x
3644             "DeactDate"
3645          '09'x
3646             "CommitStartDate"
3647          '09'x
3648             "CommitEndDate"
3649          '09'x
3650             "ACCTYPE_Subs"
3651          '09'x
3652             "Contract"
3653          '09'x
3654             "Ave3MthChurn"
3655          '09'x
3656             "LeftContDur"
3657          '09'x
3658             "ExpTenLeftCont"
3659          '09'x
3660             "CumChurnLeftCon"
3661          '09'x
3662             "PlanCost"
3663          '09'x
3664             "BusSize"
3665          '09'x
3666             "FootPrint"
3667          '09'x
3668             "TransactionDate"
3669          '09'x
3670             "MinTransactionDate"
3671          '09'x
3672             "SaveContract"
3673          '09'x
3674             "CSR_ID"
3675          '09'x
3676             "IPTV"
3677          ;
3678        end;
3679      set  RWORK.WEEK_SAVE_LAST_ROGERS_F   end=EFIEOD;
3680          format SOCRate $45. ;
3681          format Post_SOCRate $40. ;
3682          format MSF_Cat $20. ;
3683          format BAN 10. ;
3684          format SUBSCRIBER_NO $20. ;
3685          format Pre_SOC $9. ;
3686          format Pre_SOC_EFFECTIVE_DATE datetime20. ;
3687          format Pre_SOC_SEQ_NO 10. ;
3688          format Pre_PRODUCT_TYPE $1. ;
3689          format Pre_SERVICE_TYPE $1. ;
3690          format Pre_MOST_RECENT_FLAG $1. ;
3691          format Pre_EFFECTIVE_DATE datetime20. ;
3692          format Pre_EXPIRATION_DATE datetime20. ;
3693          format Pre_EFFECTIVE_ISSUE_DATE datetime20. ;
3694          format Pre_EXPIRATION_ISSUE_DATE datetime20. ;
3695          format Pre_CHANNEL_ID $5. ;
3696          format Pre_SYS_CREATION_DATE datetime20. ;
3697          format Pre_SYS_UPDATE_DATE datetime20. ;
3698          format Pre_FRANCHISE_ELIGIBILITY $1. ;
3699          format Pre_START_COMMIT_DATE datetime20. ;
3700          format Pre_END_COMMIT_DATE datetime20. ;
3701          format Pre_Type $7. ;
3702          format Pre_PPLAN_GROUP_DESC $50. ;
3703          format Pre_PPLAN_SERIES_TYPE_DESC $30. ;
3704          format Pre_SOC_DESCRIPTION $30. ;
3705          format Pre_SavePlan $3. ;
3706          format Pre_RATE_Orig 11.2 ;
3707          format SUSPENSION_AMOUNT 11.2 ;
3708          format Pre_SECONDARY_AMOUNT 11.2 ;
3709          format Pre_FRANCHISE_TP $1. ;
3710          format Week best12. ;
3711          format Pre_NbShareSubs best12. ;
3712          format Pre_TotSecAMT best12. ;
3713          format Pre_RATE best12. ;
3714          format Pre_Origin $3. ;
3715          format Post_SOC $9. ;
3716          format Post_SOC_EFFECTIVE_DATE datetime20. ;
3717          format Post_SOC_SEQ_NO 10. ;
3718          format Post_PRODUCT_TYPE $1. ;
3719          format Post_SERVICE_TYPE $1. ;
3720          format Post_MOST_RECENT_FLAG $1. ;
3721          format Post_EFFECTIVE_DATE datetime20. ;
3722          format Post_EXPIRATION_DATE datetime20. ;
3723          format Post_EFFECTIVE_ISSUE_DATE datetime20. ;
3724          format Post_EXPIRATION_ISSUE_DATE datetime20. ;
3725          format Post_CHANNEL_ID $5. ;
3726          format Post_SYS_CREATION_DATE datetime20. ;
3727          format Post_SYS_UPDATE_DATE datetime20. ;
3728          format Post_FRANCHISE_ELIGIBILITY $1. ;
3729          format Post_START_COMMIT_DATE datetime20. ;
3730          format Post_END_COMMIT_DATE datetime20. ;
3731          format Post_Type $7. ;
3732          format Post_PPLAN_GROUP_DESC $50. ;
3733          format Post_PPLAN_SERIES_TYPE_DESC $30. ;
3734          format Post_SOC_DESCRIPTION $30. ;
3735          format Post_SavePlan $3. ;
3736          format Post_RATE_Orig 11.2 ;
3737          format Post_SECONDARY_AMOUNT 11.2 ;
3738          format Post_FRANCHISE_TP $1. ;
3739          format Post_NbShareSubs best12. ;
3740          format Post_TotSecAMT best12. ;
3741          format Post_RATE best12. ;
3742          format Post_Origin $3. ;
3743          format PARTY_ID best12. ;
3744          format BRAND $1. ;
3745          format REGION_Cust_Segm $2. ;
3746          format ACCOUNT_TYPE $1. ;
3747          format ACCOUNT_SUB_TYPE $1. ;
3748          format DEACT_REASON_CODE $4. ;
3749          format SEGMENT_ID best12. ;
3750          format SEGMENT_DESC_ENG $50. ;
3751          format SEGMENT_DESC_FR $50. ;
3752          format EMPLOYEES best12. ;
3753          format SUB_STATUS_Cust_Segm $1. ;
3754          format PRICE_PLAN $9. ;
3755          format PPLAN_SERIES_TYPE 3. ;
3756          format COMPANY_CODE $9. ;
3757          format PRODUCT_TYPE $1. ;
3758          format CUSTGRP $10. ;
3759          format CUSTTYPE $3. ;
3760          format MSDTYPE $9. ;
3761          format SEG_GROUP $10. ;
3762          format SEG_SUB_GROUP $10. ;
3763          format ACCTYPE $2. ;
3764          format DEACT_REASON_CD $4. ;
3765          format SUB_STATUS_Subs $1. ;
3766          format SUB_STATUS_LAST_ACT $3. ;
3767          format PRODUCT_TYPE_Subs $1. ;
3768          format PRICE_PLAN_Subs $9. ;
3769          format SOC_EFFECTIVE_DATE datetime20. ;
3770          format FRANCHISE_TP $1. ;
3771          format MSID 9. ;
3772          format InitActDate date9. ;
3773          format DeactDate date9. ;
3774          format CommitStartDate date9. ;
3775          format CommitEndDate date9. ;
3776          format ACCTYPE_Subs $2. ;
3777          format Contract $1. ;
3778          format Ave3MthChurn best12. ;
3779          format LeftContDur best12. ;
3780          format ExpTenLeftCont best12. ;
3781          format CumChurnLeftCon best12. ;
3782          format PlanCost best12. ;
3783          format BusSize $6. ;
3784          format FootPrint $1. ;
3785          format TransactionDate date9. ;
3786          format MinTransactionDate date9. ;
3787          format SaveContract $1. ;
3788          format CSR_ID $20. ;
3789          format IPTV $1. ;
3790        do;
3791          EFIOUT + 1;
3792          put SOCRate $ @;
3793          put Post_SOCRate $ @;
3794          put MSF_Cat $ @;
3795          put BAN @;
3796          put SUBSCRIBER_NO $ @;
3797          put Pre_SOC $ @;
3798          put Pre_SOC_EFFECTIVE_DATE @;
3799          put Pre_SOC_SEQ_NO @;
3800          put Pre_PRODUCT_TYPE $ @;
3801          put Pre_SERVICE_TYPE $ @;
3802          put Pre_MOST_RECENT_FLAG $ @;
3803          put Pre_EFFECTIVE_DATE @;
3804          put Pre_EXPIRATION_DATE @;
3805          put Pre_EFFECTIVE_ISSUE_DATE @;
3806          put Pre_EXPIRATION_ISSUE_DATE @;
3807          put Pre_CHANNEL_ID $ @;
3808          put Pre_SYS_CREATION_DATE @;
3809          put Pre_SYS_UPDATE_DATE @;
3810          put Pre_FRANCHISE_ELIGIBILITY $ @;
3811          put Pre_START_COMMIT_DATE @;
3812          put Pre_END_COMMIT_DATE @;
3813          put Pre_Type $ @;
3814          put Pre_PPLAN_GROUP_DESC $ @;
3815          put Pre_PPLAN_SERIES_TYPE_DESC $ @;
3816          put Pre_SOC_DESCRIPTION $ @;
3817          put Pre_SavePlan $ @;
3818          put Pre_RATE_Orig @;
3819          put SUSPENSION_AMOUNT @;
3820          put Pre_SECONDARY_AMOUNT @;
3821          put Pre_FRANCHISE_TP $ @;
3822          put Week @;
3823          put Pre_NbShareSubs @;
3824          put Pre_TotSecAMT @;
3825          put Pre_RATE @;
3826          put Pre_Origin $ @;
3827          put Post_SOC $ @;
3828          put Post_SOC_EFFECTIVE_DATE @;
3829          put Post_SOC_SEQ_NO @;
3830          put Post_PRODUCT_TYPE $ @;
3831          put Post_SERVICE_TYPE $ @;
3832          put Post_MOST_RECENT_FLAG $ @;
3833          put Post_EFFECTIVE_DATE @;
3834          put Post_EXPIRATION_DATE @;
3835          put Post_EFFECTIVE_ISSUE_DATE @;
3836          put Post_EXPIRATION_ISSUE_DATE @;
3837          put Post_CHANNEL_ID $ @;
3838          put Post_SYS_CREATION_DATE @;
3839          put Post_SYS_UPDATE_DATE @;
3840          put Post_FRANCHISE_ELIGIBILITY $ @;
3841          put Post_START_COMMIT_DATE @;
3842          put Post_END_COMMIT_DATE @;
3843          put Post_Type $ @;
3844          put Post_PPLAN_GROUP_DESC $ @;
3845          put Post_PPLAN_SERIES_TYPE_DESC $ @;
3846          put Post_SOC_DESCRIPTION $ @;
3847          put Post_SavePlan $ @;
3848          put Post_RATE_Orig @;
3849          put Post_SECONDARY_AMOUNT @;
3850          put Post_FRANCHISE_TP $ @;
3851          put Post_NbShareSubs @;
3852          put Post_TotSecAMT @;
3853          put Post_RATE @;
3854          put Post_Origin $ @;
3855          put PARTY_ID @;
3856          put BRAND $ @;
3857          put REGION_Cust_Segm $ @;
3858          put ACCOUNT_TYPE $ @;
3859          put ACCOUNT_SUB_TYPE $ @;
3860          put DEACT_REASON_CODE $ @;
3861          put SEGMENT_ID @;
3862          put SEGMENT_DESC_ENG $ @;
3863          put SEGMENT_DESC_FR $ @;
3864          put EMPLOYEES @;
3865          put SUB_STATUS_Cust_Segm $ @;
3866          put PRICE_PLAN $ @;
3867          put PPLAN_SERIES_TYPE @;
3868          put COMPANY_CODE $ @;
3869          put PRODUCT_TYPE $ @;
3870          put CUSTGRP $ @;
3871          put CUSTTYPE $ @;
3872          put MSDTYPE $ @;
3873          put SEG_GROUP $ @;
3874          put SEG_SUB_GROUP $ @;
3875          put ACCTYPE $ @;
3876          put DEACT_REASON_CD $ @;
3877          put SUB_STATUS_Subs $ @;
3878          put SUB_STATUS_LAST_ACT $ @;
3879          put PRODUCT_TYPE_Subs $ @;
3880          put PRICE_PLAN_Subs $ @;
3881          put SOC_EFFECTIVE_DATE @;
3882          put FRANCHISE_TP $ @;
3883          put MSID @;
3884          put InitActDate @;
3885          put DeactDate @;
3886          put CommitStartDate @;
3887          put CommitEndDate @;
3888          put ACCTYPE_Subs $ @;
3889          put Contract $ @;
3890          put Ave3MthChurn @;
3891          put LeftContDur @;
3892          put ExpTenLeftCont @;
3893          put CumChurnLeftCon @;
3894          put PlanCost @;
3895          put BusSize $ @;
3896          put FootPrint $ @;
3897          put TransactionDate @;
3898          put MinTransactionDate @;
3899          put SaveContract $ @;
3900          put CSR_ID $ @;
3901          put IPTV $ ;
3902          ;
3903        end;
3904       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
3905       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
3906       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RCons-PlanSwap.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RCons-PlanSwap.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:28 o'cloc,
      Create Time=March 10, 2014 23:20:56 o'cloc

NOTE: 1372 records were written to the file 'D:\x\24NOV2012BYMACROV\RCons-PlanSwap.txt'.
      The minimum record length was 765.
      The maximum record length was 1720.
NOTE: There were 1371 observations read from the data set RWORK.WEEK_SAVE_LAST_ROGERS_F.
NOTE: DATA statement used (Total process time):
      real time           0.68 seconds
      cpu time            0.07 seconds


1371 records created in D:\x\24NOV2012BYMACROV\RCons-PlanSwap.txt from RWORK.WEEK_SAVE_LAST_ROGERS_F.


NOTE: "D:\x\24NOV2012BYMACROV\RCons-PlanSwap.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           6.87 seconds
      cpu time            0.14 seconds



3912    /**********************************************************************
3913    *   PRODUCT:   SAS
3914    *   VERSION:   9.2
3915    *   CREATOR:   External File Interface
3916    *   DATE:      30MAR14
3917    *   DESC:      Generated SAS Datastep Code
3918    *   TEMPLATE SOURCE:  (None Specified.)
3919    ***********************************************************************/
3920       data _null_;
3921       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
3922       %let _EFIREC_ = 0;     /* clear export record count macro variable */
3923       file 'D:\x\24NOV2012BYMACROV\RCons-HUP.txt' delimiter='09'x DSD DROPOVER lrecl=32767;
3924       if _n_ = 1 then        /* write column names or labels */
3925        do;
3926          put
3927             "BAN"
3928          '09'x
3929             "SUBSCRIBER_NO"
3930          '09'x
3931             "OPERATOR_ID"
3932          '09'x
3933             "OLD_IMEI"
3934          '09'x
3935             "NEW_IMEI"
3936          '09'x
3937             "ADMINISTRATION_CHG"
3938          '09'x
3939             "HARDWARE_CHG_20120722"
3940          '09'x
3941             "PRE_HUP_CHARGE"
3942          '09'x
3943             "HVT"
3944          '09'x
3945             "LOW_DEALER_COST"
3946          '09'x
3947             "HIGH_DEALER_COST"
3948          '09'x
3949             "DEALER_CODE"
3950          '09'x
3951             "SRC_CHANNEL"
3952          '09'x
3953             "HUP_TYPE"
3954          '09'x
3955             "HUP_REQUEST_DATE"
3956          '09'x
3957             "HUP_TIER"
3958          '09'x
3959             "NEW_COMMIT_START_DATE"
3960          '09'x
3961             "NEW_COMMIT_END_DATE"
3962          '09'x
3963             "FIDO_DLRS"
3964          '09'x
3965             "REBATE_AMT"
3966          '09'x
3967             "REBATE_AMT_2"
3968          '09'x
3969             "REBATE_AMT_3"
3970          '09'x
3971             "SU_REASON_CODE"
3972          '09'x
3973             "HUP_STATUS_DATE"
3974          '09'x
3975             "EMPLOYEE_ID"
3976          '09'x
3977             "OPERATOR_ID_ORIG"
3978          '09'x
3979             "SWAP_REASON"
3980          '09'x
3981             "SWAP_USER_ID"
3982          '09'x
3983             "SWAP_REQ_IMEI_MODEL"
3984          '09'x
3985             "SUBSIDIZED_IND"
3986          '09'x
3987             "SUBSIDIZED_ITEM_FEE"
3988          '09'x
3989             "FRANCHISE_TP"
3990          '09'x
3991             "HARDWARE_CHG"
3992          '09'x
3993             "SEG_SUB_GROUP"
3994          '09'x
3995             "ACCTYPE"
3996          '09'x
3997             "Week"
3998          '09'x
3999             "HIGH_LOW_DEALER_COST"
4000          '09'x
4001             "HUPCost"
4002          '09'x
4003             "BusSize"
4004          '09'x
4005             "FootPrint"
4006          '09'x
4007             "TransactionDate"
4008          '09'x
4009             "MinTransactionDate"
4010          '09'x
4011             "SaveContract"
4012          '09'x
4013             "CSR_ID"
4014          '09'x
4015             "TERM"
4016          '09'x
4017             "SOC"
4018          '09'x
4019             "SOC_DESCRIPTION"
4020          '09'x
4021             "RATE"
4022          '09'x
4023             "DataOption"
4024          '09'x
4025             "PRICE_A"
4026          '09'x
4027             "PRICE_V"
4028          '09'x
4029             "HUPCost_Old"
4030          '09'x
4031             "IPTV"
4032          ;
4033        end;
4034      set  RWORK.WEEK_HUP_LAST_ROGERS_F   end=EFIEOD;
4035          format BAN 10. ;
4036          format SUBSCRIBER_NO $20. ;
4037          format OPERATOR_ID 10. ;
4038          format OLD_IMEI $20. ;
4039          format NEW_IMEI $20. ;
4040          format ADMINISTRATION_CHG 11.2 ;
4041          format HARDWARE_CHG_20120722 11.2 ;
4042          format PRE_HUP_CHARGE 11.2 ;
4043          format HVT $10. ;
4044          format LOW_DEALER_COST 11.2 ;
4045          format HIGH_DEALER_COST 11.2 ;
4046          format DEALER_CODE $5. ;
4047          format SRC_CHANNEL $1. ;
4048          format HUP_TYPE $1. ;
4049          format HUP_REQUEST_DATE datetime20. ;
4050          format HUP_TIER $10. ;
4051          format NEW_COMMIT_START_DATE datetime20. ;
4052          format NEW_COMMIT_END_DATE datetime20. ;
4053          format FIDO_DLRS 11.2 ;
4054          format REBATE_AMT 11.2 ;
4055          format REBATE_AMT_2 11.2 ;
4056          format REBATE_AMT_3 11.2 ;
4057          format SU_REASON_CODE $4. ;
4058          format HUP_STATUS_DATE datetime20. ;
4059          format EMPLOYEE_ID $20. ;
4060          format OPERATOR_ID_ORIG 10. ;
4061          format SWAP_REASON $4. ;
4062          format SWAP_USER_ID 10. ;
4063          format SWAP_REQ_IMEI_MODEL $30. ;
4064          format SUBSIDIZED_IND $1. ;
4065          format SUBSIDIZED_ITEM_FEE 11.2 ;
4066          format FRANCHISE_TP $1. ;
4067          format HARDWARE_CHG best12. ;
4068          format SEG_SUB_GROUP $10. ;
4069          format ACCTYPE $2. ;
4070          format Week best12. ;
4071          format HIGH_LOW_DEALER_COST best12. ;
4072          format HUPCost best12. ;
4073          format BusSize $6. ;
4074          format FootPrint $1. ;
4075          format TransactionDate date9. ;
4076          format MinTransactionDate date9. ;
4077          format SaveContract $1. ;
4078          format CSR_ID $20. ;
4079          format TERM 4. ;
4080          format SOC $9. ;
4081          format SOC_DESCRIPTION $30. ;
4082          format RATE best12. ;
4083          format DataOption $1. ;
4084          format PRICE_A 11.2 ;
4085          format PRICE_V 11.2 ;
4086          format HUPCost_Old best12. ;
4087          format IPTV $1. ;
4088        do;
4089          EFIOUT + 1;
4090          put BAN @;
4091          put SUBSCRIBER_NO $ @;
4092          put OPERATOR_ID @;
4093          put OLD_IMEI $ @;
4094          put NEW_IMEI $ @;
4095          put ADMINISTRATION_CHG @;
4096          put HARDWARE_CHG_20120722 @;
4097          put PRE_HUP_CHARGE @;
4098          put HVT $ @;
4099          put LOW_DEALER_COST @;
4100          put HIGH_DEALER_COST @;
4101          put DEALER_CODE $ @;
4102          put SRC_CHANNEL $ @;
4103          put HUP_TYPE $ @;
4104          put HUP_REQUEST_DATE @;
4105          put HUP_TIER $ @;
4106          put NEW_COMMIT_START_DATE @;
4107          put NEW_COMMIT_END_DATE @;
4108          put FIDO_DLRS @;
4109          put REBATE_AMT @;
4110          put REBATE_AMT_2 @;
4111          put REBATE_AMT_3 @;
4112          put SU_REASON_CODE $ @;
4113          put HUP_STATUS_DATE @;
4114          put EMPLOYEE_ID $ @;
4115          put OPERATOR_ID_ORIG @;
4116          put SWAP_REASON $ @;
4117          put SWAP_USER_ID @;
4118          put SWAP_REQ_IMEI_MODEL $ @;
4119          put SUBSIDIZED_IND $ @;
4120          put SUBSIDIZED_ITEM_FEE @;
4121          put FRANCHISE_TP $ @;
4122          put HARDWARE_CHG @;
4123          put SEG_SUB_GROUP $ @;
4124          put ACCTYPE $ @;
4125          put Week @;
4126          put HIGH_LOW_DEALER_COST @;
4127          put HUPCost @;
4128          put BusSize $ @;
4129          put FootPrint $ @;
4130          put TransactionDate @;
4131          put MinTransactionDate @;
4132          put SaveContract $ @;
4133          put CSR_ID $ @;
4134          put TERM @;
4135          put SOC $ @;
4136          put SOC_DESCRIPTION $ @;
4137          put RATE @;
4138          put DataOption $ @;
4139          put PRICE_A @;
4140          put PRICE_V @;
4141          put HUPCost_Old @;
4142          put IPTV $ ;
4143          ;
4144        end;
4145       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
4146       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
4147       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RCons-HUP.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RCons-HUP.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:30 o'cloc,
      Create Time=March 10, 2014 23:20:57 o'cloc

NOTE: 726 records were written to the file 'D:\x\24NOV2012BYMACROV\RCons-HUP.txt'.
      The minimum record length was 196.
      The maximum record length was 657.
NOTE: There were 725 observations read from the data set RWORK.WEEK_HUP_LAST_ROGERS_F.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.06 seconds


725 records created in D:\x\24NOV2012BYMACROV\RCons-HUP.txt from RWORK.WEEK_HUP_LAST_ROGERS_F.


NOTE: "D:\x\24NOV2012BYMACROV\RCons-HUP.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           1.62 seconds
      cpu time            0.12 seconds



4153    /**********************************************************************
4154    *   PRODUCT:   SAS
4155    *   VERSION:   9.2
4156    *   CREATOR:   External File Interface
4157    *   DATE:      30MAR14
4158    *   DESC:      Generated SAS Datastep Code
4159    *   TEMPLATE SOURCE:  (None Specified.)
4160    ***********************************************************************/
4161       data _null_;
4162       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
4163       %let _EFIREC_ = 0;     /* clear export record count macro variable */
4164       file 'D:\x\24NOV2012BYMACROV\RCons-Options-Balance.txt' delimiter='09'x DSD DROPOVER
4164 ! lrecl=32767;
4165       if _n_ = 1 then        /* write column names or labels */
4166        do;
4167          put
4168             "SOCRate"
4169          '09'x
4170             "Week"
4171          '09'x
4172             "BAN"
4173          '09'x
4174             "SUBSCRIBER_NO"
4175          '09'x
4176             "Segment"
4177          '09'x
4178             "MSF_Cat"
4179          '09'x
4180             "PreRATE_R"
4181          '09'x
4182             "PreRATE_T"
4183          '09'x
4184             "PreRATE_I"
4185          '09'x
4186             "PreRATE_D"
4187          '09'x
4188             "PosRATE_R"
4189          '09'x
4190             "PosRATE_D"
4191          '09'x
4192             "PosRATE_I"
4193          '09'x
4194             "PosRATE_T"
4195          '09'x
4196             "LastTransactionDate"
4197          '09'x
4198             "SaveContract"
4199          '09'x
4200             "BRAND"
4201          '09'x
4202             "SEG_SUB_GROUP"
4203          '09'x
4204             "PRICE_PLAN_Subs"
4205          '09'x
4206             "CommitStartDate"
4207          '09'x
4208             "CommitEndDate"
4209          '09'x
4210             "MinTransactionDate"
4211          '09'x
4212             "FootPrint"
4213          '09'x
4214             "PreTotal"
4215          '09'x
4216             "PosTotal"
4217          '09'x
4218             "PlanRate"
4219          '09'x
4220             "SOC"
4221          '09'x
4222             "SOC_DESCRIPTION"
4223          '09'x
4224             "RATE"
4225          '09'x
4226             "SECONDARY_AMOUNT"
4227          '09'x
4228             "Contract"
4229          '09'x
4230             "ExpTenLeftCont"
4231          '09'x
4232             "PrePosChange"
4233          '09'x
4234             "OptionCost"
4235          '09'x
4236             "BusSize"
4237          '09'x
4238             "TransactionDate"
4239          '09'x
4240             "CSR_ID"
4241          '09'x
4242             "IPTV"
4243          ;
4244        end;
4245      set  RWORK.WEEK_OPTION_LAST_ROGERS_F   end=EFIEOD;
4246          format SOCRate $45. ;
4247          format Week best12. ;
4248          format BAN 10. ;
4249          format SUBSCRIBER_NO $20. ;
4250          format Segment $15. ;
4251          format MSF_Cat $20. ;
4252          format PreRATE_R best12. ;
4253          format PreRATE_T best12. ;
4254          format PreRATE_I best12. ;
4255          format PreRATE_D best12. ;
4256          format PosRATE_R best12. ;
4257          format PosRATE_D best12. ;
4258          format PosRATE_I best12. ;
4259          format PosRATE_T best12. ;
4260          format LastTransactionDate date9. ;
4261          format SaveContract $1. ;
4262          format BRAND $1. ;
4263          format SEG_SUB_GROUP $10. ;
4264          format PRICE_PLAN_Subs $9. ;
4265          format CommitStartDate date9. ;
4266          format CommitEndDate date9. ;
4267          format MinTransactionDate date9. ;
4268          format FootPrint $1. ;
4269          format PreTotal best12. ;
4270          format PosTotal best12. ;
4271          format PlanRate $40. ;
4272          format SOC $9. ;
4273          format SOC_DESCRIPTION $30. ;
4274          format RATE 11.2 ;
4275          format SECONDARY_AMOUNT 11.2 ;
4276          format Contract $1. ;
4277          format ExpTenLeftCont best12. ;
4278          format PrePosChange best12. ;
4279          format OptionCost best12. ;
4280          format BusSize $6. ;
4281          format TransactionDate date9. ;
4282          format CSR_ID $20. ;
4283          format IPTV $1. ;
4284        do;
4285          EFIOUT + 1;
4286          put SOCRate $ @;
4287          put Week @;
4288          put BAN @;
4289          put SUBSCRIBER_NO $ @;
4290          put Segment $ @;
4291          put MSF_Cat $ @;
4292          put PreRATE_R @;
4293          put PreRATE_T @;
4294          put PreRATE_I @;
4295          put PreRATE_D @;
4296          put PosRATE_R @;
4297          put PosRATE_D @;
4298          put PosRATE_I @;
4299          put PosRATE_T @;
4300          put LastTransactionDate @;
4301          put SaveContract $ @;
4302          put BRAND $ @;
4303          put SEG_SUB_GROUP $ @;
4304          put PRICE_PLAN_Subs $ @;
4305          put CommitStartDate @;
4306          put CommitEndDate @;
4307          put MinTransactionDate @;
4308          put FootPrint $ @;
4309          put PreTotal @;
4310          put PosTotal @;
4311          put PlanRate $ @;
4312          put SOC $ @;
4313          put SOC_DESCRIPTION $ @;
4314          put RATE @;
4315          put SECONDARY_AMOUNT @;
4316          put Contract $ @;
4317          put ExpTenLeftCont @;
4318          put PrePosChange @;
4319          put OptionCost @;
4320          put BusSize $ @;
4321          put TransactionDate @;
4322          put CSR_ID $ @;
4323          put IPTV $ ;
4324          ;
4325        end;
4326       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
4327       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
4328       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RCons-Options-Balance.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RCons-Options-Balance.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:33 o'cloc,
      Create Time=March 10, 2014 23:20:58 o'cloc

NOTE: 2024 records were written to the file 'D:\x\24NOV2012BYMACROV\RCons-Options-Balance.txt'.
      The minimum record length was 260.
      The maximum record length was 407.
NOTE: There were 2023 observations read from the data set RWORK.WEEK_OPTION_LAST_ROGERS_F.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.07 seconds


2023 records created in D:\x\24NOV2012BYMACROV\RCons-Options-Balance.txt from
RWORK.WEEK_OPTION_LAST_ROGERS_F.


NOTE: "D:\x\24NOV2012BYMACROV\RCons-Options-Balance.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           3.84 seconds
      cpu time            0.17 seconds



4334    /**********************************************************************
4335    *   PRODUCT:   SAS
4336    *   VERSION:   9.2
4337    *   CREATOR:   External File Interface
4338    *   DATE:      30MAR14
4339    *   DESC:      Generated SAS Datastep Code
4340    *   TEMPLATE SOURCE:  (None Specified.)
4341    ***********************************************************************/
4342       data _null_;
4343       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
4344       %let _EFIREC_ = 0;     /* clear export record count macro variable */
4345       file 'D:\x\24NOV2012BYMACROV\RBus-Options-Expired.txt' delimiter='09'x DSD DROPOVER
4345 ! lrecl=32767;
4346       if _n_ = 1 then        /* write column names or labels */
4347        do;
4348          put
4349             "Week"
4350          '09'x
4351             "BAN"
4352          '09'x
4353             "SUBSCRIBER_NO"
4354          '09'x
4355             "BusSize"
4356          '09'x
4357             "PRODUCT_TYPE"
4358          '09'x
4359             "SOC"
4360          '09'x
4361             "SUBSCRIBER_LOOKUP_ID"
4362          '09'x
4363             "SOC_SEQ_NO"
4364          '09'x
4365             "SOC_VER_NO"
4366          '09'x
4367             "SOC_LEVEL_CODE"
4368          '09'x
4369             "EFFECTIVE_DATE"
4370          '09'x
4371             "EXPIRATION_DATE"
4372          '09'x
4373             "EFFECTIVE_ISSUE_DATE"
4374          '09'x
4375             "EXPIRATION_ISSUE_DATE"
4376          '09'x
4377             "CHANNEL_ID"
4378          '09'x
4379             "SPLIT_DEALER_CODE"
4380          '09'x
4381             "SERVICE_TYPE"
4382          '09'x
4383             "REL_SOC"
4384          '09'x
4385             "REL_SOC_SEQ_NO"
4386          '09'x
4387             "DEPENDS_ON_SOC"
4388          '09'x
4389             "NIN1_IND"
4390          '09'x
4391             "PARTITION_IND"
4392          '09'x
4393             "USER_ID"
4394          '09'x
4395             "SYS_CREATION_DATE"
4396          '09'x
4397             "SYS_UPDATE_DATE"
4398          '09'x
4399             "FRANCHISE_ELIGIBILITY"
4400          '09'x
4401             "START_COMMIT_DATE"
4402          '09'x
4403             "END_COMMIT_DATE"
4404          '09'x
4405             "PENALTY_AMT"
4406          '09'x
4407             "WAIVE_RSN"
4408          '09'x
4409             "WAIVE_OPER_ID"
4410          '09'x
4411             "RC_WAIVER_CODE"
4412          '09'x
4413             "RC_WAIVER_EFF_DATE"
4414          '09'x
4415             "RC_WAIVER_EXPR_DATE"
4416          '09'x
4417             "RC_WAIVER_RSN"
4418          '09'x
4419             "Type"
4420          '09'x
4421             "SOC_DURATION"
4422          '09'x
4423             "SOC_DURATION_TYPE"
4424          '09'x
4425             "SOC_DESCRIPTION"
4426          '09'x
4427             "SERVICE_TYPE_SOC"
4428          '09'x
4429             "OptionEffDate"
4430          '09'x
4431             "OptionExpDate"
4432          '09'x
4433             "RATE_Orig"
4434          '09'x
4435             "SUSPENSION_AMOUNT"
4436          '09'x
4437             "SECONDARY_AMOUNT"
4438          '09'x
4439             "NbShareSubs"
4440          '09'x
4441             "TotSecAMT"
4442          '09'x
4443             "RATE"
4444          '09'x
4445             "Origin"
4446          '09'x
4447             "MeanRate"
4448          '09'x
4449             "RateCat"
4450          '09'x
4451             "OptionDevice"
4452          '09'x
4453             "DEP_SOC_RATE"
4454          '09'x
4455             "RATE_AS_REL_SOC"
4456          ;
4457        end;
4458      set  RWORK.OPTION_EXPIRED_RBUS   end=EFIEOD;
4459          format Week best12. ;
4460          format BAN 10. ;
4461          format SUBSCRIBER_NO $20. ;
4462          format BusSize $6. ;
4463          format PRODUCT_TYPE $1. ;
4464          format SOC $9. ;
4465          format SUBSCRIBER_LOOKUP_ID 20. ;
4466          format SOC_SEQ_NO 10. ;
4467          format SOC_VER_NO 10. ;
4468          format SOC_LEVEL_CODE $1. ;
4469          format EFFECTIVE_DATE datetime20. ;
4470          format EXPIRATION_DATE datetime20. ;
4471          format EFFECTIVE_ISSUE_DATE datetime20. ;
4472          format EXPIRATION_ISSUE_DATE datetime20. ;
4473          format CHANNEL_ID $5. ;
4474          format SPLIT_DEALER_CODE $5. ;
4475          format SERVICE_TYPE $1. ;
4476          format REL_SOC $9. ;
4477          format REL_SOC_SEQ_NO 10. ;
4478          format DEPENDS_ON_SOC $9. ;
4479          format NIN1_IND $1. ;
4480          format PARTITION_IND $1. ;
4481          format USER_ID 10. ;
4482          format SYS_CREATION_DATE datetime20. ;
4483          format SYS_UPDATE_DATE datetime20. ;
4484          format FRANCHISE_ELIGIBILITY $1. ;
4485          format START_COMMIT_DATE datetime20. ;
4486          format END_COMMIT_DATE datetime20. ;
4487          format PENALTY_AMT 11.2 ;
4488          format WAIVE_RSN $6. ;
4489          format WAIVE_OPER_ID 10. ;
4490          format RC_WAIVER_CODE $6. ;
4491          format RC_WAIVER_EFF_DATE datetime20. ;
4492          format RC_WAIVER_EXPR_DATE datetime20. ;
4493          format RC_WAIVER_RSN $6. ;
4494          format Type $3. ;
4495          format SOC_DURATION 4. ;
4496          format SOC_DURATION_TYPE $1. ;
4497          format SOC_DESCRIPTION $30. ;
4498          format SERVICE_TYPE_SOC $1. ;
4499          format OptionEffDate date9. ;
4500          format OptionExpDate date9. ;
4501          format RATE_Orig 11.2 ;
4502          format SUSPENSION_AMOUNT 11.2 ;
4503          format SECONDARY_AMOUNT 11.2 ;
4504          format NbShareSubs best12. ;
4505          format TotSecAMT best12. ;
4506          format RATE best12. ;
4507          format Origin $3. ;
4508          format MeanRate best12. ;
4509          format RateCat $2. ;
4510          format OptionDevice best12. ;
4511          format DEP_SOC_RATE best12. ;
4512          format RATE_AS_REL_SOC best12. ;
4513        do;
4514          EFIOUT + 1;
4515          put Week @;
4516          put BAN @;
4517          put SUBSCRIBER_NO $ @;
4518          put BusSize $ @;
4519          put PRODUCT_TYPE $ @;
4520          put SOC $ @;
4521          put SUBSCRIBER_LOOKUP_ID @;
4522          put SOC_SEQ_NO @;
4523          put SOC_VER_NO @;
4524          put SOC_LEVEL_CODE $ @;
4525          put EFFECTIVE_DATE @;
4526          put EXPIRATION_DATE @;
4527          put EFFECTIVE_ISSUE_DATE @;
4528          put EXPIRATION_ISSUE_DATE @;
4529          put CHANNEL_ID $ @;
4530          put SPLIT_DEALER_CODE $ @;
4531          put SERVICE_TYPE $ @;
4532          put REL_SOC $ @;
4533          put REL_SOC_SEQ_NO @;
4534          put DEPENDS_ON_SOC $ @;
4535          put NIN1_IND $ @;
4536          put PARTITION_IND $ @;
4537          put USER_ID @;
4538          put SYS_CREATION_DATE @;
4539          put SYS_UPDATE_DATE @;
4540          put FRANCHISE_ELIGIBILITY $ @;
4541          put START_COMMIT_DATE @;
4542          put END_COMMIT_DATE @;
4543          put PENALTY_AMT @;
4544          put WAIVE_RSN $ @;
4545          put WAIVE_OPER_ID @;
4546          put RC_WAIVER_CODE $ @;
4547          put RC_WAIVER_EFF_DATE @;
4548          put RC_WAIVER_EXPR_DATE @;
4549          put RC_WAIVER_RSN $ @;
4550          put Type $ @;
4551          put SOC_DURATION @;
4552          put SOC_DURATION_TYPE $ @;
4553          put SOC_DESCRIPTION $ @;
4554          put SERVICE_TYPE_SOC $ @;
4555          put OptionEffDate @;
4556          put OptionExpDate @;
4557          put RATE_Orig @;
4558          put SUSPENSION_AMOUNT @;
4559          put SECONDARY_AMOUNT @;
4560          put NbShareSubs @;
4561          put TotSecAMT @;
4562          put RATE @;
4563          put Origin $ @;
4564          put MeanRate @;
4565          put RateCat $ @;
4566          put OptionDevice @;
4567          put DEP_SOC_RATE @;
4568          put RATE_AS_REL_SOC ;
4569          ;
4570        end;
4571       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
4572       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
4573       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RBus-Options-Expired.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RBus-Options-Expired.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:45 o'cloc,
      Create Time=March 10, 2014 23:20:58 o'cloc

NOTE: 8147 records were written to the file 'D:\x\24NOV2012BYMACROV\RBus-Options-Expired.txt'.
      The minimum record length was 254.
      The maximum record length was 719.
NOTE: There were 8146 observations read from the data set RWORK.OPTION_EXPIRED_RBUS.
NOTE: DATA statement used (Total process time):
      real time           0.89 seconds
      cpu time            0.40 seconds


8146 records created in D:\x\24NOV2012BYMACROV\RBus-Options-Expired.txt from
RWORK.OPTION_EXPIRED_RBUS.


NOTE: "D:\x\24NOV2012BYMACROV\RBus-Options-Expired.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           11.85 seconds
      cpu time            0.45 seconds



4579    /**********************************************************************
4580    *   PRODUCT:   SAS
4581    *   VERSION:   9.2
4582    *   CREATOR:   External File Interface
4583    *   DATE:      30MAR14
4584    *   DESC:      Generated SAS Datastep Code
4585    *   TEMPLATE SOURCE:  (None Specified.)
4586    ***********************************************************************/
4587       data _null_;
4588       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
4589       %let _EFIREC_ = 0;     /* clear export record count macro variable */
4590       file 'D:\x\24NOV2012BYMACROV\RBus-Options-Started.txt' delimiter='09'x DSD DROPOVER
4590 ! lrecl=32767;
4591       if _n_ = 1 then        /* write column names or labels */
4592        do;
4593          put
4594             "Week"
4595          '09'x
4596             "BAN"
4597          '09'x
4598             "SUBSCRIBER_NO"
4599          '09'x
4600             "BusSize"
4601          '09'x
4602             "PRODUCT_TYPE"
4603          '09'x
4604             "SOC"
4605          '09'x
4606             "SUBSCRIBER_LOOKUP_ID"
4607          '09'x
4608             "SOC_SEQ_NO"
4609          '09'x
4610             "SOC_VER_NO"
4611          '09'x
4612             "SOC_LEVEL_CODE"
4613          '09'x
4614             "EFFECTIVE_DATE"
4615          '09'x
4616             "EXPIRATION_DATE"
4617          '09'x
4618             "EFFECTIVE_ISSUE_DATE"
4619          '09'x
4620             "EXPIRATION_ISSUE_DATE"
4621          '09'x
4622             "CHANNEL_ID"
4623          '09'x
4624             "SPLIT_DEALER_CODE"
4625          '09'x
4626             "SERVICE_TYPE"
4627          '09'x
4628             "REL_SOC"
4629          '09'x
4630             "REL_SOC_SEQ_NO"
4631          '09'x
4632             "DEPENDS_ON_SOC"
4633          '09'x
4634             "NIN1_IND"
4635          '09'x
4636             "PARTITION_IND"
4637          '09'x
4638             "USER_ID"
4639          '09'x
4640             "SYS_CREATION_DATE"
4641          '09'x
4642             "SYS_UPDATE_DATE"
4643          '09'x
4644             "FRANCHISE_ELIGIBILITY"
4645          '09'x
4646             "START_COMMIT_DATE"
4647          '09'x
4648             "END_COMMIT_DATE"
4649          '09'x
4650             "PENALTY_AMT"
4651          '09'x
4652             "WAIVE_RSN"
4653          '09'x
4654             "WAIVE_OPER_ID"
4655          '09'x
4656             "RC_WAIVER_CODE"
4657          '09'x
4658             "RC_WAIVER_EFF_DATE"
4659          '09'x
4660             "RC_WAIVER_EXPR_DATE"
4661          '09'x
4662             "RC_WAIVER_RSN"
4663          '09'x
4664             "Type"
4665          '09'x
4666             "SOC_DURATION"
4667          '09'x
4668             "SOC_DURATION_TYPE"
4669          '09'x
4670             "SOC_DESCRIPTION"
4671          '09'x
4672             "SERVICE_TYPE_SOC"
4673          '09'x
4674             "OptionEffDate"
4675          '09'x
4676             "OptionExpDate"
4677          '09'x
4678             "RATE_Orig"
4679          '09'x
4680             "SUSPENSION_AMOUNT"
4681          '09'x
4682             "SECONDARY_AMOUNT"
4683          '09'x
4684             "NbShareSubs"
4685          '09'x
4686             "TotSecAMT"
4687          '09'x
4688             "RATE"
4689          '09'x
4690             "Origin"
4691          '09'x
4692             "MeanRate"
4693          '09'x
4694             "RateCat"
4695          '09'x
4696             "OptionDevice"
4697          '09'x
4698             "DEP_SOC_RATE"
4699          '09'x
4700             "RATE_AS_REL_SOC"
4701          ;
4702        end;
4703      set  RWORK.OPTION_STARTED_RBUS   end=EFIEOD;
4704          format Week best12. ;
4705          format BAN 10. ;
4706          format SUBSCRIBER_NO $20. ;
4707          format BusSize $6. ;
4708          format PRODUCT_TYPE $1. ;
4709          format SOC $9. ;
4710          format SUBSCRIBER_LOOKUP_ID 20. ;
4711          format SOC_SEQ_NO 10. ;
4712          format SOC_VER_NO 10. ;
4713          format SOC_LEVEL_CODE $1. ;
4714          format EFFECTIVE_DATE datetime20. ;
4715          format EXPIRATION_DATE datetime20. ;
4716          format EFFECTIVE_ISSUE_DATE datetime20. ;
4717          format EXPIRATION_ISSUE_DATE datetime20. ;
4718          format CHANNEL_ID $5. ;
4719          format SPLIT_DEALER_CODE $5. ;
4720          format SERVICE_TYPE $1. ;
4721          format REL_SOC $9. ;
4722          format REL_SOC_SEQ_NO 10. ;
4723          format DEPENDS_ON_SOC $9. ;
4724          format NIN1_IND $1. ;
4725          format PARTITION_IND $1. ;
4726          format USER_ID 10. ;
4727          format SYS_CREATION_DATE datetime20. ;
4728          format SYS_UPDATE_DATE datetime20. ;
4729          format FRANCHISE_ELIGIBILITY $1. ;
4730          format START_COMMIT_DATE datetime20. ;
4731          format END_COMMIT_DATE datetime20. ;
4732          format PENALTY_AMT 11.2 ;
4733          format WAIVE_RSN $6. ;
4734          format WAIVE_OPER_ID 10. ;
4735          format RC_WAIVER_CODE $6. ;
4736          format RC_WAIVER_EFF_DATE datetime20. ;
4737          format RC_WAIVER_EXPR_DATE datetime20. ;
4738          format RC_WAIVER_RSN $6. ;
4739          format Type $3. ;
4740          format SOC_DURATION 4. ;
4741          format SOC_DURATION_TYPE $1. ;
4742          format SOC_DESCRIPTION $30. ;
4743          format SERVICE_TYPE_SOC $1. ;
4744          format OptionEffDate date9. ;
4745          format OptionExpDate date9. ;
4746          format RATE_Orig 11.2 ;
4747          format SUSPENSION_AMOUNT 11.2 ;
4748          format SECONDARY_AMOUNT 11.2 ;
4749          format NbShareSubs best12. ;
4750          format TotSecAMT best12. ;
4751          format RATE best12. ;
4752          format Origin $3. ;
4753          format MeanRate best12. ;
4754          format RateCat $2. ;
4755          format OptionDevice best12. ;
4756          format DEP_SOC_RATE best12. ;
4757          format RATE_AS_REL_SOC best12. ;
4758        do;
4759          EFIOUT + 1;
4760          put Week @;
4761          put BAN @;
4762          put SUBSCRIBER_NO $ @;
4763          put BusSize $ @;
4764          put PRODUCT_TYPE $ @;
4765          put SOC $ @;
4766          put SUBSCRIBER_LOOKUP_ID @;
4767          put SOC_SEQ_NO @;
4768          put SOC_VER_NO @;
4769          put SOC_LEVEL_CODE $ @;
4770          put EFFECTIVE_DATE @;
4771          put EXPIRATION_DATE @;
4772          put EFFECTIVE_ISSUE_DATE @;
4773          put EXPIRATION_ISSUE_DATE @;
4774          put CHANNEL_ID $ @;
4775          put SPLIT_DEALER_CODE $ @;
4776          put SERVICE_TYPE $ @;
4777          put REL_SOC $ @;
4778          put REL_SOC_SEQ_NO @;
4779          put DEPENDS_ON_SOC $ @;
4780          put NIN1_IND $ @;
4781          put PARTITION_IND $ @;
4782          put USER_ID @;
4783          put SYS_CREATION_DATE @;
4784          put SYS_UPDATE_DATE @;
4785          put FRANCHISE_ELIGIBILITY $ @;
4786          put START_COMMIT_DATE @;
4787          put END_COMMIT_DATE @;
4788          put PENALTY_AMT @;
4789          put WAIVE_RSN $ @;
4790          put WAIVE_OPER_ID @;
4791          put RC_WAIVER_CODE $ @;
4792          put RC_WAIVER_EFF_DATE @;
4793          put RC_WAIVER_EXPR_DATE @;
4794          put RC_WAIVER_RSN $ @;
4795          put Type $ @;
4796          put SOC_DURATION @;
4797          put SOC_DURATION_TYPE $ @;
4798          put SOC_DESCRIPTION $ @;
4799          put SERVICE_TYPE_SOC $ @;
4800          put OptionEffDate @;
4801          put OptionExpDate @;
4802          put RATE_Orig @;
4803          put SUSPENSION_AMOUNT @;
4804          put SECONDARY_AMOUNT @;
4805          put NbShareSubs @;
4806          put TotSecAMT @;
4807          put RATE @;
4808          put Origin $ @;
4809          put MeanRate @;
4810          put RateCat $ @;
4811          put OptionDevice @;
4812          put DEP_SOC_RATE @;
4813          put RATE_AS_REL_SOC ;
4814          ;
4815        end;
4816       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
4817       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
4818       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RBus-Options-Started.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RBus-Options-Started.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:53 o'cloc,
      Create Time=March 10, 2014 23:21:00 o'cloc

NOTE: 6304 records were written to the file 'D:\x\24NOV2012BYMACROV\RBus-Options-Started.txt'.
      The minimum record length was 226.
      The maximum record length was 719.
NOTE: There were 6303 observations read from the data set RWORK.OPTION_STARTED_RBUS.
NOTE: DATA statement used (Total process time):
      real time           0.71 seconds
      cpu time            0.29 seconds


6303 records created in D:\x\24NOV2012BYMACROV\RBus-Options-Started.txt from
RWORK.OPTION_STARTED_RBUS.


NOTE: "D:\x\24NOV2012BYMACROV\RBus-Options-Started.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           8.12 seconds
      cpu time            0.32 seconds



4824    /**********************************************************************
4825    *   PRODUCT:   SAS
4826    *   VERSION:   9.2
4827    *   CREATOR:   External File Interface
4828    *   DATE:      30MAR14
4829    *   DESC:      Generated SAS Datastep Code
4830    *   TEMPLATE SOURCE:  (None Specified.)
4831    ***********************************************************************/
4832       data _null_;
4833       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
4834       %let _EFIREC_ = 0;     /* clear export record count macro variable */
4835       file 'D:\x\24NOV2012BYMACROV\RBus-PlanSwap.txt' delimiter='09'x DSD DROPOVER lrecl=32767;
4836       if _n_ = 1 then        /* write column names or labels */
4837        do;
4838          put
4839             "SOCRate"
4840          '09'x
4841             "Post_SOCRate"
4842          '09'x
4843             "MSF_Cat"
4844          '09'x
4845             "BAN"
4846          '09'x
4847             "SUBSCRIBER_NO"
4848          '09'x
4849             "Pre_SOC"
4850          '09'x
4851             "Pre_SOC_EFFECTIVE_DATE"
4852          '09'x
4853             "Pre_SOC_SEQ_NO"
4854          '09'x
4855             "Pre_PRODUCT_TYPE"
4856          '09'x
4857             "Pre_SERVICE_TYPE"
4858          '09'x
4859             "Pre_MOST_RECENT_FLAG"
4860          '09'x
4861             "Pre_EFFECTIVE_DATE"
4862          '09'x
4863             "Pre_EXPIRATION_DATE"
4864          '09'x
4865             "Pre_EFFECTIVE_ISSUE_DATE"
4866          '09'x
4867             "Pre_EXPIRATION_ISSUE_DATE"
4868          '09'x
4869             "Pre_CHANNEL_ID"
4870          '09'x
4871             "Pre_SYS_CREATION_DATE"
4872          '09'x
4873             "Pre_SYS_UPDATE_DATE"
4874          '09'x
4875             "Pre_FRANCHISE_ELIGIBILITY"
4876          '09'x
4877             "Pre_START_COMMIT_DATE"
4878          '09'x
4879             "Pre_END_COMMIT_DATE"
4880          '09'x
4881             "Pre_Type"
4882          '09'x
4883             "Pre_PPLAN_GROUP_DESC"
4884          '09'x
4885             "Pre_PPLAN_SERIES_TYPE_DESC"
4886          '09'x
4887             "Pre_SOC_DESCRIPTION"
4888          '09'x
4889             "Pre_SavePlan"
4890          '09'x
4891             "Pre_RATE_Orig"
4892          '09'x
4893             "SUSPENSION_AMOUNT"
4894          '09'x
4895             "Pre_SECONDARY_AMOUNT"
4896          '09'x
4897             "Pre_FRANCHISE_TP"
4898          '09'x
4899             "Week"
4900          '09'x
4901             "Pre_NbShareSubs"
4902          '09'x
4903             "Pre_TotSecAMT"
4904          '09'x
4905             "Pre_RATE"
4906          '09'x
4907             "Pre_Origin"
4908          '09'x
4909             "Post_SOC"
4910          '09'x
4911             "Post_SOC_EFFECTIVE_DATE"
4912          '09'x
4913             "Post_SOC_SEQ_NO"
4914          '09'x
4915             "Post_PRODUCT_TYPE"
4916          '09'x
4917             "Post_SERVICE_TYPE"
4918          '09'x
4919             "Post_MOST_RECENT_FLAG"
4920          '09'x
4921             "Post_EFFECTIVE_DATE"
4922          '09'x
4923             "Post_EXPIRATION_DATE"
4924          '09'x
4925             "Post_EFFECTIVE_ISSUE_DATE"
4926          '09'x
4927             "Post_EXPIRATION_ISSUE_DATE"
4928          '09'x
4929             "Post_CHANNEL_ID"
4930          '09'x
4931             "Post_SYS_CREATION_DATE"
4932          '09'x
4933             "Post_SYS_UPDATE_DATE"
4934          '09'x
4935             "Post_FRANCHISE_ELIGIBILITY"
4936          '09'x
4937             "Post_START_COMMIT_DATE"
4938          '09'x
4939             "Post_END_COMMIT_DATE"
4940          '09'x
4941             "Post_Type"
4942          '09'x
4943             "Post_PPLAN_GROUP_DESC"
4944          '09'x
4945             "Post_PPLAN_SERIES_TYPE_DESC"
4946          '09'x
4947             "Post_SOC_DESCRIPTION"
4948          '09'x
4949             "Post_SavePlan"
4950          '09'x
4951             "Post_RATE_Orig"
4952          '09'x
4953             "Post_SECONDARY_AMOUNT"
4954          '09'x
4955             "Post_FRANCHISE_TP"
4956          '09'x
4957             "Post_NbShareSubs"
4958          '09'x
4959             "Post_TotSecAMT"
4960          '09'x
4961             "Post_RATE"
4962          '09'x
4963             "Post_Origin"
4964          '09'x
4965             "PARTY_ID"
4966          '09'x
4967             "BRAND"
4968          '09'x
4969             "REGION_Cust_Segm"
4970          '09'x
4971             "ACCOUNT_TYPE"
4972          '09'x
4973             "ACCOUNT_SUB_TYPE"
4974          '09'x
4975             "DEACT_REASON_CODE"
4976          '09'x
4977             "SEGMENT_ID"
4978          '09'x
4979             "SEGMENT_DESC_ENG"
4980          '09'x
4981             "SEGMENT_DESC_FR"
4982          '09'x
4983             "EMPLOYEES"
4984          '09'x
4985             "SUB_STATUS_Cust_Segm"
4986          '09'x
4987             "PRICE_PLAN"
4988          '09'x
4989             "PPLAN_SERIES_TYPE"
4990          '09'x
4991             "COMPANY_CODE"
4992          '09'x
4993             "PRODUCT_TYPE"
4994          '09'x
4995             "CUSTGRP"
4996          '09'x
4997             "CUSTTYPE"
4998          '09'x
4999             "MSDTYPE"
5000          '09'x
5001             "SEG_GROUP"
5002          '09'x
5003             "SEG_SUB_GROUP"
5004          '09'x
5005             "ACCTYPE"
5006          '09'x
5007             "DEACT_REASON_CD"
5008          '09'x
5009             "SUB_STATUS_Subs"
5010          '09'x
5011             "SUB_STATUS_LAST_ACT"
5012          '09'x
5013             "PRODUCT_TYPE_Subs"
5014          '09'x
5015             "PRICE_PLAN_Subs"
5016          '09'x
5017             "SOC_EFFECTIVE_DATE"
5018          '09'x
5019             "FRANCHISE_TP"
5020          '09'x
5021             "MSID"
5022          '09'x
5023             "InitActDate"
5024          '09'x
5025             "DeactDate"
5026          '09'x
5027             "CommitStartDate"
5028          '09'x
5029             "CommitEndDate"
5030          '09'x
5031             "ACCTYPE_Subs"
5032          '09'x
5033             "Contract"
5034          '09'x
5035             "Ave3MthChurn"
5036          '09'x
5037             "LeftContDur"
5038          '09'x
5039             "ExpTenLeftCont"
5040          '09'x
5041             "CumChurnLeftCon"
5042          '09'x
5043             "PlanCost"
5044          '09'x
5045             "BusSize"
5046          '09'x
5047             "FootPrint"
5048          '09'x
5049             "TransactionDate"
5050          '09'x
5051             "MinTransactionDate"
5052          '09'x
5053             "SaveContract"
5054          '09'x
5055             "CSR_ID"
5056          '09'x
5057             "IPTV"
5058          ;
5059        end;
5060      set  RWORK.WEEK_SAVE_LAST_ROGERS_BUS_F   end=EFIEOD;
5061          format SOCRate $45. ;
5062          format Post_SOCRate $40. ;
5063          format MSF_Cat $20. ;
5064          format BAN 10. ;
5065          format SUBSCRIBER_NO $20. ;
5066          format Pre_SOC $9. ;
5067          format Pre_SOC_EFFECTIVE_DATE datetime20. ;
5068          format Pre_SOC_SEQ_NO 10. ;
5069          format Pre_PRODUCT_TYPE $1. ;
5070          format Pre_SERVICE_TYPE $1. ;
5071          format Pre_MOST_RECENT_FLAG $1. ;
5072          format Pre_EFFECTIVE_DATE datetime20. ;
5073          format Pre_EXPIRATION_DATE datetime20. ;
5074          format Pre_EFFECTIVE_ISSUE_DATE datetime20. ;
5075          format Pre_EXPIRATION_ISSUE_DATE datetime20. ;
5076          format Pre_CHANNEL_ID $5. ;
5077          format Pre_SYS_CREATION_DATE datetime20. ;
5078          format Pre_SYS_UPDATE_DATE datetime20. ;
5079          format Pre_FRANCHISE_ELIGIBILITY $1. ;
5080          format Pre_START_COMMIT_DATE datetime20. ;
5081          format Pre_END_COMMIT_DATE datetime20. ;
5082          format Pre_Type $7. ;
5083          format Pre_PPLAN_GROUP_DESC $50. ;
5084          format Pre_PPLAN_SERIES_TYPE_DESC $30. ;
5085          format Pre_SOC_DESCRIPTION $30. ;
5086          format Pre_SavePlan $3. ;
5087          format Pre_RATE_Orig 11.2 ;
5088          format SUSPENSION_AMOUNT 11.2 ;
5089          format Pre_SECONDARY_AMOUNT 11.2 ;
5090          format Pre_FRANCHISE_TP $1. ;
5091          format Week best12. ;
5092          format Pre_NbShareSubs best12. ;
5093          format Pre_TotSecAMT best12. ;
5094          format Pre_RATE best12. ;
5095          format Pre_Origin $3. ;
5096          format Post_SOC $9. ;
5097          format Post_SOC_EFFECTIVE_DATE datetime20. ;
5098          format Post_SOC_SEQ_NO 10. ;
5099          format Post_PRODUCT_TYPE $1. ;
5100          format Post_SERVICE_TYPE $1. ;
5101          format Post_MOST_RECENT_FLAG $1. ;
5102          format Post_EFFECTIVE_DATE datetime20. ;
5103          format Post_EXPIRATION_DATE datetime20. ;
5104          format Post_EFFECTIVE_ISSUE_DATE datetime20. ;
5105          format Post_EXPIRATION_ISSUE_DATE datetime20. ;
5106          format Post_CHANNEL_ID $5. ;
5107          format Post_SYS_CREATION_DATE datetime20. ;
5108          format Post_SYS_UPDATE_DATE datetime20. ;
5109          format Post_FRANCHISE_ELIGIBILITY $1. ;
5110          format Post_START_COMMIT_DATE datetime20. ;
5111          format Post_END_COMMIT_DATE datetime20. ;
5112          format Post_Type $7. ;
5113          format Post_PPLAN_GROUP_DESC $50. ;
5114          format Post_PPLAN_SERIES_TYPE_DESC $30. ;
5115          format Post_SOC_DESCRIPTION $30. ;
5116          format Post_SavePlan $3. ;
5117          format Post_RATE_Orig 11.2 ;
5118          format Post_SECONDARY_AMOUNT 11.2 ;
5119          format Post_FRANCHISE_TP $1. ;
5120          format Post_NbShareSubs best12. ;
5121          format Post_TotSecAMT best12. ;
5122          format Post_RATE best12. ;
5123          format Post_Origin $3. ;
5124          format PARTY_ID best12. ;
5125          format BRAND $1. ;
5126          format REGION_Cust_Segm $2. ;
5127          format ACCOUNT_TYPE $1. ;
5128          format ACCOUNT_SUB_TYPE $1. ;
5129          format DEACT_REASON_CODE $4. ;
5130          format SEGMENT_ID best12. ;
5131          format SEGMENT_DESC_ENG $50. ;
5132          format SEGMENT_DESC_FR $50. ;
5133          format EMPLOYEES best12. ;
5134          format SUB_STATUS_Cust_Segm $1. ;
5135          format PRICE_PLAN $9. ;
5136          format PPLAN_SERIES_TYPE 3. ;
5137          format COMPANY_CODE $9. ;
5138          format PRODUCT_TYPE $1. ;
5139          format CUSTGRP $10. ;
5140          format CUSTTYPE $3. ;
5141          format MSDTYPE $9. ;
5142          format SEG_GROUP $10. ;
5143          format SEG_SUB_GROUP $10. ;
5144          format ACCTYPE $2. ;
5145          format DEACT_REASON_CD $4. ;
5146          format SUB_STATUS_Subs $1. ;
5147          format SUB_STATUS_LAST_ACT $3. ;
5148          format PRODUCT_TYPE_Subs $1. ;
5149          format PRICE_PLAN_Subs $9. ;
5150          format SOC_EFFECTIVE_DATE datetime20. ;
5151          format FRANCHISE_TP $1. ;
5152          format MSID 9. ;
5153          format InitActDate date9. ;
5154          format DeactDate date9. ;
5155          format CommitStartDate date9. ;
5156          format CommitEndDate date9. ;
5157          format ACCTYPE_Subs $2. ;
5158          format Contract $1. ;
5159          format Ave3MthChurn best12. ;
5160          format LeftContDur best12. ;
5161          format ExpTenLeftCont best12. ;
5162          format CumChurnLeftCon best12. ;
5163          format PlanCost best12. ;
5164          format BusSize $6. ;
5165          format FootPrint $1. ;
5166          format TransactionDate date9. ;
5167          format MinTransactionDate date9. ;
5168          format SaveContract $1. ;
5169          format CSR_ID $20. ;
5170          format IPTV $1. ;
5171        do;
5172          EFIOUT + 1;
5173          put SOCRate $ @;
5174          put Post_SOCRate $ @;
5175          put MSF_Cat $ @;
5176          put BAN @;
5177          put SUBSCRIBER_NO $ @;
5178          put Pre_SOC $ @;
5179          put Pre_SOC_EFFECTIVE_DATE @;
5180          put Pre_SOC_SEQ_NO @;
5181          put Pre_PRODUCT_TYPE $ @;
5182          put Pre_SERVICE_TYPE $ @;
5183          put Pre_MOST_RECENT_FLAG $ @;
5184          put Pre_EFFECTIVE_DATE @;
5185          put Pre_EXPIRATION_DATE @;
5186          put Pre_EFFECTIVE_ISSUE_DATE @;
5187          put Pre_EXPIRATION_ISSUE_DATE @;
5188          put Pre_CHANNEL_ID $ @;
5189          put Pre_SYS_CREATION_DATE @;
5190          put Pre_SYS_UPDATE_DATE @;
5191          put Pre_FRANCHISE_ELIGIBILITY $ @;
5192          put Pre_START_COMMIT_DATE @;
5193          put Pre_END_COMMIT_DATE @;
5194          put Pre_Type $ @;
5195          put Pre_PPLAN_GROUP_DESC $ @;
5196          put Pre_PPLAN_SERIES_TYPE_DESC $ @;
5197          put Pre_SOC_DESCRIPTION $ @;
5198          put Pre_SavePlan $ @;
5199          put Pre_RATE_Orig @;
5200          put SUSPENSION_AMOUNT @;
5201          put Pre_SECONDARY_AMOUNT @;
5202          put Pre_FRANCHISE_TP $ @;
5203          put Week @;
5204          put Pre_NbShareSubs @;
5205          put Pre_TotSecAMT @;
5206          put Pre_RATE @;
5207          put Pre_Origin $ @;
5208          put Post_SOC $ @;
5209          put Post_SOC_EFFECTIVE_DATE @;
5210          put Post_SOC_SEQ_NO @;
5211          put Post_PRODUCT_TYPE $ @;
5212          put Post_SERVICE_TYPE $ @;
5213          put Post_MOST_RECENT_FLAG $ @;
5214          put Post_EFFECTIVE_DATE @;
5215          put Post_EXPIRATION_DATE @;
5216          put Post_EFFECTIVE_ISSUE_DATE @;
5217          put Post_EXPIRATION_ISSUE_DATE @;
5218          put Post_CHANNEL_ID $ @;
5219          put Post_SYS_CREATION_DATE @;
5220          put Post_SYS_UPDATE_DATE @;
5221          put Post_FRANCHISE_ELIGIBILITY $ @;
5222          put Post_START_COMMIT_DATE @;
5223          put Post_END_COMMIT_DATE @;
5224          put Post_Type $ @;
5225          put Post_PPLAN_GROUP_DESC $ @;
5226          put Post_PPLAN_SERIES_TYPE_DESC $ @;
5227          put Post_SOC_DESCRIPTION $ @;
5228          put Post_SavePlan $ @;
5229          put Post_RATE_Orig @;
5230          put Post_SECONDARY_AMOUNT @;
5231          put Post_FRANCHISE_TP $ @;
5232          put Post_NbShareSubs @;
5233          put Post_TotSecAMT @;
5234          put Post_RATE @;
5235          put Post_Origin $ @;
5236          put PARTY_ID @;
5237          put BRAND $ @;
5238          put REGION_Cust_Segm $ @;
5239          put ACCOUNT_TYPE $ @;
5240          put ACCOUNT_SUB_TYPE $ @;
5241          put DEACT_REASON_CODE $ @;
5242          put SEGMENT_ID @;
5243          put SEGMENT_DESC_ENG $ @;
5244          put SEGMENT_DESC_FR $ @;
5245          put EMPLOYEES @;
5246          put SUB_STATUS_Cust_Segm $ @;
5247          put PRICE_PLAN $ @;
5248          put PPLAN_SERIES_TYPE @;
5249          put COMPANY_CODE $ @;
5250          put PRODUCT_TYPE $ @;
5251          put CUSTGRP $ @;
5252          put CUSTTYPE $ @;
5253          put MSDTYPE $ @;
5254          put SEG_GROUP $ @;
5255          put SEG_SUB_GROUP $ @;
5256          put ACCTYPE $ @;
5257          put DEACT_REASON_CD $ @;
5258          put SUB_STATUS_Subs $ @;
5259          put SUB_STATUS_LAST_ACT $ @;
5260          put PRODUCT_TYPE_Subs $ @;
5261          put PRICE_PLAN_Subs $ @;
5262          put SOC_EFFECTIVE_DATE @;
5263          put FRANCHISE_TP $ @;
5264          put MSID @;
5265          put InitActDate @;
5266          put DeactDate @;
5267          put CommitStartDate @;
5268          put CommitEndDate @;
5269          put ACCTYPE_Subs $ @;
5270          put Contract $ @;
5271          put Ave3MthChurn @;
5272          put LeftContDur @;
5273          put ExpTenLeftCont @;
5274          put CumChurnLeftCon @;
5275          put PlanCost @;
5276          put BusSize $ @;
5277          put FootPrint $ @;
5278          put TransactionDate @;
5279          put MinTransactionDate @;
5280          put SaveContract $ @;
5281          put CSR_ID $ @;
5282          put IPTV $ ;
5283          ;
5284        end;
5285       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
5286       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
5287       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RBus-PlanSwap.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RBus-PlanSwap.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:57 o'cloc,
      Create Time=March 10, 2014 23:21:01 o'cloc

NOTE: 673 records were written to the file 'D:\x\24NOV2012BYMACROV\RBus-PlanSwap.txt'.
      The minimum record length was 779.
      The maximum record length was 1720.
NOTE: There were 672 observations read from the data set RWORK.WEEK_SAVE_LAST_ROGERS_BUS_F.
NOTE: DATA statement used (Total process time):
      real time           0.26 seconds
      cpu time            0.10 seconds


672 records created in D:\x\24NOV2012BYMACROV\RBus-PlanSwap.txt from
RWORK.WEEK_SAVE_LAST_ROGERS_BUS_F.


NOTE: "D:\x\24NOV2012BYMACROV\RBus-PlanSwap.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           3.06 seconds
      cpu time            0.14 seconds



5293    /**********************************************************************
5294    *   PRODUCT:   SAS
5295    *   VERSION:   9.2
5296    *   CREATOR:   External File Interface
5297    *   DATE:      30MAR14
5298    *   DESC:      Generated SAS Datastep Code
5299    *   TEMPLATE SOURCE:  (None Specified.)
5300    ***********************************************************************/
5301       data _null_;
5302       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
5303       %let _EFIREC_ = 0;     /* clear export record count macro variable */
5304       file 'D:\x\24NOV2012BYMACROV\RBus-HUP.txt' delimiter='09'x DSD DROPOVER lrecl=32767;
5305       if _n_ = 1 then        /* write column names or labels */
5306        do;
5307          put
5308             "BAN"
5309          '09'x
5310             "SUBSCRIBER_NO"
5311          '09'x
5312             "OPERATOR_ID"
5313          '09'x
5314             "OLD_IMEI"
5315          '09'x
5316             "NEW_IMEI"
5317          '09'x
5318             "ADMINISTRATION_CHG"
5319          '09'x
5320             "HARDWARE_CHG_20120722"
5321          '09'x
5322             "PRE_HUP_CHARGE"
5323          '09'x
5324             "HVT"
5325          '09'x
5326             "LOW_DEALER_COST"
5327          '09'x
5328             "HIGH_DEALER_COST"
5329          '09'x
5330             "DEALER_CODE"
5331          '09'x
5332             "SRC_CHANNEL"
5333          '09'x
5334             "HUP_TYPE"
5335          '09'x
5336             "HUP_REQUEST_DATE"
5337          '09'x
5338             "HUP_TIER"
5339          '09'x
5340             "NEW_COMMIT_START_DATE"
5341          '09'x
5342             "NEW_COMMIT_END_DATE"
5343          '09'x
5344             "FIDO_DLRS"
5345          '09'x
5346             "REBATE_AMT"
5347          '09'x
5348             "REBATE_AMT_2"
5349          '09'x
5350             "REBATE_AMT_3"
5351          '09'x
5352             "SU_REASON_CODE"
5353          '09'x
5354             "HUP_STATUS_DATE"
5355          '09'x
5356             "EMPLOYEE_ID"
5357          '09'x
5358             "OPERATOR_ID_ORIG"
5359          '09'x
5360             "SWAP_REASON"
5361          '09'x
5362             "SWAP_USER_ID"
5363          '09'x
5364             "SWAP_REQ_IMEI_MODEL"
5365          '09'x
5366             "SUBSIDIZED_IND"
5367          '09'x
5368             "SUBSIDIZED_ITEM_FEE"
5369          '09'x
5370             "FRANCHISE_TP"
5371          '09'x
5372             "HARDWARE_CHG"
5373          '09'x
5374             "SEG_SUB_GROUP"
5375          '09'x
5376             "ACCTYPE"
5377          '09'x
5378             "Week"
5379          '09'x
5380             "HIGH_LOW_DEALER_COST"
5381          '09'x
5382             "HUPCost"
5383          '09'x
5384             "BusSize"
5385          '09'x
5386             "FootPrint"
5387          '09'x
5388             "TransactionDate"
5389          '09'x
5390             "MinTransactionDate"
5391          '09'x
5392             "SaveContract"
5393          '09'x
5394             "CSR_ID"
5395          '09'x
5396             "TERM"
5397          '09'x
5398             "SOC"
5399          '09'x
5400             "SOC_DESCRIPTION"
5401          '09'x
5402             "RATE"
5403          '09'x
5404             "DataOption"
5405          '09'x
5406             "PRICE_A"
5407          '09'x
5408             "PRICE_V"
5409          '09'x
5410             "HUPCost_Old"
5411          '09'x
5412             "IPTV"
5413          ;
5414        end;
5415      set  RWORK.WEEK_HUP_LAST_ROGERS_BUS_F   end=EFIEOD;
5416          format BAN 10. ;
5417          format SUBSCRIBER_NO $20. ;
5418          format OPERATOR_ID 10. ;
5419          format OLD_IMEI $20. ;
5420          format NEW_IMEI $20. ;
5421          format ADMINISTRATION_CHG 11.2 ;
5422          format HARDWARE_CHG_20120722 11.2 ;
5423          format PRE_HUP_CHARGE 11.2 ;
5424          format HVT $10. ;
5425          format LOW_DEALER_COST 11.2 ;
5426          format HIGH_DEALER_COST 11.2 ;
5427          format DEALER_CODE $5. ;
5428          format SRC_CHANNEL $1. ;
5429          format HUP_TYPE $1. ;
5430          format HUP_REQUEST_DATE datetime20. ;
5431          format HUP_TIER $10. ;
5432          format NEW_COMMIT_START_DATE datetime20. ;
5433          format NEW_COMMIT_END_DATE datetime20. ;
5434          format FIDO_DLRS 11.2 ;
5435          format REBATE_AMT 11.2 ;
5436          format REBATE_AMT_2 11.2 ;
5437          format REBATE_AMT_3 11.2 ;
5438          format SU_REASON_CODE $4. ;
5439          format HUP_STATUS_DATE datetime20. ;
5440          format EMPLOYEE_ID $20. ;
5441          format OPERATOR_ID_ORIG 10. ;
5442          format SWAP_REASON $4. ;
5443          format SWAP_USER_ID 10. ;
5444          format SWAP_REQ_IMEI_MODEL $30. ;
5445          format SUBSIDIZED_IND $1. ;
5446          format SUBSIDIZED_ITEM_FEE 11.2 ;
5447          format FRANCHISE_TP $1. ;
5448          format HARDWARE_CHG best12. ;
5449          format SEG_SUB_GROUP $10. ;
5450          format ACCTYPE $2. ;
5451          format Week best12. ;
5452          format HIGH_LOW_DEALER_COST best12. ;
5453          format HUPCost best12. ;
5454          format BusSize $6. ;
5455          format FootPrint $1. ;
5456          format TransactionDate date9. ;
5457          format MinTransactionDate date9. ;
5458          format SaveContract $1. ;
5459          format CSR_ID $20. ;
5460          format TERM 4. ;
5461          format SOC $9. ;
5462          format SOC_DESCRIPTION $30. ;
5463          format RATE best12. ;
5464          format DataOption $1. ;
5465          format PRICE_A 11.2 ;
5466          format PRICE_V 11.2 ;
5467          format HUPCost_Old best12. ;
5468          format IPTV $1. ;
5469        do;
5470          EFIOUT + 1;
5471          put BAN @;
5472          put SUBSCRIBER_NO $ @;
5473          put OPERATOR_ID @;
5474          put OLD_IMEI $ @;
5475          put NEW_IMEI $ @;
5476          put ADMINISTRATION_CHG @;
5477          put HARDWARE_CHG_20120722 @;
5478          put PRE_HUP_CHARGE @;
5479          put HVT $ @;
5480          put LOW_DEALER_COST @;
5481          put HIGH_DEALER_COST @;
5482          put DEALER_CODE $ @;
5483          put SRC_CHANNEL $ @;
5484          put HUP_TYPE $ @;
5485          put HUP_REQUEST_DATE @;
5486          put HUP_TIER $ @;
5487          put NEW_COMMIT_START_DATE @;
5488          put NEW_COMMIT_END_DATE @;
5489          put FIDO_DLRS @;
5490          put REBATE_AMT @;
5491          put REBATE_AMT_2 @;
5492          put REBATE_AMT_3 @;
5493          put SU_REASON_CODE $ @;
5494          put HUP_STATUS_DATE @;
5495          put EMPLOYEE_ID $ @;
5496          put OPERATOR_ID_ORIG @;
5497          put SWAP_REASON $ @;
5498          put SWAP_USER_ID @;
5499          put SWAP_REQ_IMEI_MODEL $ @;
5500          put SUBSIDIZED_IND $ @;
5501          put SUBSIDIZED_ITEM_FEE @;
5502          put FRANCHISE_TP $ @;
5503          put HARDWARE_CHG @;
5504          put SEG_SUB_GROUP $ @;
5505          put ACCTYPE $ @;
5506          put Week @;
5507          put HIGH_LOW_DEALER_COST @;
5508          put HUPCost @;
5509          put BusSize $ @;
5510          put FootPrint $ @;
5511          put TransactionDate @;
5512          put MinTransactionDate @;
5513          put SaveContract $ @;
5514          put CSR_ID $ @;
5515          put TERM @;
5516          put SOC $ @;
5517          put SOC_DESCRIPTION $ @;
5518          put RATE @;
5519          put DataOption $ @;
5520          put PRICE_A @;
5521          put PRICE_V @;
5522          put HUPCost_Old @;
5523          put IPTV $ ;
5524          ;
5525        end;
5526       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
5527       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
5528       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RBus-HUP.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RBus-HUP.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:57 o'cloc,
      Create Time=March 10, 2014 23:21:01 o'cloc

NOTE: 338 records were written to the file 'D:\x\24NOV2012BYMACROV\RBus-HUP.txt'.
      The minimum record length was 202.
      The maximum record length was 657.
NOTE: There were 337 observations read from the data set RWORK.WEEK_HUP_LAST_ROGERS_BUS_F.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.01 seconds


337 records created in D:\x\24NOV2012BYMACROV\RBus-HUP.txt from RWORK.WEEK_HUP_LAST_ROGERS_BUS_F.


NOTE: "D:\x\24NOV2012BYMACROV\RBus-HUP.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           0.79 seconds
      cpu time            0.06 seconds



5534    /**********************************************************************
5535    *   PRODUCT:   SAS
5536    *   VERSION:   9.2
5537    *   CREATOR:   External File Interface
5538    *   DATE:      30MAR14
5539    *   DESC:      Generated SAS Datastep Code
5540    *   TEMPLATE SOURCE:  (None Specified.)
5541    ***********************************************************************/
5542       data _null_;
5543       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
5544       %let _EFIREC_ = 0;     /* clear export record count macro variable */
5545       file 'D:\x\24NOV2012BYMACROV\RBus-Options-Balance.txt' delimiter='09'x DSD DROPOVER
5545 ! lrecl=32767;
5546       if _n_ = 1 then        /* write column names or labels */
5547        do;
5548          put
5549             "SOCRate"
5550          '09'x
5551             "Week"
5552          '09'x
5553             "BAN"
5554          '09'x
5555             "SUBSCRIBER_NO"
5556          '09'x
5557             "Segment"
5558          '09'x
5559             "MSF_Cat"
5560          '09'x
5561             "PreRATE_R"
5562          '09'x
5563             "PreRATE_T"
5564          '09'x
5565             "PreRATE_I"
5566          '09'x
5567             "PreRATE_D"
5568          '09'x
5569             "PosRATE_R"
5570          '09'x
5571             "PosRATE_D"
5572          '09'x
5573             "PosRATE_I"
5574          '09'x
5575             "PosRATE_T"
5576          '09'x
5577             "LastTransactionDate"
5578          '09'x
5579             "SaveContract"
5580          '09'x
5581             "BRAND"
5582          '09'x
5583             "SEG_SUB_GROUP"
5584          '09'x
5585             "PRICE_PLAN_Subs"
5586          '09'x
5587             "CommitStartDate"
5588          '09'x
5589             "CommitEndDate"
5590          '09'x
5591             "MinTransactionDate"
5592          '09'x
5593             "FootPrint"
5594          '09'x
5595             "PreTotal"
5596          '09'x
5597             "PosTotal"
5598          '09'x
5599             "PlanRate"
5600          '09'x
5601             "SOC"
5602          '09'x
5603             "SOC_DESCRIPTION"
5604          '09'x
5605             "RATE"
5606          '09'x
5607             "SECONDARY_AMOUNT"
5608          '09'x
5609             "Contract"
5610          '09'x
5611             "ExpTenLeftCont"
5612          '09'x
5613             "PrePosChange"
5614          '09'x
5615             "OptionCost"
5616          '09'x
5617             "BusSize"
5618          '09'x
5619             "TransactionDate"
5620          '09'x
5621             "CSR_ID"
5622          '09'x
5623             "IPTV"
5624          ;
5625        end;
5626      set  RWORK.WEEK_OPTION_LAST_ROGERS_BUS_F   end=EFIEOD;
5627          format SOCRate $45. ;
5628          format Week best12. ;
5629          format BAN 10. ;
5630          format SUBSCRIBER_NO $20. ;
5631          format Segment $15. ;
5632          format MSF_Cat $20. ;
5633          format PreRATE_R best12. ;
5634          format PreRATE_T best12. ;
5635          format PreRATE_I best12. ;
5636          format PreRATE_D best12. ;
5637          format PosRATE_R best12. ;
5638          format PosRATE_D best12. ;
5639          format PosRATE_I best12. ;
5640          format PosRATE_T best12. ;
5641          format LastTransactionDate date9. ;
5642          format SaveContract $1. ;
5643          format BRAND $1. ;
5644          format SEG_SUB_GROUP $10. ;
5645          format PRICE_PLAN_Subs $9. ;
5646          format CommitStartDate date9. ;
5647          format CommitEndDate date9. ;
5648          format MinTransactionDate date9. ;
5649          format FootPrint $1. ;
5650          format PreTotal best12. ;
5651          format PosTotal best12. ;
5652          format PlanRate $40. ;
5653          format SOC $9. ;
5654          format SOC_DESCRIPTION $30. ;
5655          format RATE 11.2 ;
5656          format SECONDARY_AMOUNT 11.2 ;
5657          format Contract $1. ;
5658          format ExpTenLeftCont best12. ;
5659          format PrePosChange best12. ;
5660          format OptionCost best12. ;
5661          format BusSize $6. ;
5662          format TransactionDate date9. ;
5663          format CSR_ID $20. ;
5664          format IPTV $1. ;
5665        do;
5666          EFIOUT + 1;
5667          put SOCRate $ @;
5668          put Week @;
5669          put BAN @;
5670          put SUBSCRIBER_NO $ @;
5671          put Segment $ @;
5672          put MSF_Cat $ @;
5673          put PreRATE_R @;
5674          put PreRATE_T @;
5675          put PreRATE_I @;
5676          put PreRATE_D @;
5677          put PosRATE_R @;
5678          put PosRATE_D @;
5679          put PosRATE_I @;
5680          put PosRATE_T @;
5681          put LastTransactionDate @;
5682          put SaveContract $ @;
5683          put BRAND $ @;
5684          put SEG_SUB_GROUP $ @;
5685          put PRICE_PLAN_Subs $ @;
5686          put CommitStartDate @;
5687          put CommitEndDate @;
5688          put MinTransactionDate @;
5689          put FootPrint $ @;
5690          put PreTotal @;
5691          put PosTotal @;
5692          put PlanRate $ @;
5693          put SOC $ @;
5694          put SOC_DESCRIPTION $ @;
5695          put RATE @;
5696          put SECONDARY_AMOUNT @;
5697          put Contract $ @;
5698          put ExpTenLeftCont @;
5699          put PrePosChange @;
5700          put OptionCost @;
5701          put BusSize $ @;
5702          put TransactionDate @;
5703          put CSR_ID $ @;
5704          put IPTV $ ;
5705          ;
5706        end;
5707       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
5708       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
5709       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\RBus-Options-Balance.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\RBus-Options-Balance.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:29:59 o'cloc,
      Create Time=March 10, 2014 23:21:02 o'cloc

NOTE: 851 records were written to the file 'D:\x\24NOV2012BYMACROV\RBus-Options-Balance.txt'.
      The minimum record length was 269.
      The maximum record length was 407.
NOTE: There were 850 observations read from the data set RWORK.WEEK_OPTION_LAST_ROGERS_BUS_F.
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.04 seconds


850 records created in D:\x\24NOV2012BYMACROV\RBus-Options-Balance.txt from
RWORK.WEEK_OPTION_LAST_ROGERS_BUS_F.


NOTE: "D:\x\24NOV2012BYMACROV\RBus-Options-Balance.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           1.75 seconds
      cpu time            0.07 seconds



5715    /**********************************************************************
5716    *   PRODUCT:   SAS
5717    *   VERSION:   9.2
5718    *   CREATOR:   External File Interface
5719    *   DATE:      30MAR14
5720    *   DESC:      Generated SAS Datastep Code
5721    *   TEMPLATE SOURCE:  (None Specified.)
5722    ***********************************************************************/
5723       data _null_;
5724       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
5725       %let _EFIREC_ = 0;     /* clear export record count macro variable */
5726       file 'D:\x\24NOV2012BYMACROV\Fido-Options-Expired.txt' delimiter='09'x DSD DROPOVER
5726 ! lrecl=32767;
5727       if _n_ = 1 then        /* write column names or labels */
5728        do;
5729          put
5730             "Week"
5731          '09'x
5732             "BAN"
5733          '09'x
5734             "SUBSCRIBER_NO"
5735          '09'x
5736             "BusSize"
5737          '09'x
5738             "PRODUCT_TYPE"
5739          '09'x
5740             "SOC"
5741          '09'x
5742             "SUBSCRIBER_LOOKUP_ID"
5743          '09'x
5744             "SOC_SEQ_NO"
5745          '09'x
5746             "SOC_VER_NO"
5747          '09'x
5748             "SOC_LEVEL_CODE"
5749          '09'x
5750             "EFFECTIVE_DATE"
5751          '09'x
5752             "EXPIRATION_DATE"
5753          '09'x
5754             "EFFECTIVE_ISSUE_DATE"
5755          '09'x
5756             "EXPIRATION_ISSUE_DATE"
5757          '09'x
5758             "CHANNEL_ID"
5759          '09'x
5760             "SPLIT_DEALER_CODE"
5761          '09'x
5762             "SERVICE_TYPE"
5763          '09'x
5764             "REL_SOC"
5765          '09'x
5766             "REL_SOC_SEQ_NO"
5767          '09'x
5768             "DEPENDS_ON_SOC"
5769          '09'x
5770             "NIN1_IND"
5771          '09'x
5772             "PARTITION_IND"
5773          '09'x
5774             "USER_ID"
5775          '09'x
5776             "SYS_CREATION_DATE"
5777          '09'x
5778             "SYS_UPDATE_DATE"
5779          '09'x
5780             "FRANCHISE_ELIGIBILITY"
5781          '09'x
5782             "START_COMMIT_DATE"
5783          '09'x
5784             "END_COMMIT_DATE"
5785          '09'x
5786             "PENALTY_AMT"
5787          '09'x
5788             "WAIVE_RSN"
5789          '09'x
5790             "WAIVE_OPER_ID"
5791          '09'x
5792             "RC_WAIVER_CODE"
5793          '09'x
5794             "RC_WAIVER_EFF_DATE"
5795          '09'x
5796             "RC_WAIVER_EXPR_DATE"
5797          '09'x
5798             "RC_WAIVER_RSN"
5799          '09'x
5800             "Type"
5801          '09'x
5802             "SOC_DURATION"
5803          '09'x
5804             "SOC_DURATION_TYPE"
5805          '09'x
5806             "SOC_DESCRIPTION"
5807          '09'x
5808             "SERVICE_TYPE_SOC"
5809          '09'x
5810             "OptionEffDate"
5811          '09'x
5812             "OptionExpDate"
5813          '09'x
5814             "RATE_Orig"
5815          '09'x
5816             "SUSPENSION_AMOUNT"
5817          '09'x
5818             "SECONDARY_AMOUNT"
5819          '09'x
5820             "NbShareSubs"
5821          '09'x
5822             "TotSecAMT"
5823          '09'x
5824             "RATE"
5825          '09'x
5826             "Origin"
5827          '09'x
5828             "MeanRate"
5829          '09'x
5830             "RateCat"
5831          '09'x
5832             "OptionDevice"
5833          '09'x
5834             "DEP_SOC_RATE"
5835          '09'x
5836             "RATE_AS_REL_SOC"
5837          ;
5838        end;
5839      set  RWORK.OPTION_EXPIRED_FCONS   end=EFIEOD;
5840          format Week best12. ;
5841          format BAN 10. ;
5842          format SUBSCRIBER_NO $20. ;
5843          format BusSize $6. ;
5844          format PRODUCT_TYPE $1. ;
5845          format SOC $9. ;
5846          format SUBSCRIBER_LOOKUP_ID 20. ;
5847          format SOC_SEQ_NO 10. ;
5848          format SOC_VER_NO 10. ;
5849          format SOC_LEVEL_CODE $1. ;
5850          format EFFECTIVE_DATE datetime20. ;
5851          format EXPIRATION_DATE datetime20. ;
5852          format EFFECTIVE_ISSUE_DATE datetime20. ;
5853          format EXPIRATION_ISSUE_DATE datetime20. ;
5854          format CHANNEL_ID $5. ;
5855          format SPLIT_DEALER_CODE $5. ;
5856          format SERVICE_TYPE $1. ;
5857          format REL_SOC $9. ;
5858          format REL_SOC_SEQ_NO 10. ;
5859          format DEPENDS_ON_SOC $9. ;
5860          format NIN1_IND $1. ;
5861          format PARTITION_IND $1. ;
5862          format USER_ID 10. ;
5863          format SYS_CREATION_DATE datetime20. ;
5864          format SYS_UPDATE_DATE datetime20. ;
5865          format FRANCHISE_ELIGIBILITY $1. ;
5866          format START_COMMIT_DATE datetime20. ;
5867          format END_COMMIT_DATE datetime20. ;
5868          format PENALTY_AMT 11.2 ;
5869          format WAIVE_RSN $6. ;
5870          format WAIVE_OPER_ID 10. ;
5871          format RC_WAIVER_CODE $6. ;
5872          format RC_WAIVER_EFF_DATE datetime20. ;
5873          format RC_WAIVER_EXPR_DATE datetime20. ;
5874          format RC_WAIVER_RSN $6. ;
5875          format Type $3. ;
5876          format SOC_DURATION 4. ;
5877          format SOC_DURATION_TYPE $1. ;
5878          format SOC_DESCRIPTION $30. ;
5879          format SERVICE_TYPE_SOC $1. ;
5880          format OptionEffDate date9. ;
5881          format OptionExpDate date9. ;
5882          format RATE_Orig 11.2 ;
5883          format SUSPENSION_AMOUNT 11.2 ;
5884          format SECONDARY_AMOUNT 11.2 ;
5885          format NbShareSubs best12. ;
5886          format TotSecAMT best12. ;
5887          format RATE best12. ;
5888          format Origin $3. ;
5889          format MeanRate best12. ;
5890          format RateCat $2. ;
5891          format OptionDevice best12. ;
5892          format DEP_SOC_RATE best12. ;
5893          format RATE_AS_REL_SOC best12. ;
5894        do;
5895          EFIOUT + 1;
5896          put Week @;
5897          put BAN @;
5898          put SUBSCRIBER_NO $ @;
5899          put BusSize $ @;
5900          put PRODUCT_TYPE $ @;
5901          put SOC $ @;
5902          put SUBSCRIBER_LOOKUP_ID @;
5903          put SOC_SEQ_NO @;
5904          put SOC_VER_NO @;
5905          put SOC_LEVEL_CODE $ @;
5906          put EFFECTIVE_DATE @;
5907          put EXPIRATION_DATE @;
5908          put EFFECTIVE_ISSUE_DATE @;
5909          put EXPIRATION_ISSUE_DATE @;
5910          put CHANNEL_ID $ @;
5911          put SPLIT_DEALER_CODE $ @;
5912          put SERVICE_TYPE $ @;
5913          put REL_SOC $ @;
5914          put REL_SOC_SEQ_NO @;
5915          put DEPENDS_ON_SOC $ @;
5916          put NIN1_IND $ @;
5917          put PARTITION_IND $ @;
5918          put USER_ID @;
5919          put SYS_CREATION_DATE @;
5920          put SYS_UPDATE_DATE @;
5921          put FRANCHISE_ELIGIBILITY $ @;
5922          put START_COMMIT_DATE @;
5923          put END_COMMIT_DATE @;
5924          put PENALTY_AMT @;
5925          put WAIVE_RSN $ @;
5926          put WAIVE_OPER_ID @;
5927          put RC_WAIVER_CODE $ @;
5928          put RC_WAIVER_EFF_DATE @;
5929          put RC_WAIVER_EXPR_DATE @;
5930          put RC_WAIVER_RSN $ @;
5931          put Type $ @;
5932          put SOC_DURATION @;
5933          put SOC_DURATION_TYPE $ @;
5934          put SOC_DESCRIPTION $ @;
5935          put SERVICE_TYPE_SOC $ @;
5936          put OptionEffDate @;
5937          put OptionExpDate @;
5938          put RATE_Orig @;
5939          put SUSPENSION_AMOUNT @;
5940          put SECONDARY_AMOUNT @;
5941          put NbShareSubs @;
5942          put TotSecAMT @;
5943          put RATE @;
5944          put Origin $ @;
5945          put MeanRate @;
5946          put RateCat $ @;
5947          put OptionDevice @;
5948          put DEP_SOC_RATE @;
5949          put RATE_AS_REL_SOC ;
5950          ;
5951        end;
5952       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
5953       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
5954       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\Fido-Options-Expired.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\Fido-Options-Expired.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:30:28 o'cloc,
      Create Time=March 10, 2014 23:21:02 o'cloc

NOTE: 19956 records were written to the file 'D:\x\24NOV2012BYMACROV\Fido-Options-Expired.txt'.
      The minimum record length was 262.
      The maximum record length was 719.
NOTE: There were 19955 observations read from the data set RWORK.OPTION_EXPIRED_FCONS.
NOTE: DATA statement used (Total process time):
      real time           2.07 seconds
      cpu time            0.68 seconds


19955 records created in D:\x\24NOV2012BYMACROV\Fido-Options-Expired.txt from
RWORK.OPTION_EXPIRED_FCONS.


NOTE: "D:\x\24NOV2012BYMACROV\Fido-Options-Expired.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           30.93 seconds
      cpu time            0.74 seconds



5960    /**********************************************************************
5961    *   PRODUCT:   SAS
5962    *   VERSION:   9.2
5963    *   CREATOR:   External File Interface
5964    *   DATE:      30MAR14
5965    *   DESC:      Generated SAS Datastep Code
5966    *   TEMPLATE SOURCE:  (None Specified.)
5967    ***********************************************************************/
5968       data _null_;
5969       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
5970       %let _EFIREC_ = 0;     /* clear export record count macro variable */
5971       file 'D:\x\24NOV2012BYMACROV\Fido-Options-Started.txt' delimiter='09'x DSD DROPOVER
5971 ! lrecl=32767;
5972       if _n_ = 1 then        /* write column names or labels */
5973        do;
5974          put
5975             "Week"
5976          '09'x
5977             "BAN"
5978          '09'x
5979             "SUBSCRIBER_NO"
5980          '09'x
5981             "BusSize"
5982          '09'x
5983             "PRODUCT_TYPE"
5984          '09'x
5985             "SOC"
5986          '09'x
5987             "SUBSCRIBER_LOOKUP_ID"
5988          '09'x
5989             "SOC_SEQ_NO"
5990          '09'x
5991             "SOC_VER_NO"
5992          '09'x
5993             "SOC_LEVEL_CODE"
5994          '09'x
5995             "EFFECTIVE_DATE"
5996          '09'x
5997             "EXPIRATION_DATE"
5998          '09'x
5999             "EFFECTIVE_ISSUE_DATE"
6000          '09'x
6001             "EXPIRATION_ISSUE_DATE"
6002          '09'x
6003             "CHANNEL_ID"
6004          '09'x
6005             "SPLIT_DEALER_CODE"
6006          '09'x
6007             "SERVICE_TYPE"
6008          '09'x
6009             "REL_SOC"
6010          '09'x
6011             "REL_SOC_SEQ_NO"
6012          '09'x
6013             "DEPENDS_ON_SOC"
6014          '09'x
6015             "NIN1_IND"
6016          '09'x
6017             "PARTITION_IND"
6018          '09'x
6019             "USER_ID"
6020          '09'x
6021             "SYS_CREATION_DATE"
6022          '09'x
6023             "SYS_UPDATE_DATE"
6024          '09'x
6025             "FRANCHISE_ELIGIBILITY"
6026          '09'x
6027             "START_COMMIT_DATE"
6028          '09'x
6029             "END_COMMIT_DATE"
6030          '09'x
6031             "PENALTY_AMT"
6032          '09'x
6033             "WAIVE_RSN"
6034          '09'x
6035             "WAIVE_OPER_ID"
6036          '09'x
6037             "RC_WAIVER_CODE"
6038          '09'x
6039             "RC_WAIVER_EFF_DATE"
6040          '09'x
6041             "RC_WAIVER_EXPR_DATE"
6042          '09'x
6043             "RC_WAIVER_RSN"
6044          '09'x
6045             "Type"
6046          '09'x
6047             "SOC_DURATION"
6048          '09'x
6049             "SOC_DURATION_TYPE"
6050          '09'x
6051             "SOC_DESCRIPTION"
6052          '09'x
6053             "SERVICE_TYPE_SOC"
6054          '09'x
6055             "OptionEffDate"
6056          '09'x
6057             "OptionExpDate"
6058          '09'x
6059             "RATE_Orig"
6060          '09'x
6061             "SUSPENSION_AMOUNT"
6062          '09'x
6063             "SECONDARY_AMOUNT"
6064          '09'x
6065             "NbShareSubs"
6066          '09'x
6067             "TotSecAMT"
6068          '09'x
6069             "RATE"
6070          '09'x
6071             "Origin"
6072          '09'x
6073             "MeanRate"
6074          '09'x
6075             "RateCat"
6076          '09'x
6077             "OptionDevice"
6078          '09'x
6079             "DEP_SOC_RATE"
6080          '09'x
6081             "RATE_AS_REL_SOC"
6082          ;
6083        end;
6084      set  RWORK.OPTION_STARTED_FCONS   end=EFIEOD;
6085          format Week best12. ;
6086          format BAN 10. ;
6087          format SUBSCRIBER_NO $20. ;
6088          format BusSize $6. ;
6089          format PRODUCT_TYPE $1. ;
6090          format SOC $9. ;
6091          format SUBSCRIBER_LOOKUP_ID 20. ;
6092          format SOC_SEQ_NO 10. ;
6093          format SOC_VER_NO 10. ;
6094          format SOC_LEVEL_CODE $1. ;
6095          format EFFECTIVE_DATE datetime20. ;
6096          format EXPIRATION_DATE datetime20. ;
6097          format EFFECTIVE_ISSUE_DATE datetime20. ;
6098          format EXPIRATION_ISSUE_DATE datetime20. ;
6099          format CHANNEL_ID $5. ;
6100          format SPLIT_DEALER_CODE $5. ;
6101          format SERVICE_TYPE $1. ;
6102          format REL_SOC $9. ;
6103          format REL_SOC_SEQ_NO 10. ;
6104          format DEPENDS_ON_SOC $9. ;
6105          format NIN1_IND $1. ;
6106          format PARTITION_IND $1. ;
6107          format USER_ID 10. ;
6108          format SYS_CREATION_DATE datetime20. ;
6109          format SYS_UPDATE_DATE datetime20. ;
6110          format FRANCHISE_ELIGIBILITY $1. ;
6111          format START_COMMIT_DATE datetime20. ;
6112          format END_COMMIT_DATE datetime20. ;
6113          format PENALTY_AMT 11.2 ;
6114          format WAIVE_RSN $6. ;
6115          format WAIVE_OPER_ID 10. ;
6116          format RC_WAIVER_CODE $6. ;
6117          format RC_WAIVER_EFF_DATE datetime20. ;
6118          format RC_WAIVER_EXPR_DATE datetime20. ;
6119          format RC_WAIVER_RSN $6. ;
6120          format Type $3. ;
6121          format SOC_DURATION 4. ;
6122          format SOC_DURATION_TYPE $1. ;
6123          format SOC_DESCRIPTION $30. ;
6124          format SERVICE_TYPE_SOC $1. ;
6125          format OptionEffDate date9. ;
6126          format OptionExpDate date9. ;
6127          format RATE_Orig 11.2 ;
6128          format SUSPENSION_AMOUNT 11.2 ;
6129          format SECONDARY_AMOUNT 11.2 ;
6130          format NbShareSubs best12. ;
6131          format TotSecAMT best12. ;
6132          format RATE best12. ;
6133          format Origin $3. ;
6134          format MeanRate best12. ;
6135          format RateCat $2. ;
6136          format OptionDevice best12. ;
6137          format DEP_SOC_RATE best12. ;
6138          format RATE_AS_REL_SOC best12. ;
6139        do;
6140          EFIOUT + 1;
6141          put Week @;
6142          put BAN @;
6143          put SUBSCRIBER_NO $ @;
6144          put BusSize $ @;
6145          put PRODUCT_TYPE $ @;
6146          put SOC $ @;
6147          put SUBSCRIBER_LOOKUP_ID @;
6148          put SOC_SEQ_NO @;
6149          put SOC_VER_NO @;
6150          put SOC_LEVEL_CODE $ @;
6151          put EFFECTIVE_DATE @;
6152          put EXPIRATION_DATE @;
6153          put EFFECTIVE_ISSUE_DATE @;
6154          put EXPIRATION_ISSUE_DATE @;
6155          put CHANNEL_ID $ @;
6156          put SPLIT_DEALER_CODE $ @;
6157          put SERVICE_TYPE $ @;
6158          put REL_SOC $ @;
6159          put REL_SOC_SEQ_NO @;
6160          put DEPENDS_ON_SOC $ @;
6161          put NIN1_IND $ @;
6162          put PARTITION_IND $ @;
6163          put USER_ID @;
6164          put SYS_CREATION_DATE @;
6165          put SYS_UPDATE_DATE @;
6166          put FRANCHISE_ELIGIBILITY $ @;
6167          put START_COMMIT_DATE @;
6168          put END_COMMIT_DATE @;
6169          put PENALTY_AMT @;
6170          put WAIVE_RSN $ @;
6171          put WAIVE_OPER_ID @;
6172          put RC_WAIVER_CODE $ @;
6173          put RC_WAIVER_EFF_DATE @;
6174          put RC_WAIVER_EXPR_DATE @;
6175          put RC_WAIVER_RSN $ @;
6176          put Type $ @;
6177          put SOC_DURATION @;
6178          put SOC_DURATION_TYPE $ @;
6179          put SOC_DESCRIPTION $ @;
6180          put SERVICE_TYPE_SOC $ @;
6181          put OptionEffDate @;
6182          put OptionExpDate @;
6183          put RATE_Orig @;
6184          put SUSPENSION_AMOUNT @;
6185          put SECONDARY_AMOUNT @;
6186          put NbShareSubs @;
6187          put TotSecAMT @;
6188          put RATE @;
6189          put Origin $ @;
6190          put MeanRate @;
6191          put RateCat $ @;
6192          put OptionDevice @;
6193          put DEP_SOC_RATE @;
6194          put RATE_AS_REL_SOC ;
6195          ;
6196        end;
6197       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
6198       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
6199       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\Fido-Options-Started.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\Fido-Options-Started.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:30:52 o'cloc,
      Create Time=March 10, 2014 23:21:06 o'cloc

NOTE: 16973 records were written to the file 'D:\x\24NOV2012BYMACROV\Fido-Options-Started.txt'.
      The minimum record length was 231.
      The maximum record length was 719.
NOTE: There were 16972 observations read from the data set RWORK.OPTION_STARTED_FCONS.
NOTE: DATA statement used (Total process time):
      real time           1.75 seconds
      cpu time            0.62 seconds


16972 records created in D:\x\24NOV2012BYMACROV\Fido-Options-Started.txt from
RWORK.OPTION_STARTED_FCONS.


NOTE: "D:\x\24NOV2012BYMACROV\Fido-Options-Started.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           23.93 seconds
      cpu time            0.64 seconds



6205    /**********************************************************************
6206    *   PRODUCT:   SAS
6207    *   VERSION:   9.2
6208    *   CREATOR:   External File Interface
6209    *   DATE:      30MAR14
6210    *   DESC:      Generated SAS Datastep Code
6211    *   TEMPLATE SOURCE:  (None Specified.)
6212    ***********************************************************************/
6213       data _null_;
6214       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
6215       %let _EFIREC_ = 0;     /* clear export record count macro variable */
6216       file 'D:\x\24NOV2012BYMACROV\Fido-PlanSwap.txt' delimiter='09'x DSD DROPOVER lrecl=32767;
6217       if _n_ = 1 then        /* write column names or labels */
6218        do;
6219          put
6220             "SOCRate"
6221          '09'x
6222             "Post_SOCRate"
6223          '09'x
6224             "MSF_Cat"
6225          '09'x
6226             "BAN"
6227          '09'x
6228             "SUBSCRIBER_NO"
6229          '09'x
6230             "Pre_SOC"
6231          '09'x
6232             "Pre_SOC_EFFECTIVE_DATE"
6233          '09'x
6234             "Pre_SOC_SEQ_NO"
6235          '09'x
6236             "Pre_PRODUCT_TYPE"
6237          '09'x
6238             "Pre_SERVICE_TYPE"
6239          '09'x
6240             "Pre_MOST_RECENT_FLAG"
6241          '09'x
6242             "Pre_EFFECTIVE_DATE"
6243          '09'x
6244             "Pre_EXPIRATION_DATE"
6245          '09'x
6246             "Pre_EFFECTIVE_ISSUE_DATE"
6247          '09'x
6248             "Pre_EXPIRATION_ISSUE_DATE"
6249          '09'x
6250             "Pre_CHANNEL_ID"
6251          '09'x
6252             "Pre_SYS_CREATION_DATE"
6253          '09'x
6254             "Pre_SYS_UPDATE_DATE"
6255          '09'x
6256             "Pre_FRANCHISE_ELIGIBILITY"
6257          '09'x
6258             "Pre_START_COMMIT_DATE"
6259          '09'x
6260             "Pre_END_COMMIT_DATE"
6261          '09'x
6262             "Pre_Type"
6263          '09'x
6264             "Pre_PPLAN_GROUP_DESC"
6265          '09'x
6266             "Pre_PPLAN_SERIES_TYPE_DESC"
6267          '09'x
6268             "Pre_SOC_DESCRIPTION"
6269          '09'x
6270             "Pre_SavePlan"
6271          '09'x
6272             "Pre_RATE_Orig"
6273          '09'x
6274             "SUSPENSION_AMOUNT"
6275          '09'x
6276             "Pre_SECONDARY_AMOUNT"
6277          '09'x
6278             "Pre_FRANCHISE_TP"
6279          '09'x
6280             "Week"
6281          '09'x
6282             "Pre_NbShareSubs"
6283          '09'x
6284             "Pre_TotSecAMT"
6285          '09'x
6286             "Pre_RATE"
6287          '09'x
6288             "Pre_Origin"
6289          '09'x
6290             "Post_SOC"
6291          '09'x
6292             "Post_SOC_EFFECTIVE_DATE"
6293          '09'x
6294             "Post_SOC_SEQ_NO"
6295          '09'x
6296             "Post_PRODUCT_TYPE"
6297          '09'x
6298             "Post_SERVICE_TYPE"
6299          '09'x
6300             "Post_MOST_RECENT_FLAG"
6301          '09'x
6302             "Post_EFFECTIVE_DATE"
6303          '09'x
6304             "Post_EXPIRATION_DATE"
6305          '09'x
6306             "Post_EFFECTIVE_ISSUE_DATE"
6307          '09'x
6308             "Post_EXPIRATION_ISSUE_DATE"
6309          '09'x
6310             "Post_CHANNEL_ID"
6311          '09'x
6312             "Post_SYS_CREATION_DATE"
6313          '09'x
6314             "Post_SYS_UPDATE_DATE"
6315          '09'x
6316             "Post_FRANCHISE_ELIGIBILITY"
6317          '09'x
6318             "Post_START_COMMIT_DATE"
6319          '09'x
6320             "Post_END_COMMIT_DATE"
6321          '09'x
6322             "Post_Type"
6323          '09'x
6324             "Post_PPLAN_GROUP_DESC"
6325          '09'x
6326             "Post_PPLAN_SERIES_TYPE_DESC"
6327          '09'x
6328             "Post_SOC_DESCRIPTION"
6329          '09'x
6330             "Post_SavePlan"
6331          '09'x
6332             "Post_RATE_Orig"
6333          '09'x
6334             "Post_SECONDARY_AMOUNT"
6335          '09'x
6336             "Post_FRANCHISE_TP"
6337          '09'x
6338             "Post_NbShareSubs"
6339          '09'x
6340             "Post_TotSecAMT"
6341          '09'x
6342             "Post_RATE"
6343          '09'x
6344             "Post_Origin"
6345          '09'x
6346             "PARTY_ID"
6347          '09'x
6348             "BRAND"
6349          '09'x
6350             "REGION_Cust_Segm"
6351          '09'x
6352             "ACCOUNT_TYPE"
6353          '09'x
6354             "ACCOUNT_SUB_TYPE"
6355          '09'x
6356             "DEACT_REASON_CODE"
6357          '09'x
6358             "SEGMENT_ID"
6359          '09'x
6360             "SEGMENT_DESC_ENG"
6361          '09'x
6362             "SEGMENT_DESC_FR"
6363          '09'x
6364             "EMPLOYEES"
6365          '09'x
6366             "SUB_STATUS_Cust_Segm"
6367          '09'x
6368             "PRICE_PLAN"
6369          '09'x
6370             "PPLAN_SERIES_TYPE"
6371          '09'x
6372             "COMPANY_CODE"
6373          '09'x
6374             "PRODUCT_TYPE"
6375          '09'x
6376             "CUSTGRP"
6377          '09'x
6378             "CUSTTYPE"
6379          '09'x
6380             "MSDTYPE"
6381          '09'x
6382             "SEG_GROUP"
6383          '09'x
6384             "SEG_SUB_GROUP"
6385          '09'x
6386             "ACCTYPE"
6387          '09'x
6388             "DEACT_REASON_CD"
6389          '09'x
6390             "SUB_STATUS_Subs"
6391          '09'x
6392             "SUB_STATUS_LAST_ACT"
6393          '09'x
6394             "PRODUCT_TYPE_Subs"
6395          '09'x
6396             "PRICE_PLAN_Subs"
6397          '09'x
6398             "SOC_EFFECTIVE_DATE"
6399          '09'x
6400             "FRANCHISE_TP"
6401          '09'x
6402             "MSID"
6403          '09'x
6404             "InitActDate"
6405          '09'x
6406             "DeactDate"
6407          '09'x
6408             "CommitStartDate"
6409          '09'x
6410             "CommitEndDate"
6411          '09'x
6412             "ACCTYPE_Subs"
6413          '09'x
6414             "Contract"
6415          '09'x
6416             "Ave3MthChurn"
6417          '09'x
6418             "LeftContDur"
6419          '09'x
6420             "ExpTenLeftCont"
6421          '09'x
6422             "CumChurnLeftCon"
6423          '09'x
6424             "PlanCost"
6425          '09'x
6426             "BusSize"
6427          '09'x
6428             "FootPrint"
6429          '09'x
6430             "TransactionDate"
6431          '09'x
6432             "MinTransactionDate"
6433          '09'x
6434             "SaveContract"
6435          '09'x
6436             "CSR_ID"
6437          '09'x
6438             "IPTV"
6439          ;
6440        end;
6441      set  RWORK.WEEK_SAVE_LAST_FIDO_F   end=EFIEOD;
6442          format SOCRate $45. ;
6443          format Post_SOCRate $40. ;
6444          format MSF_Cat $20. ;
6445          format BAN 10. ;
6446          format SUBSCRIBER_NO $20. ;
6447          format Pre_SOC $9. ;
6448          format Pre_SOC_EFFECTIVE_DATE datetime20. ;
6449          format Pre_SOC_SEQ_NO 10. ;
6450          format Pre_PRODUCT_TYPE $1. ;
6451          format Pre_SERVICE_TYPE $1. ;
6452          format Pre_MOST_RECENT_FLAG $1. ;
6453          format Pre_EFFECTIVE_DATE datetime20. ;
6454          format Pre_EXPIRATION_DATE datetime20. ;
6455          format Pre_EFFECTIVE_ISSUE_DATE datetime20. ;
6456          format Pre_EXPIRATION_ISSUE_DATE datetime20. ;
6457          format Pre_CHANNEL_ID $5. ;
6458          format Pre_SYS_CREATION_DATE datetime20. ;
6459          format Pre_SYS_UPDATE_DATE datetime20. ;
6460          format Pre_FRANCHISE_ELIGIBILITY $1. ;
6461          format Pre_START_COMMIT_DATE datetime20. ;
6462          format Pre_END_COMMIT_DATE datetime20. ;
6463          format Pre_Type $7. ;
6464          format Pre_PPLAN_GROUP_DESC $50. ;
6465          format Pre_PPLAN_SERIES_TYPE_DESC $30. ;
6466          format Pre_SOC_DESCRIPTION $30. ;
6467          format Pre_SavePlan $3. ;
6468          format Pre_RATE_Orig 11.2 ;
6469          format SUSPENSION_AMOUNT 11.2 ;
6470          format Pre_SECONDARY_AMOUNT 11.2 ;
6471          format Pre_FRANCHISE_TP $1. ;
6472          format Week best12. ;
6473          format Pre_NbShareSubs best12. ;
6474          format Pre_TotSecAMT best12. ;
6475          format Pre_RATE best12. ;
6476          format Pre_Origin $3. ;
6477          format Post_SOC $9. ;
6478          format Post_SOC_EFFECTIVE_DATE datetime20. ;
6479          format Post_SOC_SEQ_NO 10. ;
6480          format Post_PRODUCT_TYPE $1. ;
6481          format Post_SERVICE_TYPE $1. ;
6482          format Post_MOST_RECENT_FLAG $1. ;
6483          format Post_EFFECTIVE_DATE datetime20. ;
6484          format Post_EXPIRATION_DATE datetime20. ;
6485          format Post_EFFECTIVE_ISSUE_DATE datetime20. ;
6486          format Post_EXPIRATION_ISSUE_DATE datetime20. ;
6487          format Post_CHANNEL_ID $5. ;
6488          format Post_SYS_CREATION_DATE datetime20. ;
6489          format Post_SYS_UPDATE_DATE datetime20. ;
6490          format Post_FRANCHISE_ELIGIBILITY $1. ;
6491          format Post_START_COMMIT_DATE datetime20. ;
6492          format Post_END_COMMIT_DATE datetime20. ;
6493          format Post_Type $7. ;
6494          format Post_PPLAN_GROUP_DESC $50. ;
6495          format Post_PPLAN_SERIES_TYPE_DESC $30. ;
6496          format Post_SOC_DESCRIPTION $30. ;
6497          format Post_SavePlan $3. ;
6498          format Post_RATE_Orig 11.2 ;
6499          format Post_SECONDARY_AMOUNT 11.2 ;
6500          format Post_FRANCHISE_TP $1. ;
6501          format Post_NbShareSubs best12. ;
6502          format Post_TotSecAMT best12. ;
6503          format Post_RATE best12. ;
6504          format Post_Origin $3. ;
6505          format PARTY_ID best12. ;
6506          format BRAND $1. ;
6507          format REGION_Cust_Segm $2. ;
6508          format ACCOUNT_TYPE $1. ;
6509          format ACCOUNT_SUB_TYPE $1. ;
6510          format DEACT_REASON_CODE $4. ;
6511          format SEGMENT_ID best12. ;
6512          format SEGMENT_DESC_ENG $50. ;
6513          format SEGMENT_DESC_FR $50. ;
6514          format EMPLOYEES best12. ;
6515          format SUB_STATUS_Cust_Segm $1. ;
6516          format PRICE_PLAN $9. ;
6517          format PPLAN_SERIES_TYPE 3. ;
6518          format COMPANY_CODE $9. ;
6519          format PRODUCT_TYPE $1. ;
6520          format CUSTGRP $10. ;
6521          format CUSTTYPE $3. ;
6522          format MSDTYPE $9. ;
6523          format SEG_GROUP $10. ;
6524          format SEG_SUB_GROUP $10. ;
6525          format ACCTYPE $2. ;
6526          format DEACT_REASON_CD $4. ;
6527          format SUB_STATUS_Subs $1. ;
6528          format SUB_STATUS_LAST_ACT $3. ;
6529          format PRODUCT_TYPE_Subs $1. ;
6530          format PRICE_PLAN_Subs $9. ;
6531          format SOC_EFFECTIVE_DATE datetime20. ;
6532          format FRANCHISE_TP $1. ;
6533          format MSID 9. ;
6534          format InitActDate date9. ;
6535          format DeactDate date9. ;
6536          format CommitStartDate date9. ;
6537          format CommitEndDate date9. ;
6538          format ACCTYPE_Subs $2. ;
6539          format Contract $1. ;
6540          format Ave3MthChurn best12. ;
6541          format LeftContDur best12. ;
6542          format ExpTenLeftCont best12. ;
6543          format CumChurnLeftCon best12. ;
6544          format PlanCost best12. ;
6545          format BusSize $6. ;
6546          format FootPrint $1. ;
6547          format TransactionDate date9. ;
6548          format MinTransactionDate date9. ;
6549          format SaveContract $1. ;
6550          format CSR_ID $20. ;
6551          format IPTV $1. ;
6552        do;
6553          EFIOUT + 1;
6554          put SOCRate $ @;
6555          put Post_SOCRate $ @;
6556          put MSF_Cat $ @;
6557          put BAN @;
6558          put SUBSCRIBER_NO $ @;
6559          put Pre_SOC $ @;
6560          put Pre_SOC_EFFECTIVE_DATE @;
6561          put Pre_SOC_SEQ_NO @;
6562          put Pre_PRODUCT_TYPE $ @;
6563          put Pre_SERVICE_TYPE $ @;
6564          put Pre_MOST_RECENT_FLAG $ @;
6565          put Pre_EFFECTIVE_DATE @;
6566          put Pre_EXPIRATION_DATE @;
6567          put Pre_EFFECTIVE_ISSUE_DATE @;
6568          put Pre_EXPIRATION_ISSUE_DATE @;
6569          put Pre_CHANNEL_ID $ @;
6570          put Pre_SYS_CREATION_DATE @;
6571          put Pre_SYS_UPDATE_DATE @;
6572          put Pre_FRANCHISE_ELIGIBILITY $ @;
6573          put Pre_START_COMMIT_DATE @;
6574          put Pre_END_COMMIT_DATE @;
6575          put Pre_Type $ @;
6576          put Pre_PPLAN_GROUP_DESC $ @;
6577          put Pre_PPLAN_SERIES_TYPE_DESC $ @;
6578          put Pre_SOC_DESCRIPTION $ @;
6579          put Pre_SavePlan $ @;
6580          put Pre_RATE_Orig @;
6581          put SUSPENSION_AMOUNT @;
6582          put Pre_SECONDARY_AMOUNT @;
6583          put Pre_FRANCHISE_TP $ @;
6584          put Week @;
6585          put Pre_NbShareSubs @;
6586          put Pre_TotSecAMT @;
6587          put Pre_RATE @;
6588          put Pre_Origin $ @;
6589          put Post_SOC $ @;
6590          put Post_SOC_EFFECTIVE_DATE @;
6591          put Post_SOC_SEQ_NO @;
6592          put Post_PRODUCT_TYPE $ @;
6593          put Post_SERVICE_TYPE $ @;
6594          put Post_MOST_RECENT_FLAG $ @;
6595          put Post_EFFECTIVE_DATE @;
6596          put Post_EXPIRATION_DATE @;
6597          put Post_EFFECTIVE_ISSUE_DATE @;
6598          put Post_EXPIRATION_ISSUE_DATE @;
6599          put Post_CHANNEL_ID $ @;
6600          put Post_SYS_CREATION_DATE @;
6601          put Post_SYS_UPDATE_DATE @;
6602          put Post_FRANCHISE_ELIGIBILITY $ @;
6603          put Post_START_COMMIT_DATE @;
6604          put Post_END_COMMIT_DATE @;
6605          put Post_Type $ @;
6606          put Post_PPLAN_GROUP_DESC $ @;
6607          put Post_PPLAN_SERIES_TYPE_DESC $ @;
6608          put Post_SOC_DESCRIPTION $ @;
6609          put Post_SavePlan $ @;
6610          put Post_RATE_Orig @;
6611          put Post_SECONDARY_AMOUNT @;
6612          put Post_FRANCHISE_TP $ @;
6613          put Post_NbShareSubs @;
6614          put Post_TotSecAMT @;
6615          put Post_RATE @;
6616          put Post_Origin $ @;
6617          put PARTY_ID @;
6618          put BRAND $ @;
6619          put REGION_Cust_Segm $ @;
6620          put ACCOUNT_TYPE $ @;
6621          put ACCOUNT_SUB_TYPE $ @;
6622          put DEACT_REASON_CODE $ @;
6623          put SEGMENT_ID @;
6624          put SEGMENT_DESC_ENG $ @;
6625          put SEGMENT_DESC_FR $ @;
6626          put EMPLOYEES @;
6627          put SUB_STATUS_Cust_Segm $ @;
6628          put PRICE_PLAN $ @;
6629          put PPLAN_SERIES_TYPE @;
6630          put COMPANY_CODE $ @;
6631          put PRODUCT_TYPE $ @;
6632          put CUSTGRP $ @;
6633          put CUSTTYPE $ @;
6634          put MSDTYPE $ @;
6635          put SEG_GROUP $ @;
6636          put SEG_SUB_GROUP $ @;
6637          put ACCTYPE $ @;
6638          put DEACT_REASON_CD $ @;
6639          put SUB_STATUS_Subs $ @;
6640          put SUB_STATUS_LAST_ACT $ @;
6641          put PRODUCT_TYPE_Subs $ @;
6642          put PRICE_PLAN_Subs $ @;
6643          put SOC_EFFECTIVE_DATE @;
6644          put FRANCHISE_TP $ @;
6645          put MSID @;
6646          put InitActDate @;
6647          put DeactDate @;
6648          put CommitStartDate @;
6649          put CommitEndDate @;
6650          put ACCTYPE_Subs $ @;
6651          put Contract $ @;
6652          put Ave3MthChurn @;
6653          put LeftContDur @;
6654          put ExpTenLeftCont @;
6655          put CumChurnLeftCon @;
6656          put PlanCost @;
6657          put BusSize $ @;
6658          put FootPrint $ @;
6659          put TransactionDate @;
6660          put MinTransactionDate @;
6661          put SaveContract $ @;
6662          put CSR_ID $ @;
6663          put IPTV $ ;
6664          ;
6665        end;
6666       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
6667       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
6668       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\Fido-PlanSwap.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\Fido-PlanSwap.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:31:04 o'cloc,
      Create Time=March 10, 2014 23:21:09 o'cloc

NOTE: 2337 records were written to the file 'D:\x\24NOV2012BYMACROV\Fido-PlanSwap.txt'.
      The minimum record length was 757.
      The maximum record length was 1720.
NOTE: There were 2336 observations read from the data set RWORK.WEEK_SAVE_LAST_FIDO_F.
NOTE: DATA statement used (Total process time):
      real time           0.70 seconds
      cpu time            0.23 seconds


2336 records created in D:\x\24NOV2012BYMACROV\Fido-PlanSwap.txt from RWORK.WEEK_SAVE_LAST_FIDO_F.


NOTE: "D:\x\24NOV2012BYMACROV\Fido-PlanSwap.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           10.42 seconds
      cpu time            0.26 seconds



6674    /**********************************************************************
6675    *   PRODUCT:   SAS
6676    *   VERSION:   9.2
6677    *   CREATOR:   External File Interface
6678    *   DATE:      30MAR14
6679    *   DESC:      Generated SAS Datastep Code
6680    *   TEMPLATE SOURCE:  (None Specified.)
6681    ***********************************************************************/
6682       data _null_;
6683       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
6684       %let _EFIREC_ = 0;     /* clear export record count macro variable */
6685       file 'D:\x\24NOV2012BYMACROV\Fido-HUP.txt' delimiter='09'x DSD DROPOVER lrecl=32767;
6686       if _n_ = 1 then        /* write column names or labels */
6687        do;
6688          put
6689             "BAN"
6690          '09'x
6691             "SUBSCRIBER_NO"
6692          '09'x
6693             "OPERATOR_ID"
6694          '09'x
6695             "OLD_IMEI"
6696          '09'x
6697             "NEW_IMEI"
6698          '09'x
6699             "ADMINISTRATION_CHG"
6700          '09'x
6701             "HARDWARE_CHG_20120722"
6702          '09'x
6703             "PRE_HUP_CHARGE"
6704          '09'x
6705             "HVT"
6706          '09'x
6707             "LOW_DEALER_COST"
6708          '09'x
6709             "HIGH_DEALER_COST"
6710          '09'x
6711             "DEALER_CODE"
6712          '09'x
6713             "SRC_CHANNEL"
6714          '09'x
6715             "HUP_TYPE"
6716          '09'x
6717             "HUP_REQUEST_DATE"
6718          '09'x
6719             "HUP_TIER"
6720          '09'x
6721             "NEW_COMMIT_START_DATE"
6722          '09'x
6723             "NEW_COMMIT_END_DATE"
6724          '09'x
6725             "FIDO_DLRS"
6726          '09'x
6727             "REBATE_AMT"
6728          '09'x
6729             "REBATE_AMT_2"
6730          '09'x
6731             "REBATE_AMT_3"
6732          '09'x
6733             "SU_REASON_CODE"
6734          '09'x
6735             "HUP_STATUS_DATE"
6736          '09'x
6737             "EMPLOYEE_ID"
6738          '09'x
6739             "OPERATOR_ID_ORIG"
6740          '09'x
6741             "SWAP_REASON"
6742          '09'x
6743             "SWAP_USER_ID"
6744          '09'x
6745             "SWAP_REQ_IMEI_MODEL"
6746          '09'x
6747             "SUBSIDIZED_IND"
6748          '09'x
6749             "SUBSIDIZED_ITEM_FEE"
6750          '09'x
6751             "FRANCHISE_TP"
6752          '09'x
6753             "HARDWARE_CHG"
6754          '09'x
6755             "SEG_SUB_GROUP"
6756          '09'x
6757             "ACCTYPE"
6758          '09'x
6759             "Week"
6760          '09'x
6761             "HIGH_LOW_DEALER_COST"
6762          '09'x
6763             "HUPCost"
6764          '09'x
6765             "BusSize"
6766          '09'x
6767             "FootPrint"
6768          '09'x
6769             "TransactionDate"
6770          '09'x
6771             "MinTransactionDate"
6772          '09'x
6773             "SaveContract"
6774          '09'x
6775             "CSR_ID"
6776          '09'x
6777             "TERM"
6778          '09'x
6779             "SOC"
6780          '09'x
6781             "SOC_DESCRIPTION"
6782          '09'x
6783             "RATE"
6784          '09'x
6785             "DataOption"
6786          '09'x
6787             "PRICE_A"
6788          '09'x
6789             "PRICE_V"
6790          '09'x
6791             "HUPCost_Old"
6792          '09'x
6793             "IPTV"
6794          ;
6795        end;
6796      set  RWORK.WEEK_HUP_LAST_FIDO_F   end=EFIEOD;
6797          format BAN 10. ;
6798          format SUBSCRIBER_NO $20. ;
6799          format OPERATOR_ID 10. ;
6800          format OLD_IMEI $20. ;
6801          format NEW_IMEI $20. ;
6802          format ADMINISTRATION_CHG 11.2 ;
6803          format HARDWARE_CHG_20120722 11.2 ;
6804          format PRE_HUP_CHARGE 11.2 ;
6805          format HVT $10. ;
6806          format LOW_DEALER_COST 11.2 ;
6807          format HIGH_DEALER_COST 11.2 ;
6808          format DEALER_CODE $5. ;
6809          format SRC_CHANNEL $1. ;
6810          format HUP_TYPE $1. ;
6811          format HUP_REQUEST_DATE datetime20. ;
6812          format HUP_TIER $10. ;
6813          format NEW_COMMIT_START_DATE datetime20. ;
6814          format NEW_COMMIT_END_DATE datetime20. ;
6815          format FIDO_DLRS 11.2 ;
6816          format REBATE_AMT 11.2 ;
6817          format REBATE_AMT_2 11.2 ;
6818          format REBATE_AMT_3 11.2 ;
6819          format SU_REASON_CODE $4. ;
6820          format HUP_STATUS_DATE datetime20. ;
6821          format EMPLOYEE_ID $20. ;
6822          format OPERATOR_ID_ORIG 10. ;
6823          format SWAP_REASON $4. ;
6824          format SWAP_USER_ID 10. ;
6825          format SWAP_REQ_IMEI_MODEL $30. ;
6826          format SUBSIDIZED_IND $1. ;
6827          format SUBSIDIZED_ITEM_FEE 11.2 ;
6828          format FRANCHISE_TP $1. ;
6829          format HARDWARE_CHG best12. ;
6830          format SEG_SUB_GROUP $10. ;
6831          format ACCTYPE $2. ;
6832          format Week best12. ;
6833          format HIGH_LOW_DEALER_COST best12. ;
6834          format HUPCost best12. ;
6835          format BusSize $6. ;
6836          format FootPrint $1. ;
6837          format TransactionDate date9. ;
6838          format MinTransactionDate date9. ;
6839          format SaveContract $1. ;
6840          format CSR_ID $20. ;
6841          format TERM 4. ;
6842          format SOC $9. ;
6843          format SOC_DESCRIPTION $30. ;
6844          format RATE best12. ;
6845          format DataOption $1. ;
6846          format PRICE_A 11.2 ;
6847          format PRICE_V 11.2 ;
6848          format HUPCost_Old best12. ;
6849          format IPTV $1. ;
6850        do;
6851          EFIOUT + 1;
6852          put BAN @;
6853          put SUBSCRIBER_NO $ @;
6854          put OPERATOR_ID @;
6855          put OLD_IMEI $ @;
6856          put NEW_IMEI $ @;
6857          put ADMINISTRATION_CHG @;
6858          put HARDWARE_CHG_20120722 @;
6859          put PRE_HUP_CHARGE @;
6860          put HVT $ @;
6861          put LOW_DEALER_COST @;
6862          put HIGH_DEALER_COST @;
6863          put DEALER_CODE $ @;
6864          put SRC_CHANNEL $ @;
6865          put HUP_TYPE $ @;
6866          put HUP_REQUEST_DATE @;
6867          put HUP_TIER $ @;
6868          put NEW_COMMIT_START_DATE @;
6869          put NEW_COMMIT_END_DATE @;
6870          put FIDO_DLRS @;
6871          put REBATE_AMT @;
6872          put REBATE_AMT_2 @;
6873          put REBATE_AMT_3 @;
6874          put SU_REASON_CODE $ @;
6875          put HUP_STATUS_DATE @;
6876          put EMPLOYEE_ID $ @;
6877          put OPERATOR_ID_ORIG @;
6878          put SWAP_REASON $ @;
6879          put SWAP_USER_ID @;
6880          put SWAP_REQ_IMEI_MODEL $ @;
6881          put SUBSIDIZED_IND $ @;
6882          put SUBSIDIZED_ITEM_FEE @;
6883          put FRANCHISE_TP $ @;
6884          put HARDWARE_CHG @;
6885          put SEG_SUB_GROUP $ @;
6886          put ACCTYPE $ @;
6887          put Week @;
6888          put HIGH_LOW_DEALER_COST @;
6889          put HUPCost @;
6890          put BusSize $ @;
6891          put FootPrint $ @;
6892          put TransactionDate @;
6893          put MinTransactionDate @;
6894          put SaveContract $ @;
6895          put CSR_ID $ @;
6896          put TERM @;
6897          put SOC $ @;
6898          put SOC_DESCRIPTION $ @;
6899          put RATE @;
6900          put DataOption $ @;
6901          put PRICE_A @;
6902          put PRICE_V @;
6903          put HUPCost_Old @;
6904          put IPTV $ ;
6905          ;
6906        end;
6907       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
6908       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
6909       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\Fido-HUP.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\Fido-HUP.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:31:08 o'cloc,
      Create Time=March 10, 2014 23:21:10 o'cloc

NOTE: 1816 records were written to the file 'D:\x\24NOV2012BYMACROV\Fido-HUP.txt'.
      The minimum record length was 177.
      The maximum record length was 657.
NOTE: There were 1815 observations read from the data set RWORK.WEEK_HUP_LAST_FIDO_F.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.03 seconds


1815 records created in D:\x\24NOV2012BYMACROV\Fido-HUP.txt from RWORK.WEEK_HUP_LAST_FIDO_F.


NOTE: "D:\x\24NOV2012BYMACROV\Fido-HUP.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           3.43 seconds
      cpu time            0.10 seconds



6915    /**********************************************************************
6916    *   PRODUCT:   SAS
6917    *   VERSION:   9.2
6918    *   CREATOR:   External File Interface
6919    *   DATE:      30MAR14
6920    *   DESC:      Generated SAS Datastep Code
6921    *   TEMPLATE SOURCE:  (None Specified.)
6922    ***********************************************************************/
6923       data _null_;
6924       %let _EFIERR_ = 0; /* set the ERROR detection macro variable */
6925       %let _EFIREC_ = 0;     /* clear export record count macro variable */
6926       file 'D:\x\24NOV2012BYMACROV\Fido-Options-Balance.txt' delimiter='09'x DSD DROPOVER
6926 ! lrecl=32767;
6927       if _n_ = 1 then        /* write column names or labels */
6928        do;
6929          put
6930             "SOCRate"
6931          '09'x
6932             "Week"
6933          '09'x
6934             "BAN"
6935          '09'x
6936             "SUBSCRIBER_NO"
6937          '09'x
6938             "Segment"
6939          '09'x
6940             "MSF_Cat"
6941          '09'x
6942             "PreRATE_R"
6943          '09'x
6944             "PreRATE_T"
6945          '09'x
6946             "PreRATE_I"
6947          '09'x
6948             "PreRATE_D"
6949          '09'x
6950             "PosRATE_R"
6951          '09'x
6952             "PosRATE_D"
6953          '09'x
6954             "PosRATE_I"
6955          '09'x
6956             "PosRATE_T"
6957          '09'x
6958             "LastTransactionDate"
6959          '09'x
6960             "SaveContract"
6961          '09'x
6962             "BRAND"
6963          '09'x
6964             "SEG_SUB_GROUP"
6965          '09'x
6966             "PRICE_PLAN_Subs"
6967          '09'x
6968             "CommitStartDate"
6969          '09'x
6970             "CommitEndDate"
6971          '09'x
6972             "MinTransactionDate"
6973          '09'x
6974             "FootPrint"
6975          '09'x
6976             "PreTotal"
6977          '09'x
6978             "PosTotal"
6979          '09'x
6980             "PlanRate"
6981          '09'x
6982             "SOC"
6983          '09'x
6984             "SOC_DESCRIPTION"
6985          '09'x
6986             "RATE"
6987          '09'x
6988             "SECONDARY_AMOUNT"
6989          '09'x
6990             "Contract"
6991          '09'x
6992             "ExpTenLeftCont"
6993          '09'x
6994             "PrePosChange"
6995          '09'x
6996             "OptionCost"
6997          '09'x
6998             "BusSize"
6999          '09'x
7000             "TransactionDate"
7001          '09'x
7002             "CSR_ID"
7003          '09'x
7004             "IPTV"
7005          ;
7006        end;
7007      set  RWORK.WEEK_OPTION_LAST_FIDO_F   end=EFIEOD;
7008          format SOCRate $45. ;
7009          format Week best12. ;
7010          format BAN 10. ;
7011          format SUBSCRIBER_NO $20. ;
7012          format Segment $15. ;
7013          format MSF_Cat $20. ;
7014          format PreRATE_R best12. ;
7015          format PreRATE_T best12. ;
7016          format PreRATE_I best12. ;
7017          format PreRATE_D best12. ;
7018          format PosRATE_R best12. ;
7019          format PosRATE_D best12. ;
7020          format PosRATE_I best12. ;
7021          format PosRATE_T best12. ;
7022          format LastTransactionDate date9. ;
7023          format SaveContract $1. ;
7024          format BRAND $1. ;
7025          format SEG_SUB_GROUP $10. ;
7026          format PRICE_PLAN_Subs $9. ;
7027          format CommitStartDate date9. ;
7028          format CommitEndDate date9. ;
7029          format MinTransactionDate date9. ;
7030          format FootPrint $1. ;
7031          format PreTotal best12. ;
7032          format PosTotal best12. ;
7033          format PlanRate $40. ;
7034          format SOC $9. ;
7035          format SOC_DESCRIPTION $30. ;
7036          format RATE 11.2 ;
7037          format SECONDARY_AMOUNT 11.2 ;
7038          format Contract $1. ;
7039          format ExpTenLeftCont best12. ;
7040          format PrePosChange best12. ;
7041          format OptionCost best12. ;
7042          format BusSize $6. ;
7043          format TransactionDate date9. ;
7044          format CSR_ID $20. ;
7045          format IPTV $1. ;
7046        do;
7047          EFIOUT + 1;
7048          put SOCRate $ @;
7049          put Week @;
7050          put BAN @;
7051          put SUBSCRIBER_NO $ @;
7052          put Segment $ @;
7053          put MSF_Cat $ @;
7054          put PreRATE_R @;
7055          put PreRATE_T @;
7056          put PreRATE_I @;
7057          put PreRATE_D @;
7058          put PosRATE_R @;
7059          put PosRATE_D @;
7060          put PosRATE_I @;
7061          put PosRATE_T @;
7062          put LastTransactionDate @;
7063          put SaveContract $ @;
7064          put BRAND $ @;
7065          put SEG_SUB_GROUP $ @;
7066          put PRICE_PLAN_Subs $ @;
7067          put CommitStartDate @;
7068          put CommitEndDate @;
7069          put MinTransactionDate @;
7070          put FootPrint $ @;
7071          put PreTotal @;
7072          put PosTotal @;
7073          put PlanRate $ @;
7074          put SOC $ @;
7075          put SOC_DESCRIPTION $ @;
7076          put RATE @;
7077          put SECONDARY_AMOUNT @;
7078          put Contract $ @;
7079          put ExpTenLeftCont @;
7080          put PrePosChange @;
7081          put OptionCost @;
7082          put BusSize $ @;
7083          put TransactionDate @;
7084          put CSR_ID $ @;
7085          put IPTV $ ;
7086          ;
7087        end;
7088       if _ERROR_ then call symputx('_EFIERR_',1);  /* set ERROR detection macro variable */
7089       if EFIEOD then call symputx('_EFIREC_',EFIOUT);
7090       run;

NOTE: The file 'D:\x\24NOV2012BYMACROV\Fido-Options-Balance.txt' is:
      Filename=D:\x\24NOV2012BYMACROV\Fido-Options-Balance.txt,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=March 30, 2014 20:31:14 o'cloc,
      Create Time=March 10, 2014 23:21:11 o'cloc

NOTE: 3381 records were written to the file 'D:\x\24NOV2012BYMACROV\Fido-Options-Balance.txt'.
      The minimum record length was 220.
      The maximum record length was 407.
NOTE: There were 3380 observations read from the data set RWORK.WEEK_OPTION_LAST_FIDO_F.
NOTE: DATA statement used (Total process time):
      real time           0.42 seconds
      cpu time            0.18 seconds


3380 records created in D:\x\24NOV2012BYMACROV\Fido-Options-Balance.txt from
RWORK.WEEK_OPTION_LAST_FIDO_F.


NOTE: "D:\x\24NOV2012BYMACROV\Fido-Options-Balance.txt" file was successfully created.
NOTE: PROCEDURE EXPORT used (Total process time):
      real time           5.84 seconds
      cpu time            0.23 seconds


NOTE: Remote submit to HOST commencing.
11468  data copy.Y12_Daily_CSR_Cum;
11469  set raj.Y12_Daily_CSR_Cum;
11470  run;

NOTE: There were 185947 observations read from the data set RAJ.Y12_DAILY_CSR_CUM.
NOTE: The data set COPY.Y12_DAILY_CSR_CUM has 185947 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.27 seconds
      cpu time            0.15 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11471  data copy.Y12_Daily_CSR_IPTV_Cum;
11472  set raj.Y12_Daily_CSR_IPTV_Cum;
11473  run;

NOTE: There were 110081 observations read from the data set RAJ.Y12_DAILY_CSR_IPTV_CUM.
NOTE: The data set COPY.Y12_DAILY_CSR_IPTV_CUM has 110081 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.22 seconds
      cpu time            0.09 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11474  data copy.Y12_save_discount_cum;
11475  set raj.Y12_save_discount_cum;
11476  run;

NOTE: There were 68056 observations read from the data set RAJ.Y12_SAVE_DISCOUNT_CUM.
NOTE: The data set COPY.Y12_SAVE_DISCOUNT_CUM has 68056 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11477  data copy.Y12_save_handset_cum;
11478  set raj.Y12_save_handset_cum;
11479  run;

NOTE: There were 37898 observations read from the data set RAJ.Y12_SAVE_HANDSET_CUM.
NOTE: The data set COPY.Y12_SAVE_HANDSET_CUM has 37898 observations and 53 variables.
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.06 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11480  data copy.Y12_save_noncost_cum;
11481  set raj.Y12_save_noncost_cum;
11482  run;

NOTE: There were 129475 observations read from the data set RAJ.Y12_SAVE_NONCOST_CUM.
NOTE: The data set COPY.Y12_SAVE_NONCOST_CUM has 129475 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11483  data copy.Y12_save_option_cum;
11484  set raj.Y12_save_option_cum;
11485  run;

NOTE: There were 88541 observations read from the data set RAJ.Y12_SAVE_OPTION_CUM.
NOTE: The data set COPY.Y12_SAVE_OPTION_CUM has 88541 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.13 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11486  data copy.Y12_save_plan_cum;
11487  set raj.Y12_save_plan_cum;
11488  run;

NOTE: There were 64328 observations read from the data set RAJ.Y12_SAVE_PLAN_CUM.
NOTE: The data set COPY.Y12_SAVE_PLAN_CUM has 64328 observations and 110 variables.
NOTE: DATA statement used (Total process time):
      real time           0.35 seconds
      cpu time            0.21 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11489  data copy.Y12_save_smart_cum_fido;
11490  set raj.Y12_save_smart_cum_fido;
11491  run;

NOTE: There were 312175 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_FIDO.
NOTE: The data set COPY.Y12_SAVE_SMART_CUM_FIDO has 312175 observations and 76 variables.
NOTE: DATA statement used (Total process time):
      real time           1.68 seconds
      cpu time            0.76 seconds


NOTE: Remote submit to HOST complete.
NOTE: Remote submit to HOST commencing.
11492  data copy.Y12_save_smart_cum_rogers;
11493  set raj.Y12_save_smart_cum_rogers;
11494  run;

NOTE: There were 235428 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_ROGERS.
NOTE: The data set COPY.Y12_SAVE_SMART_CUM_ROGERS has 235428 observations and 66 variables.
NOTE: DATA statement used (Total process time):
      real time           2.57 seconds
      cpu time            1.34 seconds


NOTE: Remote submit to HOST complete.
7121
7122
7123   /*libname local "\\Drwiblr0105\CostOfSave\SAS_Datasets ";*/
7124
7125
7126   proc freq data=raj.y12_save_smart_cum_rogers (where=(week=12));
7127   table seg_sub_group;
7128   run;

NOTE: There were 15329 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_ROGERS.
      WHERE week=12;
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.40 seconds
      cpu time            0.09 seconds


7129
7130   proc freq data=raj.y12_save_smart_cum_fido(where=(week=12));
7131   table seg_sub_group;
7132   run;

NOTE: There were 24801 observations read from the data set RAJ.Y12_SAVE_SMART_CUM_FIDO.
      WHERE week=12;
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.42 seconds
      cpu time            0.04 seconds


7133
7134   proc freq data=raj.Week_SmartLast_Rogers;
7135   table Week TransactionDate;
7136   run;

NOTE: There were 15329 observations read from the data set RAJ.WEEK_SMARTLAST_ROGERS.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.23 seconds
      cpu time            0.04 seconds


